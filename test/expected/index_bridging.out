CREATE SCHEMA index_bridging;
SET SESSION search_path = 'index_bridging';
CREATE EXTENSION orioledb;
\set VERBOSITY terse
CREATE EXTENSION pageinspect;
\set VERBOSITY default
CREATE FUNCTION btree_index_content(index name)
	RETURNS TABLE (ctid tid, htid tid, tids tid[]) AS $$
	SELECT ctid, htid, tids FROM
			generate_series(2,
							(pg_relation_size(index::regclass) /
							current_setting('block_size')::BIGINT)) p,
			LATERAL bt_page_items(index, p - 1)
		ORDER BY ctid
$$ LANGUAGE SQL;
CREATE FUNCTION hash_index_content(index name) RETURNS TABLE (ctid tid) AS $$
	SELECT ctid FROM
		generate_series(2,
						(pg_relation_size(index::regclass) /
						 current_setting('block_size')::BIGINT)) p,
		LATERAL hash_page_type(get_raw_page(index, p - 1)) pt,
		LATERAL hash_page_items(get_raw_page(index, p - 1))
		WHERE pt = 'bucket'
		ORDER BY ctid
$$ LANGUAGE SQL;
CREATE FUNCTION gist_index_content(index name)
	RETURNS TABLE (ctid tid, keys text) AS $$
	SELECT ctid, keys FROM
			generate_series(1,
							(pg_relation_size(index::regclass) /
							current_setting('block_size')::BIGINT)) p,
			LATERAL gist_page_items(get_raw_page(index, p - 1), index::regclass)
		ORDER BY ctid
$$ LANGUAGE SQL;
CREATE TABLE o_test_ix_ams (
	i int NOT NULL,
	j int4[],
	p point,
	pk1 int,
	pk2 int
) USING orioledb;
SELECT orioledb_table_description('o_test_ix_ams'::regclass);
                orioledb_table_description                 
-----------------------------------------------------------
 Compress = -1, Primary compress = -1, TOAST compress = -1+
  Column |      Type | Collation | Nullable | Droped      +
       i |   integer |    (null) |    false |  false      +
       j | integer[] |    (null) |     true |  false      +
       p |     point |    (null) |     true |  false      +
     pk1 |   integer |    (null) |     true |  false      +
     pk2 |   integer |    (null) |     true |  false      +
 
(1 row)

\d+ o_test_ix_ams
                            Table "index_bridging.o_test_ix_ams"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
 pk1    | integer   |           |          |         | plain    |              | 
 pk2    | integer   |           |          |         | plain    |              | 

SELECT orioledb_tbl_indices('o_test_ix_ams'::regclass, true);
                orioledb_tbl_indices                 
-----------------------------------------------------
 Index ctid_primary                                 +
     Index type: primary, unique, ctid              +
     Leaf tuple size: 6, non-leaf tuple size: 1     +
     Non-leaf tuple fields: ctid                    +
     Leaf tuple fields: ctid, i, j, p, pk1, pk2     +
 Index toast                                        +
     Index type: secondary                          +
     Leaf tuple size: 4, non-leaf tuple size: 3     +
     Non-leaf tuple fields: ctid, attnum, chunknum  +
     Leaf tuple fields: ctid, attnum, chunknum, data+
 
(1 row)

INSERT INTO o_test_ix_ams VALUES (1, ARRAY[2,3], point(4, 5), 6, 7);
SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                            orioledb_tbl_structure                            
------------------------------------------------------------------------------
 Index ctid_primary contents                                                 +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                         +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty         +
     Leftmost, Rightmost                                                     +
   Chunk 0: offset = 0, location = 256, hikey location = 64                  +
     Item 0: offset = 264, tuple = ('(0,1)', '1', '{2,3}', '(4,5)', '6', '7')+
                                                                             +
 Index toast: not loaded                                                     +
 
(1 row)

EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams;
        QUERY PLAN         
---------------------------
 Seq Scan on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams;
 i |   j   |   p   | pk1 | pk2 
---+-------+-------+-----+-----
 1 | {2,3} | (4,5) |   6 |   7
(1 row)

SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                            orioledb_tbl_structure                            
------------------------------------------------------------------------------
 Index ctid_primary contents                                                 +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                         +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty         +
     Leftmost, Rightmost                                                     +
   Chunk 0: offset = 0, location = 256, hikey location = 64                  +
     Item 0: offset = 264, tuple = ('(0,1)', '1', '{2,3}', '(4,5)', '6', '7')+
                                                                             +
 Index toast: not loaded                                                     +
 
(1 row)

CREATE INDEX o_test_ix_ams_ix1 on o_test_ix_ams using btree (j) WITH (orioledb_index = off, deduplicate_items = off);
WARNING:  using bridged btree index for orioledb
DETAIL:  This feature is intended for testing purposes and is not recommended for normal usage.
NOTICE:  index bridging is enabled for orioledb table 'o_test_ix_ams'
DETAIL:  index access method 'btree' is requested with index bridging for OrioleDB table
SELECT * FROM btree_index_content('o_test_ix_ams_ix1');
 ctid  | htid  | tids 
-------+-------+------
 (0,1) | (0,1) | 
(1 row)

\d+ o_test_ix_ams
                            Table "index_bridging.o_test_ix_ams"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
 pk1    | integer   |           |          |         | plain    |              | 
 pk2    | integer   |           |          |         | plain    |              | 
Indexes:
    "o_test_ix_ams_ix1" btree (j) WITH (orioledb_index=off, deduplicate_items=off)
Options: index_bridging=true

SELECT orioledb_tbl_indices('o_test_ix_ams'::regclass, true);
                        orioledb_tbl_indices                         
---------------------------------------------------------------------
 Index ctid_primary                                                 +
     Index type: primary, unique, ctid                              +
     Leaf tuple size: 7, non-leaf tuple size: 1                     +
     Non-leaf tuple fields: ctid                                    +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j, p, pk1, pk2+
 Index index_bridge                                                 +
     Index type: secondary                                          +
     Leaf tuple size: 2, non-leaf tuple size: 1                     +
     Non-leaf tuple fields: index_bridging_ctid                     +
     Leaf tuple fields: index_bridging_ctid, ctid                   +
 Index toast                                                        +
     Index type: secondary                                          +
     Leaf tuple size: 4, non-leaf tuple size: 3                     +
     Non-leaf tuple fields: ctid, attnum, chunknum                  +
     Leaf tuple fields: ctid, attnum, chunknum, data                +
 
(1 row)

SELECT * FROM btree_index_content('o_test_ix_ams_ix1');
 ctid  | htid  | tids 
-------+-------+------
 (0,1) | (0,1) | 
(1 row)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams ORDER BY j;
                     QUERY PLAN                      
-----------------------------------------------------
 Index Scan using o_test_ix_ams_ix1 on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams ORDER BY j;
 i |   j   |   p   | pk1 | pk2 
---+-------+-------+-----+-----
 1 | {2,3} | (4,5) |   6 |   7
(1 row)

COMMIT;
SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                orioledb_tbl_structure                                 
---------------------------------------------------------------------------------------
 Index ctid_primary contents                                                          +
 Page 0: level = 0, maxKeyLen = 6, nVacatedBytes = 0                                  +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                  +
     Leftmost, Rightmost                                                              +
   Chunk 0: offset = 0, location = 256, hikey location = 64                           +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)', '1', '{2,3}', '(4,5)', '6', '7')+
                                                                                      +
 Index index_bridge contents                                                          +
 Page 0: level = 0, maxKeyLen = 6, nVacatedBytes = 0                                  +
 state = free, datoid equal, relnode equal, ix_type = bridge, clean                   +
     Leftmost, Rightmost                                                              +
   Chunk 0: offset = 0, location = 256, hikey location = 64                           +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)')                                 +
                                                                                      +
 Index toast: not loaded                                                              +
 
(1 row)

INSERT INTO o_test_ix_ams VALUES (10, ARRAY[20,30], point(40, 50), 60, 70);
SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                    orioledb_tbl_structure                                    
----------------------------------------------------------------------------------------------
 Index ctid_primary contents                                                                 +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                         +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                         +
     Leftmost, Rightmost                                                                     +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                  +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)', '1', '{2,3}', '(4,5)', '6', '7')       +
     Item 1: offset = 360, tuple = ('(0,2)', '(0,2)', '10', '{20,30}', '(40,50)', '60', '70')+
                                                                                             +
 Index index_bridge contents                                                                 +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                         +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty                          +
     Leftmost, Rightmost                                                                     +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                  +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)')                                        +
     Item 1: offset = 296, tuple = ('(0,2)', '(0,2)')                                        +
                                                                                             +
 Index toast: not loaded                                                                     +
 
(1 row)

SELECT * FROM btree_index_content('o_test_ix_ams_ix1');
 ctid  | htid  | tids 
-------+-------+------
 (0,1) | (0,1) | 
 (0,2) | (0,2) | 
(2 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams ORDER BY j;
                     QUERY PLAN                      
-----------------------------------------------------
 Index Scan using o_test_ix_ams_ix1 on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams ORDER BY j;
 i  |    j    |    p    | pk1 | pk2 
----+---------+---------+-----+-----
  1 | {2,3}   | (4,5)   |   6 |   7
 10 | {20,30} | (40,50) |  60 |  70
(2 rows)

EXPLAIN (COSTS OFF)
	SELECT j FROM o_test_ix_ams ORDER BY j;
                        QUERY PLAN                        
----------------------------------------------------------
 Index Only Scan using o_test_ix_ams_ix1 on o_test_ix_ams
(1 row)

SELECT j FROM o_test_ix_ams ORDER BY j;
    j    
---------
 {2,3}
 {20,30}
(2 rows)

COMMIT;
SELECT orioledb_tbl_indices('o_test_ix_ams'::regclass, true);
                        orioledb_tbl_indices                         
---------------------------------------------------------------------
 Index ctid_primary                                                 +
     Index type: primary, unique, ctid                              +
     Leaf tuple size: 7, non-leaf tuple size: 1                     +
     Non-leaf tuple fields: ctid                                    +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j, p, pk1, pk2+
 Index index_bridge                                                 +
     Index type: secondary                                          +
     Leaf tuple size: 2, non-leaf tuple size: 1                     +
     Non-leaf tuple fields: index_bridging_ctid                     +
     Leaf tuple fields: index_bridging_ctid, ctid                   +
 Index toast                                                        +
     Index type: secondary                                          +
     Leaf tuple size: 4, non-leaf tuple size: 3                     +
     Non-leaf tuple fields: ctid, attnum, chunknum                  +
     Leaf tuple fields: ctid, attnum, chunknum, data                +
 
(1 row)

ALTER TABLE o_test_ix_ams ADD PRIMARY KEY (pk2, pk1);
SELECT orioledb_tbl_indices('o_test_ix_ams'::regclass, true);
                     orioledb_tbl_indices                      
---------------------------------------------------------------
 Index o_test_ix_ams_pkey                                     +
     Index type: primary, unique                              +
     Leaf tuple size: 6, non-leaf tuple size: 2               +
     Non-leaf tuple fields: pk2, pk1                          +
     Leaf tuple fields: index_bridging_ctid, i, j, p, pk1, pk2+
 Index index_bridge                                           +
     Index type: secondary                                    +
     Leaf tuple size: 3, non-leaf tuple size: 1               +
     Non-leaf tuple fields: index_bridging_ctid               +
     Leaf tuple fields: index_bridging_ctid, pk2, pk1         +
 Index toast                                                  +
     Index type: secondary                                    +
     Leaf tuple size: 5, non-leaf tuple size: 4               +
     Non-leaf tuple fields: pk2, pk1, attnum, chunknum        +
     Leaf tuple fields: pk2, pk1, attnum, chunknum, data      +
 
(1 row)

SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                               orioledb_tbl_structure                                
-------------------------------------------------------------------------------------
 Index o_test_ix_ams_pkey contents                                                  +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                +
     Leftmost, Rightmost                                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey = ('70', '60')   +
     Item 0: offset = 264, tuple = ('(0,1)', '1', '{2,3}', '(4,5)', '6', '7')       +
   Chunk 1: offset = 1, location = 360, hikey location = 72                         +
     Item 1: offset = 368, tuple = ('(0,2)', '10', '{20,30}', '(40,50)', '60', '70')+
                                                                                    +
 Index index_bridge: not loaded                                                     +
 Index toast: not loaded                                                            +
 
(1 row)

EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams;
        QUERY PLAN         
---------------------------
 Seq Scan on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams;
 i  |    j    |    p    | pk1 | pk2 
----+---------+---------+-----+-----
  1 | {2,3}   | (4,5)   |   6 |   7
 10 | {20,30} | (40,50) |  60 |  70
(2 rows)

SELECT * FROM btree_index_content('o_test_ix_ams_ix1');
 ctid  | htid  | tids 
-------+-------+------
 (0,1) | (0,1) | 
 (0,2) | (0,2) | 
(2 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams ORDER BY j;
                     QUERY PLAN                      
-----------------------------------------------------
 Index Scan using o_test_ix_ams_ix1 on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams ORDER BY j;
 i  |    j    |    p    | pk1 | pk2 
----+---------+---------+-----+-----
  1 | {2,3}   | (4,5)   |   6 |   7
 10 | {20,30} | (40,50) |  60 |  70
(2 rows)

COMMIT;
SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                               orioledb_tbl_structure                                
-------------------------------------------------------------------------------------
 Index o_test_ix_ams_pkey contents                                                  +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                +
     Leftmost, Rightmost                                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey = ('70', '60')   +
     Item 0: offset = 264, tuple = ('(0,1)', '1', '{2,3}', '(4,5)', '6', '7')       +
   Chunk 1: offset = 1, location = 360, hikey location = 72                         +
     Item 1: offset = 368, tuple = ('(0,2)', '10', '{20,30}', '(40,50)', '60', '70')+
                                                                                    +
 Index index_bridge contents                                                        +
 Page 0: level = 0, maxKeyLen = 6, nVacatedBytes = 0                                +
 state = free, datoid equal, relnode equal, ix_type = bridge, clean                 +
     Leftmost, Rightmost                                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey = ('(0,2)')      +
     Item 0: offset = 264, tuple = ('(0,1)', '7', '6')                              +
   Chunk 1: offset = 1, location = 296, hikey location = 72                         +
     Item 1: offset = 304, tuple = ('(0,2)', '70', '60')                            +
                                                                                    +
 Index toast: not loaded                                                            +
 
(1 row)

INSERT INTO o_test_ix_ams VALUES (100, ARRAY[200,300], point(400, 500), 600, 700);
SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                   orioledb_tbl_structure                                   
--------------------------------------------------------------------------------------------
 Index o_test_ix_ams_pkey contents                                                         +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                       +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                       +
     Leftmost, Rightmost                                                                   +
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey = ('70', '60')          +
     Item 0: offset = 264, tuple = ('(0,1)', '1', '{2,3}', '(4,5)', '6', '7')              +
   Chunk 1: offset = 1, location = 360, hikey location = 72                                +
     Item 1: offset = 368, tuple = ('(0,2)', '10', '{20,30}', '(40,50)', '60', '70')       +
     Item 2: offset = 464, tuple = ('(0,3)', '100', '{200,300}', '(400,500)', '600', '700')+
                                                                                           +
 Index index_bridge contents                                                               +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                       +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty                        +
     Leftmost, Rightmost                                                                   +
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey = ('(0,2)')             +
     Item 0: offset = 264, tuple = ('(0,1)', '7', '6')                                     +
   Chunk 1: offset = 1, location = 296, hikey location = 72                                +
     Item 1: offset = 304, tuple = ('(0,2)', '70', '60')                                   +
     Item 2: offset = 336, tuple = ('(0,3)', '700', '600')                                 +
                                                                                           +
 Index toast: not loaded                                                                   +
 
(1 row)

EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams;
        QUERY PLAN         
---------------------------
 Seq Scan on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams;
  i  |     j     |     p     | pk1 | pk2 
-----+-----------+-----------+-----+-----
   1 | {2,3}     | (4,5)     |   6 |   7
  10 | {20,30}   | (40,50)   |  60 |  70
 100 | {200,300} | (400,500) | 600 | 700
(3 rows)

SELECT * FROM btree_index_content('o_test_ix_ams_ix1');
 ctid  | htid  | tids 
-------+-------+------
 (0,1) | (0,1) | 
 (0,2) | (0,2) | 
 (0,3) | (0,3) | 
(3 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams ORDER BY j;
                     QUERY PLAN                      
-----------------------------------------------------
 Index Scan using o_test_ix_ams_ix1 on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams ORDER BY j;
  i  |     j     |     p     | pk1 | pk2 
-----+-----------+-----------+-----+-----
   1 | {2,3}     | (4,5)     |   6 |   7
  10 | {20,30}   | (40,50)   |  60 |  70
 100 | {200,300} | (400,500) | 600 | 700
(3 rows)

COMMIT;
SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                   orioledb_tbl_structure                                   
--------------------------------------------------------------------------------------------
 Index o_test_ix_ams_pkey contents                                                         +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                       +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                       +
     Leftmost, Rightmost                                                                   +
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey = ('70', '60')          +
     Item 0: offset = 264, tuple = ('(0,1)', '1', '{2,3}', '(4,5)', '6', '7')              +
   Chunk 1: offset = 1, location = 360, hikey location = 72                                +
     Item 1: offset = 368, tuple = ('(0,2)', '10', '{20,30}', '(40,50)', '60', '70')       +
     Item 2: offset = 464, tuple = ('(0,3)', '100', '{200,300}', '(400,500)', '600', '700')+
                                                                                           +
 Index index_bridge contents                                                               +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                       +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty                        +
     Leftmost, Rightmost                                                                   +
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey = ('(0,2)')             +
     Item 0: offset = 264, tuple = ('(0,1)', '7', '6')                                     +
   Chunk 1: offset = 1, location = 296, hikey location = 72                                +
     Item 1: offset = 304, tuple = ('(0,2)', '70', '60')                                   +
     Item 2: offset = 336, tuple = ('(0,3)', '700', '600')                                 +
                                                                                           +
 Index toast: not loaded                                                                   +
 
(1 row)

SELECT orioledb_tbl_indices('o_test_ix_ams'::regclass, true);
                     orioledb_tbl_indices                      
---------------------------------------------------------------
 Index o_test_ix_ams_pkey                                     +
     Index type: primary, unique                              +
     Leaf tuple size: 6, non-leaf tuple size: 2               +
     Non-leaf tuple fields: pk2, pk1                          +
     Leaf tuple fields: index_bridging_ctid, i, j, p, pk1, pk2+
 Index index_bridge                                           +
     Index type: secondary                                    +
     Leaf tuple size: 3, non-leaf tuple size: 1               +
     Non-leaf tuple fields: index_bridging_ctid               +
     Leaf tuple fields: index_bridging_ctid, pk2, pk1         +
 Index toast                                                  +
     Index type: secondary                                    +
     Leaf tuple size: 5, non-leaf tuple size: 4               +
     Non-leaf tuple fields: pk2, pk1, attnum, chunknum        +
     Leaf tuple fields: pk2, pk1, attnum, chunknum, data      +
 
(1 row)

ALTER TABLE o_test_ix_ams DROP CONSTRAINT o_test_ix_ams_pkey;
SELECT orioledb_tbl_indices('o_test_ix_ams'::regclass, true);
                        orioledb_tbl_indices                         
---------------------------------------------------------------------
 Index ctid_primary                                                 +
     Index type: primary, unique, ctid                              +
     Leaf tuple size: 7, non-leaf tuple size: 1                     +
     Non-leaf tuple fields: ctid                                    +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j, p, pk1, pk2+
 Index index_bridge                                                 +
     Index type: secondary                                          +
     Leaf tuple size: 2, non-leaf tuple size: 1                     +
     Non-leaf tuple fields: index_bridging_ctid                     +
     Leaf tuple fields: index_bridging_ctid, ctid                   +
 Index toast                                                        +
     Index type: secondary                                          +
     Leaf tuple size: 4, non-leaf tuple size: 3                     +
     Non-leaf tuple fields: ctid, attnum, chunknum                  +
     Leaf tuple fields: ctid, attnum, chunknum, data                +
 
(1 row)

EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams;
        QUERY PLAN         
---------------------------
 Seq Scan on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams;
  i  |     j     |     p     | pk1 | pk2 
-----+-----------+-----------+-----+-----
   1 | {2,3}     | (4,5)     |   6 |   7
  10 | {20,30}   | (40,50)   |  60 |  70
 100 | {200,300} | (400,500) | 600 | 700
(3 rows)

SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                       orioledb_tbl_structure                                        
-----------------------------------------------------------------------------------------------------
 Index ctid_primary contents                                                                        +
 Page 0: level = 0, maxKeyLen = 6, nVacatedBytes = 0                                                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                                +
     Leftmost, Rightmost                                                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 72, hikey = ('(0,2)')                      +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)', '1', '{2,3}', '(4,5)', '6', '7')              +
   Chunk 1: offset = 1, location = 360, hikey location = 80, hikey = ('(0,3)')                      +
     Item 1: offset = 368, tuple = ('(0,2)', '(0,2)', '10', '{20,30}', '(40,50)', '60', '70')       +
   Chunk 2: offset = 2, location = 464, hikey location = 88                                         +
     Item 2: offset = 472, tuple = ('(0,3)', '(0,3)', '100', '{200,300}', '(400,500)', '600', '700')+
                                                                                                    +
 Index index_bridge: not loaded                                                                     +
 Index toast: not loaded                                                                            +
 
(1 row)

SELECT * FROM btree_index_content('o_test_ix_ams_ix1');
 ctid  | htid  | tids 
-------+-------+------
 (0,1) | (0,1) | 
 (0,2) | (0,2) | 
 (0,3) | (0,3) | 
(3 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams ORDER BY j;
                     QUERY PLAN                      
-----------------------------------------------------
 Index Scan using o_test_ix_ams_ix1 on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams ORDER BY j;
  i  |     j     |     p     | pk1 | pk2 
-----+-----------+-----------+-----+-----
   1 | {2,3}     | (4,5)     |   6 |   7
  10 | {20,30}   | (40,50)   |  60 |  70
 100 | {200,300} | (400,500) | 600 | 700
(3 rows)

COMMIT;
SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                       orioledb_tbl_structure                                        
-----------------------------------------------------------------------------------------------------
 Index ctid_primary contents                                                                        +
 Page 0: level = 0, maxKeyLen = 6, nVacatedBytes = 0                                                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                                +
     Leftmost, Rightmost                                                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 72, hikey = ('(0,2)')                      +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)', '1', '{2,3}', '(4,5)', '6', '7')              +
   Chunk 1: offset = 1, location = 360, hikey location = 80, hikey = ('(0,3)')                      +
     Item 1: offset = 368, tuple = ('(0,2)', '(0,2)', '10', '{20,30}', '(40,50)', '60', '70')       +
   Chunk 2: offset = 2, location = 464, hikey location = 88                                         +
     Item 2: offset = 472, tuple = ('(0,3)', '(0,3)', '100', '{200,300}', '(400,500)', '600', '700')+
                                                                                                    +
 Index index_bridge contents                                                                        +
 Page 0: level = 0, maxKeyLen = 6, nVacatedBytes = 0                                                +
 state = free, datoid equal, relnode equal, ix_type = bridge, clean                                 +
     Leftmost, Rightmost                                                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 72, hikey = ('(0,2)')                      +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)')                                               +
   Chunk 1: offset = 1, location = 296, hikey location = 80, hikey = ('(0,3)')                      +
     Item 1: offset = 304, tuple = ('(0,2)', '(0,2)')                                               +
   Chunk 2: offset = 2, location = 336, hikey location = 88                                         +
     Item 2: offset = 344, tuple = ('(0,3)', '(0,3)')                                               +
                                                                                                    +
 Index toast: not loaded                                                                            +
 
(1 row)

SELECT orioledb_table_description('o_test_ix_ams'::regclass);
                orioledb_table_description                 
-----------------------------------------------------------
 Compress = -1, Primary compress = -1, TOAST compress = -1+
  Column |      Type | Collation | Nullable | Droped      +
       i |   integer |    (null) |    false |  false      +
       j | integer[] |    (null) |     true |  false      +
       p |     point |    (null) |     true |  false      +
     pk1 |   integer |    (null) |    false |  false      +
     pk2 |   integer |    (null) |    false |  false      +
 
(1 row)

SELECT orioledb_tbl_indices('o_test_ix_ams'::regclass, true);
                        orioledb_tbl_indices                         
---------------------------------------------------------------------
 Index ctid_primary                                                 +
     Index type: primary, unique, ctid                              +
     Leaf tuple size: 7, non-leaf tuple size: 1                     +
     Non-leaf tuple fields: ctid                                    +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j, p, pk1, pk2+
 Index index_bridge                                                 +
     Index type: secondary                                          +
     Leaf tuple size: 2, non-leaf tuple size: 1                     +
     Non-leaf tuple fields: index_bridging_ctid                     +
     Leaf tuple fields: index_bridging_ctid, ctid                   +
 Index toast                                                        +
     Index type: secondary                                          +
     Leaf tuple size: 4, non-leaf tuple size: 3                     +
     Non-leaf tuple fields: ctid, attnum, chunknum                  +
     Leaf tuple fields: ctid, attnum, chunknum, data                +
 
(1 row)

ALTER TABLE o_test_ix_ams ALTER j TYPE int USING 200-j[1];
SELECT orioledb_table_description('o_test_ix_ams'::regclass);
                orioledb_table_description                 
-----------------------------------------------------------
 Compress = -1, Primary compress = -1, TOAST compress = -1+
  Column |    Type | Collation | Nullable | Droped        +
       i | integer |    (null) |    false |  false        +
       j | integer |    (null) |     true |  false        +
       p |   point |    (null) |     true |  false        +
     pk1 | integer |    (null) |    false |  false        +
     pk2 | integer |    (null) |    false |  false        +
 
(1 row)

SELECT orioledb_tbl_indices('o_test_ix_ams'::regclass, true);
                        orioledb_tbl_indices                         
---------------------------------------------------------------------
 Index ctid_primary                                                 +
     Index type: primary, unique, ctid                              +
     Leaf tuple size: 7, non-leaf tuple size: 1                     +
     Non-leaf tuple fields: ctid                                    +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j, p, pk1, pk2+
 Index index_bridge                                                 +
     Index type: secondary                                          +
     Leaf tuple size: 2, non-leaf tuple size: 1                     +
     Non-leaf tuple fields: index_bridging_ctid                     +
     Leaf tuple fields: index_bridging_ctid, ctid                   +
 Index toast                                                        +
     Index type: secondary                                          +
     Leaf tuple size: 4, non-leaf tuple size: 3                     +
     Non-leaf tuple fields: ctid, attnum, chunknum                  +
     Leaf tuple fields: ctid, attnum, chunknum, data                +
 
(1 row)

EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams;
        QUERY PLAN         
---------------------------
 Seq Scan on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams;
  i  |  j  |     p     | pk1 | pk2 
-----+-----+-----------+-----+-----
   1 | 198 | (4,5)     |   6 |   7
  10 | 180 | (40,50)   |  60 |  70
 100 |   0 | (400,500) | 600 | 700
(3 rows)

SELECT * FROM btree_index_content('o_test_ix_ams_ix1');
 ctid  | htid  | tids 
-------+-------+------
 (0,1) | (0,1) | 
 (0,2) | (0,2) | 
 (0,3) | (0,3) | 
(3 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams ORDER BY j;
                     QUERY PLAN                      
-----------------------------------------------------
 Index Scan using o_test_ix_ams_ix1 on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams ORDER BY j;
  i  |  j  |     p     | pk1 | pk2 
-----+-----+-----------+-----+-----
 100 |   0 | (400,500) | 600 | 700
  10 | 180 | (40,50)   |  60 |  70
   1 | 198 | (4,5)     |   6 |   7
(3 rows)

COMMIT;
SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                   orioledb_tbl_structure                                    
---------------------------------------------------------------------------------------------
 Index ctid_primary contents                                                                +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                        +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                        +
     Leftmost, Rightmost                                                                    +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                 +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)', '1', '198', '(4,5)', '6', '7')        +
     Item 1: offset = 336, tuple = ('(0,2)', '(0,2)', '10', '180', '(40,50)', '60', '70')   +
     Item 2: offset = 408, tuple = ('(0,3)', '(0,3)', '100', '0', '(400,500)', '600', '700')+
                                                                                            +
 Index index_bridge contents                                                                +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                        +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty                         +
     Leftmost, Rightmost                                                                    +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                 +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)')                                       +
     Item 1: offset = 296, tuple = ('(0,2)', '(0,2)')                                       +
     Item 2: offset = 328, tuple = ('(0,3)', '(0,3)')                                       +
                                                                                            +
 Index toast: not loaded                                                                    +
 
(1 row)

ALTER TABLE o_test_ix_ams ADD COLUMN k int;
SELECT orioledb_tbl_indices('o_test_ix_ams'::regclass, true);
                          orioledb_tbl_indices                          
------------------------------------------------------------------------
 Index ctid_primary                                                    +
     Index type: primary, unique, ctid                                 +
     Leaf tuple size: 8, non-leaf tuple size: 1                        +
     Non-leaf tuple fields: ctid                                       +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j, p, pk1, pk2, k+
 Index index_bridge                                                    +
     Index type: secondary                                             +
     Leaf tuple size: 2, non-leaf tuple size: 1                        +
     Non-leaf tuple fields: index_bridging_ctid                        +
     Leaf tuple fields: index_bridging_ctid, ctid                      +
 Index toast                                                           +
     Index type: secondary                                             +
     Leaf tuple size: 4, non-leaf tuple size: 3                        +
     Non-leaf tuple fields: ctid, attnum, chunknum                     +
     Leaf tuple fields: ctid, attnum, chunknum, data                   +
 
(1 row)

SELECT * FROM btree_index_content('o_test_ix_ams_ix1');
 ctid  | htid  | tids 
-------+-------+------
 (0,1) | (0,1) | 
 (0,2) | (0,2) | 
 (0,3) | (0,3) | 
(3 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams ORDER BY j;
                     QUERY PLAN                      
-----------------------------------------------------
 Index Scan using o_test_ix_ams_ix1 on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams ORDER BY j;
  i  |  j  |     p     | pk1 | pk2 | k 
-----+-----+-----------+-----+-----+---
 100 |   0 | (400,500) | 600 | 700 |  
  10 | 180 | (40,50)   |  60 |  70 |  
   1 | 198 | (4,5)     |   6 |   7 |  
(3 rows)

COMMIT;
SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                      orioledb_tbl_structure                                       
---------------------------------------------------------------------------------------------------
 Index ctid_primary contents                                                                      +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                              +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                              +
     Leftmost, Rightmost                                                                          +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                       +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)', '1', '198', '(4,5)', '6', '7', null)        +
     Item 1: offset = 336, tuple = ('(0,2)', '(0,2)', '10', '180', '(40,50)', '60', '70', null)   +
     Item 2: offset = 408, tuple = ('(0,3)', '(0,3)', '100', '0', '(400,500)', '600', '700', null)+
                                                                                                  +
 Index index_bridge contents                                                                      +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                              +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty                               +
     Leftmost, Rightmost                                                                          +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                       +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)')                                             +
     Item 1: offset = 296, tuple = ('(0,2)', '(0,2)')                                             +
     Item 2: offset = 328, tuple = ('(0,3)', '(0,3)')                                             +
                                                                                                  +
 Index toast: not loaded                                                                          +
 
(1 row)

\d+ o_test_ix_ams
                           Table "index_bridging.o_test_ix_ams"
 Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
--------+---------+-----------+----------+---------+---------+--------------+-------------
 i      | integer |           | not null |         | plain   |              | 
 j      | integer |           |          |         | plain   |              | 
 p      | point   |           |          |         | plain   |              | 
 pk1    | integer |           | not null |         | plain   |              | 
 pk2    | integer |           | not null |         | plain   |              | 
 k      | integer |           |          |         | plain   |              | 
Indexes:
    "o_test_ix_ams_ix1" btree (j) WITH (orioledb_index=off, deduplicate_items=off)
Options: index_bridging=true

-- Don't update bridge_index when updated column not indexed by any bridged index
UPDATE o_test_ix_ams SET p = point(i * 40 + 1, i * 5);
SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                       orioledb_tbl_structure                                       
----------------------------------------------------------------------------------------------------
 Index ctid_primary contents                                                                       +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                               +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                               +
     Leftmost, Rightmost                                                                           +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                        +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)', '1', '198', '(41,5)', '6', '7', null)        +
     Item 1: offset = 344, tuple = ('(0,2)', '(0,2)', '10', '180', '(401,50)', '60', '70', null)   +
     Item 2: offset = 424, tuple = ('(0,3)', '(0,3)', '100', '0', '(4001,500)', '600', '700', null)+
                                                                                                   +
 Index index_bridge contents                                                                       +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                               +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty                                +
     Leftmost, Rightmost                                                                           +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                        +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)')                                              +
     Item 1: offset = 296, tuple = ('(0,2)', '(0,2)')                                              +
     Item 2: offset = 328, tuple = ('(0,3)', '(0,3)')                                              +
                                                                                                   +
 Index toast: not loaded                                                                           +
 
(1 row)

SELECT * FROM btree_index_content('o_test_ix_ams_ix1');
 ctid  | htid  | tids 
-------+-------+------
 (0,1) | (0,1) | 
 (0,2) | (0,2) | 
 (0,3) | (0,3) | 
(3 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams ORDER BY j;
                     QUERY PLAN                      
-----------------------------------------------------
 Index Scan using o_test_ix_ams_ix1 on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams ORDER BY j;
  i  |  j  |     p      | pk1 | pk2 | k 
-----+-----+------------+-----+-----+---
 100 |   0 | (4001,500) | 600 | 700 |  
  10 | 180 | (401,50)   |  60 |  70 |  
   1 | 198 | (41,5)     |   6 |   7 |  
(3 rows)

COMMIT;
-- Now it should update bridging_ctid-s
UPDATE o_test_ix_ams SET j = j/2 + 1000;
SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                        orioledb_tbl_structure                                         
-------------------------------------------------------------------------------------------------------
 Index ctid_primary contents                                                                          +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                                  +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                                  +
     Leftmost, Rightmost                                                                              +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                           +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,4)', '1', '1099', '(41,5)', '6', '7', null)          +
     Item 1: offset = 344, tuple = ('(0,2)', '(0,5)', '10', '1090', '(401,50)', '60', '70', null)     +
     Item 2: offset = 424, tuple = ('(0,3)', '(0,6)', '100', '1000', '(4001,500)', '600', '700', null)+
                                                                                                      +
 Index index_bridge contents                                                                          +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                                  +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty                                   +
     Leftmost, Rightmost                                                                              +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                           +
     Item 0: deleted, offset = 272, tuple = ('(0,1)', '(0,1)')                                        +
     Item 1: deleted, offset = 304, tuple = ('(0,2)', '(0,2)')                                        +
     Item 2: deleted, offset = 336, tuple = ('(0,3)', '(0,3)')                                        +
     Item 3: offset = 368, tuple = ('(0,4)', '(0,1)')                                                 +
     Item 4: offset = 400, tuple = ('(0,5)', '(0,2)')                                                 +
     Item 5: offset = 432, tuple = ('(0,6)', '(0,3)')                                                 +
                                                                                                      +
 Index toast: not loaded                                                                              +
 
(1 row)

-- Rows with new bridging_ctid now not stored in o_test_ix_ams_ix1
SELECT * FROM btree_index_content('o_test_ix_ams_ix1');
 ctid  | htid  | tids 
-------+-------+------
 (0,1) | (0,1) | 
 (0,2) | (0,2) | 
 (0,3) | (0,3) | 
(3 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams ORDER BY j;
                     QUERY PLAN                      
-----------------------------------------------------
 Index Scan using o_test_ix_ams_ix1 on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams ORDER BY j;
 i | j | p | pk1 | pk2 | k 
---+---+---+-----+-----+---
(0 rows)

COMMIT;
-- After reindex new rows should be visible
REINDEX INDEX o_test_ix_ams_ix1;
SELECT * FROM btree_index_content('o_test_ix_ams_ix1');
 ctid  | htid  | tids 
-------+-------+------
 (0,4) | (0,4) | 
 (0,5) | (0,5) | 
 (0,6) | (0,6) | 
(3 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams ORDER BY j;
                     QUERY PLAN                      
-----------------------------------------------------
 Index Scan using o_test_ix_ams_ix1 on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams ORDER BY j;
  i  |  j   |     p      | pk1 | pk2 | k 
-----+------+------------+-----+-----+---
 100 | 1000 | (4001,500) | 600 | 700 |  
  10 | 1090 | (401,50)   |  60 |  70 |  
   1 | 1099 | (41,5)     |   6 |   7 |  
(3 rows)

COMMIT;
CREATE INDEX o_test_ix_ams_ix2 on o_test_ix_ams using btree (k) WITH (orioledb_index = off, deduplicate_items = off);
WARNING:  using bridged btree index for orioledb
DETAIL:  This feature is intended for testing purposes and is not recommended for normal usage.
SELECT orioledb_tbl_indices('o_test_ix_ams'::regclass, true);
                          orioledb_tbl_indices                          
------------------------------------------------------------------------
 Index ctid_primary                                                    +
     Index type: primary, unique, ctid                                 +
     Leaf tuple size: 8, non-leaf tuple size: 1                        +
     Non-leaf tuple fields: ctid                                       +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j, p, pk1, pk2, k+
 Index index_bridge                                                    +
     Index type: secondary                                             +
     Leaf tuple size: 2, non-leaf tuple size: 1                        +
     Non-leaf tuple fields: index_bridging_ctid                        +
     Leaf tuple fields: index_bridging_ctid, ctid                      +
 Index toast                                                           +
     Index type: secondary                                             +
     Leaf tuple size: 4, non-leaf tuple size: 3                        +
     Non-leaf tuple fields: ctid, attnum, chunknum                     +
     Leaf tuple fields: ctid, attnum, chunknum, data                   +
 
(1 row)

SELECT * FROM btree_index_content('o_test_ix_ams_ix2');
 ctid  | htid  | tids 
-------+-------+------
 (0,4) | (0,4) | 
 (0,5) | (0,5) | 
 (0,6) | (0,6) | 
(3 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams ORDER BY k;
                     QUERY PLAN                      
-----------------------------------------------------
 Index Scan using o_test_ix_ams_ix2 on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams ORDER BY k;
  i  |  j   |     p      | pk1 | pk2 | k 
-----+------+------------+-----+-----+---
   1 | 1099 | (41,5)     |   6 |   7 |  
  10 | 1090 | (401,50)   |  60 |  70 |  
 100 | 1000 | (4001,500) | 600 | 700 |  
(3 rows)

COMMIT;
SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                        orioledb_tbl_structure                                         
-------------------------------------------------------------------------------------------------------
 Index ctid_primary contents                                                                          +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                                  +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                                  +
     Leftmost, Rightmost                                                                              +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                           +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,4)', '1', '1099', '(41,5)', '6', '7', null)          +
     Item 1: offset = 344, tuple = ('(0,2)', '(0,5)', '10', '1090', '(401,50)', '60', '70', null)     +
     Item 2: offset = 424, tuple = ('(0,3)', '(0,6)', '100', '1000', '(4001,500)', '600', '700', null)+
                                                                                                      +
 Index index_bridge contents                                                                          +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                                  +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty                                   +
     Leftmost, Rightmost                                                                              +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                           +
     Item 0: deleted, offset = 272, tuple = ('(0,1)', '(0,1)')                                        +
     Item 1: deleted, offset = 304, tuple = ('(0,2)', '(0,2)')                                        +
     Item 2: deleted, offset = 336, tuple = ('(0,3)', '(0,3)')                                        +
     Item 3: offset = 368, tuple = ('(0,4)', '(0,1)')                                                 +
     Item 4: offset = 400, tuple = ('(0,5)', '(0,2)')                                                 +
     Item 5: offset = 432, tuple = ('(0,6)', '(0,3)')                                                 +
                                                                                                      +
 Index toast: not loaded                                                                              +
 
(1 row)

INSERT INTO o_test_ix_ams VALUES (1000, 2000, point(4000, 5000), 6000, 7000, 8000);
SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                           orioledb_tbl_structure                                            
-------------------------------------------------------------------------------------------------------------
 Index ctid_primary contents                                                                                +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                                        +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                                        +
     Leftmost, Rightmost                                                                                    +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                 +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,4)', '1', '1099', '(41,5)', '6', '7', null)                +
     Item 1: offset = 344, tuple = ('(0,2)', '(0,5)', '10', '1090', '(401,50)', '60', '70', null)           +
     Item 2: offset = 424, tuple = ('(0,3)', '(0,6)', '100', '1000', '(4001,500)', '600', '700', null)      +
     Item 3: offset = 504, tuple = ('(0,4)', '(0,7)', '1000', '2000', '(4000,5000)', '6000', '7000', '8000')+
                                                                                                            +
 Index index_bridge contents                                                                                +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                                        +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty                                         +
     Leftmost, Rightmost                                                                                    +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                 +
     Item 0: deleted, offset = 272, tuple = ('(0,1)', '(0,1)')                                              +
     Item 1: deleted, offset = 304, tuple = ('(0,2)', '(0,2)')                                              +
     Item 2: deleted, offset = 336, tuple = ('(0,3)', '(0,3)')                                              +
     Item 3: offset = 368, tuple = ('(0,4)', '(0,1)')                                                       +
     Item 4: offset = 400, tuple = ('(0,5)', '(0,2)')                                                       +
     Item 5: offset = 432, tuple = ('(0,6)', '(0,3)')                                                       +
     Item 6: offset = 464, tuple = ('(0,7)', '(0,4)')                                                       +
                                                                                                            +
 Index toast: not loaded                                                                                    +
 
(1 row)

SELECT * FROM btree_index_content('o_test_ix_ams_ix2');
 ctid  | htid  | tids 
-------+-------+------
 (0,4) | (0,4) | 
 (0,5) | (0,5) | 
 (0,6) | (0,6) | 
 (0,7) | (0,7) | 
(4 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams ORDER BY k;
                     QUERY PLAN                      
-----------------------------------------------------
 Index Scan using o_test_ix_ams_ix2 on o_test_ix_ams
(1 row)

SELECT * FROM o_test_ix_ams ORDER BY k;
  i   |  j   |      p      | pk1  | pk2  |  k   
------+------+-------------+------+------+------
 1000 | 2000 | (4000,5000) | 6000 | 7000 | 8000
    1 | 1099 | (41,5)      |    6 |    7 |     
   10 | 1090 | (401,50)    |   60 |   70 |     
  100 | 1000 | (4001,500)  |  600 |  700 |     
(4 rows)

COMMIT;
DROP INDEX o_test_ix_ams_ix2;
UPDATE o_test_ix_ams SET k = j WHERE i < 1000;
UPDATE o_test_ix_ams SET k = 8000 WHERE i = 1000;
CREATE INDEX o_test_ix_ams_hash_ix ON o_test_ix_ams USING hash (k);
\d+ o_test_ix_ams
                           Table "index_bridging.o_test_ix_ams"
 Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
--------+---------+-----------+----------+---------+---------+--------------+-------------
 i      | integer |           | not null |         | plain   |              | 
 j      | integer |           |          |         | plain   |              | 
 p      | point   |           |          |         | plain   |              | 
 pk1    | integer |           | not null |         | plain   |              | 
 pk2    | integer |           | not null |         | plain   |              | 
 k      | integer |           |          |         | plain   |              | 
Indexes:
    "o_test_ix_ams_hash_ix" hash (k)
    "o_test_ix_ams_ix1" btree (j) WITH (orioledb_index=off, deduplicate_items=off)
Options: index_bridging=true

SELECT orioledb_tbl_indices('o_test_ix_ams'::regclass, true);
                          orioledb_tbl_indices                          
------------------------------------------------------------------------
 Index ctid_primary                                                    +
     Index type: primary, unique, ctid                                 +
     Leaf tuple size: 8, non-leaf tuple size: 1                        +
     Non-leaf tuple fields: ctid                                       +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j, p, pk1, pk2, k+
 Index index_bridge                                                    +
     Index type: secondary                                             +
     Leaf tuple size: 2, non-leaf tuple size: 1                        +
     Non-leaf tuple fields: index_bridging_ctid                        +
     Leaf tuple fields: index_bridging_ctid, ctid                      +
 Index toast                                                           +
     Index type: secondary                                             +
     Leaf tuple size: 4, non-leaf tuple size: 3                        +
     Non-leaf tuple fields: ctid, attnum, chunknum                     +
     Leaf tuple fields: ctid, attnum, chunknum, data                   +
 
(1 row)

SELECT * FROM hash_index_content('o_test_ix_ams_hash_ix');
 ctid  
-------
 (0,4)
 (0,5)
 (0,6)
 (0,7)
(4 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams WHERE k = 8000;
                       QUERY PLAN                        
---------------------------------------------------------
 Index Scan using o_test_ix_ams_hash_ix on o_test_ix_ams
   Index Cond: (k = 8000)
(2 rows)

SELECT * FROM o_test_ix_ams WHERE k = 8000;
  i   |  j   |      p      | pk1  | pk2  |  k   
------+------+-------------+------+------+------
 1000 | 2000 | (4000,5000) | 6000 | 7000 | 8000
(1 row)

COMMIT;
-- Test bitmap scans
BEGIN;
SET LOCAL enable_seqscan = off;
SET LOCAL enable_indexscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams WHERE j < 2100;
                  QUERY PLAN                  
----------------------------------------------
 Custom Scan (o_scan) on o_test_ix_ams
   Bitmap heap scan
   Recheck Cond: (j < 2100)
   ->  Bitmap Index Scan on o_test_ix_ams_ix1
         Index Cond: (j < 2100)
(5 rows)

SELECT * FROM o_test_ix_ams WHERE j < 2100;
  i   |  j   |      p      | pk1  | pk2  |  k   
------+------+-------------+------+------+------
    1 | 1099 | (41,5)      |    6 |    7 | 1099
   10 | 1090 | (401,50)    |   60 |   70 | 1090
  100 | 1000 | (4001,500)  |  600 |  700 | 1000
 1000 | 2000 | (4000,5000) | 6000 | 7000 | 8000
(4 rows)

COMMIT;
BEGIN;
SET LOCAL enable_seqscan = off;
SET LOCAL enable_indexscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams WHERE k = 8000;
                    QUERY PLAN                    
--------------------------------------------------
 Custom Scan (o_scan) on o_test_ix_ams
   Bitmap heap scan
   Recheck Cond: (k = 8000)
   ->  Bitmap Index Scan on o_test_ix_ams_hash_ix
         Index Cond: (k = 8000)
(5 rows)

SELECT * FROM o_test_ix_ams WHERE k = 8000;
  i   |  j   |      p      | pk1  | pk2  |  k   
------+------+-------------+------+------+------
 1000 | 2000 | (4000,5000) | 6000 | 7000 | 8000
(1 row)

COMMIT;
SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                           orioledb_tbl_structure                                            
-------------------------------------------------------------------------------------------------------------
 Index ctid_primary contents                                                                                +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                                        +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                                        +
     Leftmost, Rightmost                                                                                    +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                 +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,4)', '1', '1099', '(41,5)', '6', '7', '1099')              +
     Item 1: offset = 344, tuple = ('(0,2)', '(0,5)', '10', '1090', '(401,50)', '60', '70', '1090')         +
     Item 2: offset = 424, tuple = ('(0,3)', '(0,6)', '100', '1000', '(4001,500)', '600', '700', '1000')    +
     Item 3: offset = 504, tuple = ('(0,4)', '(0,7)', '1000', '2000', '(4000,5000)', '6000', '7000', '8000')+
                                                                                                            +
 Index index_bridge contents                                                                                +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                                        +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty                                         +
     Leftmost, Rightmost                                                                                    +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                 +
     Item 0: deleted, offset = 272, tuple = ('(0,1)', '(0,1)')                                              +
     Item 1: deleted, offset = 304, tuple = ('(0,2)', '(0,2)')                                              +
     Item 2: deleted, offset = 336, tuple = ('(0,3)', '(0,3)')                                              +
     Item 3: offset = 368, tuple = ('(0,4)', '(0,1)')                                                       +
     Item 4: offset = 400, tuple = ('(0,5)', '(0,2)')                                                       +
     Item 5: offset = 432, tuple = ('(0,6)', '(0,3)')                                                       +
     Item 6: offset = 464, tuple = ('(0,7)', '(0,4)')                                                       +
                                                                                                            +
 Index toast: not loaded                                                                                    +
 
(1 row)

ALTER TABLE o_test_ix_ams ADD COLUMN r int4[];
SELECT orioledb_tbl_indices('o_test_ix_ams'::regclass, true);
                           orioledb_tbl_indices                            
---------------------------------------------------------------------------
 Index ctid_primary                                                       +
     Index type: primary, unique, ctid                                    +
     Leaf tuple size: 9, non-leaf tuple size: 1                           +
     Non-leaf tuple fields: ctid                                          +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j, p, pk1, pk2, k, r+
 Index index_bridge                                                       +
     Index type: secondary                                                +
     Leaf tuple size: 2, non-leaf tuple size: 1                           +
     Non-leaf tuple fields: index_bridging_ctid                           +
     Leaf tuple fields: index_bridging_ctid, ctid                         +
 Index toast                                                              +
     Index type: secondary                                                +
     Leaf tuple size: 4, non-leaf tuple size: 3                           +
     Non-leaf tuple fields: ctid, attnum, chunknum                        +
     Leaf tuple fields: ctid, attnum, chunknum, data                      +
 
(1 row)

SELECT attname, atthasmissing, atthasdef FROM pg_attribute WHERE attrelid = 'o_test_ix_ams'::regclass;
 attname  | atthasmissing | atthasdef 
----------+---------------+-----------
 tableoid | f             | f
 cmax     | f             | f
 xmax     | f             | f
 cmin     | f             | f
 xmin     | f             | f
 ctid     | f             | f
 i        | f             | f
 j        | f             | f
 p        | f             | f
 pk1      | f             | f
 pk2      | f             | f
 k        | f             | f
 r        | f             | f
(13 rows)

SELECT orioledb_table_description('o_test_ix_ams'::regclass);
                orioledb_table_description                 
-----------------------------------------------------------
 Compress = -1, Primary compress = -1, TOAST compress = -1+
  Column |      Type | Collation | Nullable | Droped      +
       i |   integer |    (null) |    false |  false      +
       j |   integer |    (null) |     true |  false      +
       p |     point |    (null) |     true |  false      +
     pk1 |   integer |    (null) |    false |  false      +
     pk2 |   integer |    (null) |    false |  false      +
       k |   integer |    (null) |     true |  false      +
       r | integer[] |    (null) |     true |  false      +
 
(1 row)

\d+ o_test_ix_ams
                            Table "index_bridging.o_test_ix_ams"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer   |           |          |         | plain    |              | 
 p      | point     |           |          |         | plain    |              | 
 pk1    | integer   |           | not null |         | plain    |              | 
 pk2    | integer   |           | not null |         | plain    |              | 
 k      | integer   |           |          |         | plain    |              | 
 r      | integer[] |           |          |         | extended |              | 
Indexes:
    "o_test_ix_ams_hash_ix" hash (k)
    "o_test_ix_ams_ix1" btree (j) WITH (orioledb_index=off, deduplicate_items=off)
Options: index_bridging=true

SELECT *, r IS NULL FROM o_test_ix_ams;
  i   |  j   |      p      | pk1  | pk2  |  k   | r | ?column? 
------+------+-------------+------+------+------+---+----------
    1 | 1099 | (41,5)      |    6 |    7 | 1099 |   | t
   10 | 1090 | (401,50)    |   60 |   70 | 1090 |   | t
  100 | 1000 | (4001,500)  |  600 |  700 | 1000 |   | t
 1000 | 2000 | (4000,5000) | 6000 | 7000 | 8000 |   | t
(4 rows)

SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                              orioledb_tbl_structure                                               
-------------------------------------------------------------------------------------------------------------------
 Index ctid_primary contents                                                                                      +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                                              +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                                              +
     Leftmost, Rightmost                                                                                          +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                       +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,4)', '1', '1099', '(41,5)', '6', '7', '1099', null)              +
     Item 1: offset = 344, tuple = ('(0,2)', '(0,5)', '10', '1090', '(401,50)', '60', '70', '1090', null)         +
     Item 2: offset = 424, tuple = ('(0,3)', '(0,6)', '100', '1000', '(4001,500)', '600', '700', '1000', null)    +
     Item 3: offset = 504, tuple = ('(0,4)', '(0,7)', '1000', '2000', '(4000,5000)', '6000', '7000', '8000', null)+
                                                                                                                  +
 Index index_bridge contents                                                                                      +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                                              +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty                                               +
     Leftmost, Rightmost                                                                                          +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                       +
     Item 0: deleted, offset = 272, tuple = ('(0,1)', '(0,1)')                                                    +
     Item 1: deleted, offset = 304, tuple = ('(0,2)', '(0,2)')                                                    +
     Item 2: deleted, offset = 336, tuple = ('(0,3)', '(0,3)')                                                    +
     Item 3: offset = 368, tuple = ('(0,4)', '(0,1)')                                                             +
     Item 4: offset = 400, tuple = ('(0,5)', '(0,2)')                                                             +
     Item 5: offset = 432, tuple = ('(0,6)', '(0,3)')                                                             +
     Item 6: offset = 464, tuple = ('(0,7)', '(0,4)')                                                             +
                                                                                                                  +
 Index toast: not loaded                                                                                          +
 
(1 row)

UPDATE o_test_ix_ams SET r = ARRAY[(i*8+j)%100, 11];
SELECT orioledb_table_description('o_test_ix_ams'::regclass);
                orioledb_table_description                 
-----------------------------------------------------------
 Compress = -1, Primary compress = -1, TOAST compress = -1+
  Column |      Type | Collation | Nullable | Droped      +
       i |   integer |    (null) |    false |  false      +
       j |   integer |    (null) |     true |  false      +
       p |     point |    (null) |     true |  false      +
     pk1 |   integer |    (null) |    false |  false      +
     pk2 |   integer |    (null) |    false |  false      +
       k |   integer |    (null) |     true |  false      +
       r | integer[] |    (null) |     true |  false      +
 
(1 row)

\d+ o_test_ix_ams
                            Table "index_bridging.o_test_ix_ams"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer   |           |          |         | plain    |              | 
 p      | point     |           |          |         | plain    |              | 
 pk1    | integer   |           | not null |         | plain    |              | 
 pk2    | integer   |           | not null |         | plain    |              | 
 k      | integer   |           |          |         | plain    |              | 
 r      | integer[] |           |          |         | extended |              | 
Indexes:
    "o_test_ix_ams_hash_ix" hash (k)
    "o_test_ix_ams_ix1" btree (j) WITH (orioledb_index=off, deduplicate_items=off)
Options: index_bridging=true

SELECT orioledb_tbl_indices('o_test_ix_ams'::regclass, true);
                           orioledb_tbl_indices                            
---------------------------------------------------------------------------
 Index ctid_primary                                                       +
     Index type: primary, unique, ctid                                    +
     Leaf tuple size: 9, non-leaf tuple size: 1                           +
     Non-leaf tuple fields: ctid                                          +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j, p, pk1, pk2, k, r+
 Index index_bridge                                                       +
     Index type: secondary                                                +
     Leaf tuple size: 2, non-leaf tuple size: 1                           +
     Non-leaf tuple fields: index_bridging_ctid                           +
     Leaf tuple fields: index_bridging_ctid, ctid                         +
 Index toast                                                              +
     Index type: secondary                                                +
     Leaf tuple size: 4, non-leaf tuple size: 3                           +
     Non-leaf tuple fields: ctid, attnum, chunknum                        +
     Leaf tuple fields: ctid, attnum, chunknum, data                      +
 
(1 row)

SELECT orioledb_tbl_structure('o_test_ix_ams'::regclass, 'ne');
                                                orioledb_tbl_structure                                                 
-----------------------------------------------------------------------------------------------------------------------
 Index ctid_primary contents                                                                                          +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                                                  +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                                                  +
     Leftmost, Rightmost                                                                                              +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                           +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,4)', '1', '1099', '(41,5)', '6', '7', '1099', '{7,11}')              +
     Item 1: offset = 376, tuple = ('(0,2)', '(0,5)', '10', '1090', '(401,50)', '60', '70', '1090', '{70,11}')        +
     Item 2: offset = 488, tuple = ('(0,3)', '(0,6)', '100', '1000', '(4001,500)', '600', '700', '1000', '{0,11}')    +
     Item 3: offset = 600, tuple = ('(0,4)', '(0,7)', '1000', '2000', '(4000,5000)', '6000', '7000', '8000', '{0,11}')+
                                                                                                                      +
 Index index_bridge contents                                                                                          +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                                                  +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty                                                   +
     Leftmost, Rightmost                                                                                              +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                           +
     Item 0: deleted, offset = 272, tuple = ('(0,1)', '(0,1)')                                                        +
     Item 1: deleted, offset = 304, tuple = ('(0,2)', '(0,2)')                                                        +
     Item 2: deleted, offset = 336, tuple = ('(0,3)', '(0,3)')                                                        +
     Item 3: offset = 368, tuple = ('(0,4)', '(0,1)')                                                                 +
     Item 4: offset = 400, tuple = ('(0,5)', '(0,2)')                                                                 +
     Item 5: offset = 432, tuple = ('(0,6)', '(0,3)')                                                                 +
     Item 6: offset = 464, tuple = ('(0,7)', '(0,4)')                                                                 +
                                                                                                                      +
 Index toast: not loaded                                                                                              +
 
(1 row)

SELECT * FROM o_test_ix_ams;
  i   |  j   |      p      | pk1  | pk2  |  k   |    r    
------+------+-------------+------+------+------+---------
    1 | 1099 | (41,5)      |    6 |    7 | 1099 | {7,11}
   10 | 1090 | (401,50)    |   60 |   70 | 1090 | {70,11}
  100 | 1000 | (4001,500)  |  600 |  700 | 1000 | {0,11}
 1000 | 2000 | (4000,5000) | 6000 | 7000 | 8000 | {0,11}
(4 rows)

CREATE INDEX o_test_ix_ams_ix3 ON o_test_ix_ams USING gin (r);
BEGIN;
SET LOCAL enable_seqscan = off;
SET LOCAL enable_bitmapscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_ix_ams WHERE r @> array[11, 11];
              QUERY PLAN               
---------------------------------------
 Seq Scan on o_test_ix_ams
   Filter: (r @> '{11,11}'::integer[])
(2 rows)

SELECT * FROM o_test_ix_ams WHERE r @> array[11, 11];
  i   |  j   |      p      | pk1  | pk2  |  k   |    r    
------+------+-------------+------+------+------+---------
    1 | 1099 | (41,5)      |    6 |    7 | 1099 | {7,11}
   10 | 1090 | (401,50)    |   60 |   70 | 1090 | {70,11}
  100 | 1000 | (4001,500)  |  600 |  700 | 1000 | {0,11}
 1000 | 2000 | (4000,5000) | 6000 | 7000 | 8000 | {0,11}
(4 rows)

COMMIT;
CREATE INDEX o_test_ix_ams_ix4 ON o_test_ix_ams USING gist (p);
SELECT * FROM gist_index_content('o_test_ix_ams_ix4');
 ctid  |              keys               
-------+---------------------------------
 (0,4) | (p)=("(41,5),(41,5)")
 (0,5) | (p)=("(401,50),(401,50)")
 (0,6) | (p)=("(4001,500),(4001,500)")
 (0,7) | (p)=("(4000,5000),(4000,5000)")
(4 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT p FROM o_test_ix_ams WHERE p <@ box(point(0,0), point(4000, 5000));
                        QUERY PLAN                        
----------------------------------------------------------
 Index Only Scan using o_test_ix_ams_ix4 on o_test_ix_ams
   Index Cond: (p <@ '(4000,5000),(0,0)'::box)
(2 rows)

SELECT p FROM o_test_ix_ams WHERE p <@ box(point(0,0), point(4000, 5000));
      p      
-------------
 (41,5)
 (401,50)
 (4000,5000)
(3 rows)

COMMIT;
CREATE TABLE o_briging_vacuum_test (id serial primary key, val float, p point) USING orioledb;
INSERT INTO o_briging_vacuum_test (p) (SELECT point(0.01 * i, 0.02 * i) FROM generate_series(1,5) i);
SELECT orioledb_tbl_structure('o_briging_vacuum_test'::regclass, 'ne');
                       orioledb_tbl_structure                        
---------------------------------------------------------------------
 Index o_briging_vacuum_test_pkey contents                          +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: offset = 272, tuple = ('1', null, '(0.01,0.02)')       +
     Item 1: offset = 328, tuple = ('2', null, '(0.02,0.04)')       +
     Item 2: offset = 384, tuple = ('3', null, '(0.03,0.06)')       +
     Item 3: offset = 440, tuple = ('4', null, '(0.04,0.08)')       +
     Item 4: offset = 496, tuple = ('5', null, '(0.05,0.1)')        +
                                                                    +
 Index toast: not loaded                                            +
 
(1 row)

CREATE INDEX o_briging_vacuum_test_p_idx on o_briging_vacuum_test using gist(p);
NOTICE:  index bridging is enabled for orioledb table 'o_briging_vacuum_test'
DETAIL:  index access method 'gist' is supported only via index bridging for OrioleDB table
SELECT orioledb_tbl_structure('o_briging_vacuum_test'::regclass, 'ne');
                           orioledb_tbl_structure                           
----------------------------------------------------------------------------
 Index o_briging_vacuum_test_pkey contents                                 +
 Page 0: level = 0, maxKeyLen = 4, nVacatedBytes = 0                       +
 state = free, datoid equal, relnode equal, ix_type = primary, clean       +
     Leftmost, Rightmost                                                   +
   Chunk 0: offset = 0, location = 256, hikey location = 80, hikey = ('2') +
     Item 0: offset = 264, tuple = ('(0,1)', '1', null, '(0.01,0.02)')     +
   Chunk 1: offset = 1, location = 328, hikey location = 88, hikey = ('3') +
     Item 1: offset = 336, tuple = ('(0,2)', '2', null, '(0.02,0.04)')     +
   Chunk 2: offset = 2, location = 400, hikey location = 96, hikey = ('4') +
     Item 2: offset = 408, tuple = ('(0,3)', '3', null, '(0.03,0.06)')     +
   Chunk 3: offset = 3, location = 472, hikey location = 104, hikey = ('5')+
     Item 3: offset = 480, tuple = ('(0,4)', '4', null, '(0.04,0.08)')     +
   Chunk 4: offset = 4, location = 544, hikey location = 112               +
     Item 4: offset = 552, tuple = ('(0,5)', '5', null, '(0.05,0.1)')      +
                                                                           +
 Index index_bridge: not loaded                                            +
 Index toast: not loaded                                                   +
 
(1 row)

SELECT * FROM gist_index_content('o_briging_vacuum_test_p_idx');
 ctid  |              keys               
-------+---------------------------------
 (0,1) | (p)=("(0.01,0.02),(0.01,0.02)")
 (0,2) | (p)=("(0.02,0.04),(0.02,0.04)")
 (0,3) | (p)=("(0.03,0.06),(0.03,0.06)")
 (0,4) | (p)=("(0.04,0.08),(0.04,0.08)")
 (0,5) | (p)=("(0.05,0.1),(0.05,0.1)")
(5 rows)

DELETE FROM o_briging_vacuum_test;
SELECT orioledb_tbl_structure('o_briging_vacuum_test'::regclass, 'ne');
                             orioledb_tbl_structure                             
--------------------------------------------------------------------------------
 Index o_briging_vacuum_test_pkey contents                                     +
 Page 0: level = 0, maxKeyLen = 4, nVacatedBytes = 320                         +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty           +
     Leftmost, Rightmost                                                       +
   Chunk 0: offset = 0, location = 256, hikey location = 80, hikey = ('2')     +
     Item 0: deleted, offset = 264, tuple = ('(0,1)', '1', null, '(0.01,0.02)')+
   Chunk 1: offset = 1, location = 328, hikey location = 88, hikey = ('3')     +
     Item 1: deleted, offset = 336, tuple = ('(0,2)', '2', null, '(0.02,0.04)')+
   Chunk 2: offset = 2, location = 400, hikey location = 96, hikey = ('4')     +
     Item 2: deleted, offset = 408, tuple = ('(0,3)', '3', null, '(0.03,0.06)')+
   Chunk 3: offset = 3, location = 472, hikey location = 104, hikey = ('5')    +
     Item 3: deleted, offset = 480, tuple = ('(0,4)', '4', null, '(0.04,0.08)')+
   Chunk 4: offset = 4, location = 544, hikey location = 112                   +
     Item 4: deleted, offset = 552, tuple = ('(0,5)', '5', null, '(0.05,0.1)') +
                                                                               +
 Index index_bridge contents                                                   +
 Page 0: level = 0, maxKeyLen = 6, nVacatedBytes = 0                           +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty            +
     Leftmost, Rightmost                                                       +
   Chunk 0: offset = 0, location = 256, hikey location = 80, hikey = ('(0,2)') +
     Item 0: deleted, offset = 264, tuple = ('(0,1)', '1')                     +
   Chunk 1: offset = 1, location = 296, hikey location = 88, hikey = ('(0,3)') +
     Item 1: deleted, offset = 304, tuple = ('(0,2)', '2')                     +
   Chunk 2: offset = 2, location = 336, hikey location = 96, hikey = ('(0,4)') +
     Item 2: deleted, offset = 344, tuple = ('(0,3)', '3')                     +
   Chunk 3: offset = 3, location = 376, hikey location = 104, hikey = ('(0,5)')+
     Item 3: deleted, offset = 384, tuple = ('(0,4)', '4')                     +
   Chunk 4: offset = 4, location = 416, hikey location = 112                   +
     Item 4: deleted, offset = 424, tuple = ('(0,5)', '5')                     +
                                                                               +
 Index toast: not loaded                                                       +
 
(1 row)

SELECT * FROM gist_index_content('o_briging_vacuum_test_p_idx');
 ctid  |              keys               
-------+---------------------------------
 (0,1) | (p)=("(0.01,0.02),(0.01,0.02)")
 (0,2) | (p)=("(0.02,0.04),(0.02,0.04)")
 (0,3) | (p)=("(0.03,0.06),(0.03,0.06)")
 (0,4) | (p)=("(0.04,0.08),(0.04,0.08)")
 (0,5) | (p)=("(0.05,0.1),(0.05,0.1)")
(5 rows)

SELECT orioledb_rewind_sync();
 orioledb_rewind_sync 
----------------------
 
(1 row)

VACUUM o_briging_vacuum_test;
SELECT * FROM o_briging_vacuum_test WHERE p <@ box(point(0,0), point(1,1));
 id | val | p 
----+-----+---
(0 rows)

SELECT orioledb_tbl_structure('o_briging_vacuum_test'::regclass, 'ne');
                             orioledb_tbl_structure                             
--------------------------------------------------------------------------------
 Index o_briging_vacuum_test_pkey contents                                     +
 Page 0: level = 0, maxKeyLen = 4, nVacatedBytes = 320                         +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty           +
     Leftmost, Rightmost                                                       +
   Chunk 0: offset = 0, location = 256, hikey location = 80, hikey = ('2')     +
     Item 0: deleted, offset = 264, tuple = ('(0,1)', '1', null, '(0.01,0.02)')+
   Chunk 1: offset = 1, location = 328, hikey location = 88, hikey = ('3')     +
     Item 1: deleted, offset = 336, tuple = ('(0,2)', '2', null, '(0.02,0.04)')+
   Chunk 2: offset = 2, location = 400, hikey location = 96, hikey = ('4')     +
     Item 2: deleted, offset = 408, tuple = ('(0,3)', '3', null, '(0.03,0.06)')+
   Chunk 3: offset = 3, location = 472, hikey location = 104, hikey = ('5')    +
     Item 3: deleted, offset = 480, tuple = ('(0,4)', '4', null, '(0.04,0.08)')+
   Chunk 4: offset = 4, location = 544, hikey location = 112                   +
     Item 4: deleted, offset = 552, tuple = ('(0,5)', '5', null, '(0.05,0.1)') +
                                                                               +
 Index index_bridge contents                                                   +
 Page 0: level = 0, maxKeyLen = 6, nVacatedBytes = 0                           +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty            +
     Leftmost, Rightmost                                                       +
   Chunk 0: offset = 0, location = 256, hikey location = 64                    +
                                                                               +
 Index toast: not loaded                                                       +
 
(1 row)

SELECT * FROM gist_index_content('o_briging_vacuum_test_p_idx');
 ctid | keys 
------+------
(0 rows)

DROP TABLE o_briging_vacuum_test;
CREATE TABLE o_test_bridging_with_regular_no_pkey (
	i int NOT NULL,
	j int
) USING orioledb WITH (index_bridging);
CREATE INDEX o_test_bridging_with_regular_no_pkey_ix1 on
	o_test_bridging_with_regular_no_pkey using btree (j) WITH (orioledb_index = off);
WARNING:  using bridged btree index for orioledb
DETAIL:  This feature is intended for testing purposes and is not recommended for normal usage.
CREATE INDEX o_test_bridging_with_regular_no_pkey_ix2 on
	o_test_bridging_with_regular_no_pkey using btree (j);
INSERT INTO o_test_bridging_with_regular_no_pkey
	SELECT v, v FROM generate_series(1, 10) v;
ANALYZE o_test_bridging_with_regular_no_pkey;
SELECT orioledb_tbl_indices('o_test_bridging_with_regular_no_pkey'::regclass);
                  orioledb_tbl_indices                  
--------------------------------------------------------
 Index ctid_primary                                    +
     Index type: primary, unique, ctid                 +
     Leaf tuple size: 4, non-leaf tuple size: 1        +
     Non-leaf tuple fields: ctid                       +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j+
 Index o_test_bridging_with_regular_no_pkey_ix2        +
     Index type: secondary                             +
     Leaf tuple size: 2, non-leaf tuple size: 2        +
     Non-leaf tuple fields: j, ctid                    +
     Leaf tuple fields: j, ctid                        +
 
(1 row)

SELECT orioledb_tbl_structure('o_test_bridging_with_regular_no_pkey'::regclass, 'ne');
                       orioledb_tbl_structure                        
---------------------------------------------------------------------
 Index ctid_primary contents                                        +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: offset = 280, tuple = ('(0,1)', '(0,1)', '1', '1')     +
     Item 1: offset = 328, tuple = ('(0,2)', '(0,2)', '2', '2')     +
     Item 2: offset = 376, tuple = ('(0,3)', '(0,3)', '3', '3')     +
     Item 3: offset = 424, tuple = ('(0,4)', '(0,4)', '4', '4')     +
     Item 4: offset = 472, tuple = ('(0,5)', '(0,5)', '5', '5')     +
     Item 5: offset = 520, tuple = ('(0,6)', '(0,6)', '6', '6')     +
     Item 6: offset = 568, tuple = ('(0,7)', '(0,7)', '7', '7')     +
     Item 7: offset = 616, tuple = ('(0,8)', '(0,8)', '8', '8')     +
     Item 8: offset = 664, tuple = ('(0,9)', '(0,9)', '9', '9')     +
     Item 9: offset = 712, tuple = ('(0,10)', '(0,10)', '10', '10') +
                                                                    +
 Index o_test_bridging_with_regular_no_pkey_ix2 contents            +
 Page 0: level = 0, maxKeyLen = 16, nVacatedBytes = 0               +
 state = free, datoid equal, relnode equal, ix_type = regular, dirty+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: offset = 280, tuple = ('1', '(0,1)')                   +
     Item 1: offset = 312, tuple = ('2', '(0,2)')                   +
     Item 2: offset = 344, tuple = ('3', '(0,3)')                   +
     Item 3: offset = 376, tuple = ('4', '(0,4)')                   +
     Item 4: offset = 408, tuple = ('5', '(0,5)')                   +
     Item 5: offset = 440, tuple = ('6', '(0,6)')                   +
     Item 6: offset = 472, tuple = ('7', '(0,7)')                   +
     Item 7: offset = 504, tuple = ('8', '(0,8)')                   +
     Item 8: offset = 536, tuple = ('9', '(0,9)')                   +
     Item 9: offset = 568, tuple = ('10', '(0,10)')                 +
                                                                    +
 Index index_bridge contents                                        +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty +
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: offset = 280, tuple = ('(0,1)', '(0,1)')               +
     Item 1: offset = 312, tuple = ('(0,2)', '(0,2)')               +
     Item 2: offset = 344, tuple = ('(0,3)', '(0,3)')               +
     Item 3: offset = 376, tuple = ('(0,4)', '(0,4)')               +
     Item 4: offset = 408, tuple = ('(0,5)', '(0,5)')               +
     Item 5: offset = 440, tuple = ('(0,6)', '(0,6)')               +
     Item 6: offset = 472, tuple = ('(0,7)', '(0,7)')               +
     Item 7: offset = 504, tuple = ('(0,8)', '(0,8)')               +
     Item 8: offset = 536, tuple = ('(0,9)', '(0,9)')               +
     Item 9: offset = 568, tuple = ('(0,10)', '(0,10)')             +
                                                                    +
 Index toast: not loaded                                            +
 
(1 row)

UPDATE o_test_bridging_with_regular_no_pkey SET j = j * 10 WHERE mod(i, 4) = 0;
DELETE FROM o_test_bridging_with_regular_no_pkey WHERE mod(i, 4) = 0;
SELECT orioledb_tbl_structure('o_test_bridging_with_regular_no_pkey'::regclass, 'ne');
                          orioledb_tbl_structure                           
---------------------------------------------------------------------------
 Index ctid_primary contents                                              +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 96                     +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty      +
     Leftmost, Rightmost                                                  +
   Chunk 0: offset = 0, location = 256, hikey location = 64               +
     Item 0: offset = 280, tuple = ('(0,1)', '(0,1)', '1', '1')           +
     Item 1: offset = 328, tuple = ('(0,2)', '(0,2)', '2', '2')           +
     Item 2: offset = 376, tuple = ('(0,3)', '(0,3)', '3', '3')           +
     Item 3: deleted, offset = 424, tuple = ('(0,4)', '(0,11)', '4', '40')+
     Item 4: offset = 472, tuple = ('(0,5)', '(0,5)', '5', '5')           +
     Item 5: offset = 520, tuple = ('(0,6)', '(0,6)', '6', '6')           +
     Item 6: offset = 568, tuple = ('(0,7)', '(0,7)', '7', '7')           +
     Item 7: deleted, offset = 616, tuple = ('(0,8)', '(0,12)', '8', '80')+
     Item 8: offset = 664, tuple = ('(0,9)', '(0,9)', '9', '9')           +
     Item 9: offset = 712, tuple = ('(0,10)', '(0,10)', '10', '10')       +
                                                                          +
 Index o_test_bridging_with_regular_no_pkey_ix2 contents                  +
 Page 0: level = 0, maxKeyLen = 16, nVacatedBytes = 128                   +
 state = free, datoid equal, relnode equal, ix_type = regular, dirty      +
     Leftmost, Rightmost                                                  +
   Chunk 0: offset = 0, location = 256, hikey location = 64               +
     Item 0: offset = 280, tuple = ('1', '(0,1)')                         +
     Item 1: offset = 312, tuple = ('2', '(0,2)')                         +
     Item 2: offset = 344, tuple = ('3', '(0,3)')                         +
     Item 3: deleted, offset = 376, tuple = ('4', '(0,4)')                +
     Item 4: offset = 408, tuple = ('5', '(0,5)')                         +
     Item 5: offset = 440, tuple = ('6', '(0,6)')                         +
     Item 6: offset = 472, tuple = ('7', '(0,7)')                         +
     Item 7: deleted, offset = 504, tuple = ('8', '(0,8)')                +
     Item 8: offset = 536, tuple = ('9', '(0,9)')                         +
     Item 9: offset = 568, tuple = ('10', '(0,10)')                       +
     Item 10: deleted, offset = 600, tuple = ('40', '(0,4)')              +
     Item 11: deleted, offset = 632, tuple = ('80', '(0,8)')              +
                                                                          +
 Index index_bridge contents                                              +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                      +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty       +
     Leftmost, Rightmost                                                  +
   Chunk 0: offset = 0, location = 256, hikey location = 64               +
     Item 0: offset = 280, tuple = ('(0,1)', '(0,1)')                     +
     Item 1: offset = 312, tuple = ('(0,2)', '(0,2)')                     +
     Item 2: offset = 344, tuple = ('(0,3)', '(0,3)')                     +
     Item 3: deleted, offset = 376, tuple = ('(0,4)', '(0,4)')            +
     Item 4: offset = 408, tuple = ('(0,5)', '(0,5)')                     +
     Item 5: offset = 440, tuple = ('(0,6)', '(0,6)')                     +
     Item 6: offset = 472, tuple = ('(0,7)', '(0,7)')                     +
     Item 7: deleted, offset = 504, tuple = ('(0,8)', '(0,8)')            +
     Item 8: offset = 536, tuple = ('(0,9)', '(0,9)')                     +
     Item 9: offset = 568, tuple = ('(0,10)', '(0,10)')                   +
     Item 10: deleted, offset = 600, tuple = ('(0,11)', '(0,4)')          +
     Item 11: deleted, offset = 632, tuple = ('(0,12)', '(0,8)')          +
                                                                          +
 Index toast: not loaded                                                  +
 
(1 row)

CREATE TABLE o_test_bridging_with_regular_pkey (
	i int NOT NULL PRIMARY KEY,
	j int,
	k int
) USING orioledb WITH (index_bridging);
CREATE INDEX o_test_bridging_with_regular_pkey_ix1 on
	o_test_bridging_with_regular_pkey using btree (j) WITH (orioledb_index = off);
WARNING:  using bridged btree index for orioledb
DETAIL:  This feature is intended for testing purposes and is not recommended for normal usage.
CREATE INDEX o_test_bridging_with_regular_pkey_ix2 on
	o_test_bridging_with_regular_pkey using btree (k);
INSERT INTO o_test_bridging_with_regular_pkey
	SELECT v * 1000 + 673, 1000 - v * 100 + 15, v FROM generate_series(1, 10) v;
ANALYZE o_test_bridging_with_regular_pkey;
SELECT orioledb_tbl_structure('o_test_bridging_with_regular_pkey'::regclass, 'ne');
                       orioledb_tbl_structure                        
---------------------------------------------------------------------
 Index o_test_bridging_with_regular_pkey_pkey contents              +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: offset = 280, tuple = ('(0,1)', '1673', '915', '1')    +
     Item 1: offset = 328, tuple = ('(0,2)', '2673', '815', '2')    +
     Item 2: offset = 376, tuple = ('(0,3)', '3673', '715', '3')    +
     Item 3: offset = 424, tuple = ('(0,4)', '4673', '615', '4')    +
     Item 4: offset = 472, tuple = ('(0,5)', '5673', '515', '5')    +
     Item 5: offset = 520, tuple = ('(0,6)', '6673', '415', '6')    +
     Item 6: offset = 568, tuple = ('(0,7)', '7673', '315', '7')    +
     Item 7: offset = 616, tuple = ('(0,8)', '8673', '215', '8')    +
     Item 8: offset = 664, tuple = ('(0,9)', '9673', '115', '9')    +
     Item 9: offset = 712, tuple = ('(0,10)', '10673', '15', '10')  +
                                                                    +
 Index o_test_bridging_with_regular_pkey_ix2 contents               +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = regular, dirty+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: offset = 280, tuple = ('1', '1673')                    +
     Item 1: offset = 304, tuple = ('2', '2673')                    +
     Item 2: offset = 328, tuple = ('3', '3673')                    +
     Item 3: offset = 352, tuple = ('4', '4673')                    +
     Item 4: offset = 376, tuple = ('5', '5673')                    +
     Item 5: offset = 400, tuple = ('6', '6673')                    +
     Item 6: offset = 424, tuple = ('7', '7673')                    +
     Item 7: offset = 448, tuple = ('8', '8673')                    +
     Item 8: offset = 472, tuple = ('9', '9673')                    +
     Item 9: offset = 496, tuple = ('10', '10673')                  +
                                                                    +
 Index index_bridge contents                                        +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty +
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: offset = 280, tuple = ('(0,1)', '1673')                +
     Item 1: offset = 312, tuple = ('(0,2)', '2673')                +
     Item 2: offset = 344, tuple = ('(0,3)', '3673')                +
     Item 3: offset = 376, tuple = ('(0,4)', '4673')                +
     Item 4: offset = 408, tuple = ('(0,5)', '5673')                +
     Item 5: offset = 440, tuple = ('(0,6)', '6673')                +
     Item 6: offset = 472, tuple = ('(0,7)', '7673')                +
     Item 7: offset = 504, tuple = ('(0,8)', '8673')                +
     Item 8: offset = 536, tuple = ('(0,9)', '9673')                +
     Item 9: offset = 568, tuple = ('(0,10)', '10673')              +
                                                                    +
 Index toast: not loaded                                            +
 
(1 row)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF) SELECT * FROM o_test_bridging_with_regular_pkey ORDER BY k;
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Index Scan using o_test_bridging_with_regular_pkey_ix2 on o_test_bridging_with_regular_pkey
(1 row)

SELECT * FROM o_test_bridging_with_regular_pkey ORDER BY k;
   i   |  j  | k  
-------+-----+----
  1673 | 915 |  1
  2673 | 815 |  2
  3673 | 715 |  3
  4673 | 615 |  4
  5673 | 515 |  5
  6673 | 415 |  6
  7673 | 315 |  7
  8673 | 215 |  8
  9673 | 115 |  9
 10673 |  15 | 10
(10 rows)

EXPLAIN (COSTS OFF) SELECT * FROM o_test_bridging_with_regular_pkey ORDER BY j;
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Index Scan using o_test_bridging_with_regular_pkey_ix1 on o_test_bridging_with_regular_pkey
(1 row)

SELECT * FROM o_test_bridging_with_regular_pkey ORDER BY j;
   i   |  j  | k  
-------+-----+----
 10673 |  15 | 10
  9673 | 115 |  9
  8673 | 215 |  8
  7673 | 315 |  7
  6673 | 415 |  6
  5673 | 515 |  5
  4673 | 615 |  4
  3673 | 715 |  3
  2673 | 815 |  2
  1673 | 915 |  1
(10 rows)

COMMIT;
CREATE TABLE o_test_bitmap_scans (
	i int NOT NULL,
	j int4[],
	j2 int4[],
	p point
) USING orioledb WITH (index_bridging);
INSERT INTO o_test_bitmap_scans
	SELECT v, ARRAY[v+17,v+33], ARRAY[v+66,v+95], point(v + 5, v + 5) FROM generate_series(1, 10) v;
CREATE INDEX o_test_bitmap_scans_ix1 on o_test_bitmap_scans using hash (j);
CREATE INDEX o_test_bitmap_scans_ix2 on o_test_bitmap_scans using btree (j);
CREATE INDEX o_test_bitmap_scans_ix3 on o_test_bitmap_scans using gin (j);
CREATE INDEX o_test_bitmap_scans_ix4 on o_test_bitmap_scans using gist (p);
CREATE INDEX o_test_bitmap_scans_ix5 on o_test_bitmap_scans using btree (j2) WITH (orioledb_index = off);
WARNING:  using bridged btree index for orioledb
DETAIL:  This feature is intended for testing purposes and is not recommended for normal usage.
BEGIN;
SET LOCAL enable_seqscan = off;
SET LOCAL enable_indexscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_bitmap_scans WHERE j = ARRAY[22,38] OR j = ARRAY[24, 40] OR j > ARRAY[25, 25];
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Custom Scan (o_scan) on o_test_bitmap_scans
   Bitmap heap scan
   Recheck Cond: ((j = '{22,38}'::integer[]) OR (j = '{24,40}'::integer[]) OR (j > '{25,25}'::integer[]))
   ->  BitmapOr
         ->  Bitmap Index Scan on o_test_bitmap_scans_ix1
               Index Cond: (j = '{22,38}'::integer[])
         ->  Bitmap Index Scan on o_test_bitmap_scans_ix1
               Index Cond: (j = '{24,40}'::integer[])
         ->  Bitmap Index Scan on o_test_bitmap_scans_ix2
               Index Cond: (j > '{25,25}'::integer[])
(10 rows)

SELECT * FROM o_test_bitmap_scans WHERE j = ARRAY[22,38] OR j = ARRAY[24, 40] OR j > ARRAY[25, 25];
 i  |    j    |    j2    |    p    
----+---------+----------+---------
  5 | {22,38} | {71,100} | (10,10)
  7 | {24,40} | {73,102} | (12,12)
  8 | {25,41} | {74,103} | (13,13)
  9 | {26,42} | {75,104} | (14,14)
 10 | {27,43} | {76,105} | (15,15)
(5 rows)

COMMIT;
BEGIN;
SET LOCAL enable_seqscan = off;
SET LOCAL enable_indexscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_bitmap_scans WHERE j = ARRAY[19,35] OR j <@ ARRAY[20, 20] OR j > ARRAY[26, 42];
                                                QUERY PLAN                                                 
-----------------------------------------------------------------------------------------------------------
 Custom Scan (o_scan) on o_test_bitmap_scans
   Bitmap heap scan
   Recheck Cond: ((j = '{19,35}'::integer[]) OR (j > '{26,42}'::integer[]) OR (j <@ '{20,20}'::integer[]))
   ->  BitmapOr
         ->  Bitmap Index Scan on o_test_bitmap_scans_ix1
               Index Cond: (j = '{19,35}'::integer[])
         ->  Bitmap Index Scan on o_test_bitmap_scans_ix2
               Index Cond: (j > '{26,42}'::integer[])
         ->  Bitmap Index Scan on o_test_bitmap_scans_ix3
               Index Cond: (j <@ '{20,20}'::integer[])
(10 rows)

SELECT * FROM o_test_bitmap_scans WHERE j = ARRAY[19,35] OR j <@ ARRAY[20, 20] OR j > ARRAY[26, 42];
 i  |    j    |    j2    |    p    
----+---------+----------+---------
  2 | {19,35} | {68,97}  | (7,7)
  3 | {20,36} | {69,98}  | (8,8)
 10 | {27,43} | {76,105} | (15,15)
(3 rows)

EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_bitmap_scans
		WHERE  (j > ARRAY[25, 41] OR j2 < ARRAY[68,97]) OR p <@ box(point(8,8), point(10, 10));
                                                 QUERY PLAN                                                 
------------------------------------------------------------------------------------------------------------
 Custom Scan (o_scan) on o_test_bitmap_scans
   Bitmap heap scan
   Recheck Cond: ((p <@ '(10,10),(8,8)'::box) OR (j2 < '{68,97}'::integer[]) OR (j > '{25,41}'::integer[]))
   ->  BitmapOr
         ->  Bitmap Index Scan on o_test_bitmap_scans_ix4
               Index Cond: (p <@ '(10,10),(8,8)'::box)
         ->  Bitmap Index Scan on o_test_bitmap_scans_ix5
               Index Cond: (j2 < '{68,97}'::integer[])
         ->  Bitmap Index Scan on o_test_bitmap_scans_ix2
               Index Cond: (j > '{25,41}'::integer[])
(10 rows)

SELECT * FROM o_test_bitmap_scans
	WHERE (j > ARRAY[25, 41] OR j2 < ARRAY[68,97]) OR p <@ box(point(8,8), point(10, 10));
 i  |    j    |    j2    |    p    
----+---------+----------+---------
  1 | {18,34} | {67,96}  | (6,6)
  3 | {20,36} | {69,98}  | (8,8)
  4 | {21,37} | {70,99}  | (9,9)
  5 | {22,38} | {71,100} | (10,10)
  9 | {26,42} | {75,104} | (14,14)
 10 | {27,43} | {76,105} | (15,15)
(6 rows)

COMMIT;
CREATE TABLE o_test_index_bridging_options (
	i int NOT NULL,
	j int4[],
	p point
) USING orioledb WITH (index_bridging);
CREATE INDEX o_test_index_bridging_options_ix1 ON o_test_index_bridging_options USING btree (i);
\d+ o_test_index_bridging_options
                    Table "index_bridging.o_test_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_index_bridging_options_ix1" btree (i)
Options: index_bridging=true

CREATE INDEX o_test_index_bridging_options_ix2 ON o_test_index_bridging_options USING btree (i) WITH (orioledb_index = off);
WARNING:  using bridged btree index for orioledb
DETAIL:  This feature is intended for testing purposes and is not recommended for normal usage.
\d+ o_test_index_bridging_options
                    Table "index_bridging.o_test_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_index_bridging_options_ix1" btree (i)
    "o_test_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
Options: index_bridging=true

CREATE INDEX o_test_index_bridging_options_ix3 ON o_test_index_bridging_options USING hash (i);
\d+ o_test_index_bridging_options
                    Table "index_bridging.o_test_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_index_bridging_options_ix1" btree (i)
    "o_test_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
    "o_test_index_bridging_options_ix3" hash (i)
Options: index_bridging=true

CREATE INDEX o_test_index_bridging_options_ix4 ON o_test_index_bridging_options USING hash (i) WITH (fillfactor=65);
\d+ o_test_index_bridging_options
                    Table "index_bridging.o_test_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_index_bridging_options_ix1" btree (i)
    "o_test_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
    "o_test_index_bridging_options_ix3" hash (i)
    "o_test_index_bridging_options_ix4" hash (i) WITH (fillfactor='65')
Options: index_bridging=true

CREATE INDEX o_test_index_bridging_options_ix5 ON o_test_index_bridging_options USING gist (p);
\d+ o_test_index_bridging_options
                    Table "index_bridging.o_test_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_index_bridging_options_ix1" btree (i)
    "o_test_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
    "o_test_index_bridging_options_ix3" hash (i)
    "o_test_index_bridging_options_ix4" hash (i) WITH (fillfactor='65')
    "o_test_index_bridging_options_ix5" gist (p)
Options: index_bridging=true

CREATE INDEX o_test_index_bridging_options_ix6 ON o_test_index_bridging_options USING gin (j);
\d+ o_test_index_bridging_options
                    Table "index_bridging.o_test_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_index_bridging_options_ix1" btree (i)
    "o_test_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
    "o_test_index_bridging_options_ix3" hash (i)
    "o_test_index_bridging_options_ix4" hash (i) WITH (fillfactor='65')
    "o_test_index_bridging_options_ix5" gist (p)
    "o_test_index_bridging_options_ix6" gin (j)
Options: index_bridging=true

CREATE INDEX o_test_index_bridging_options_ix7 ON o_test_index_bridging_options USING spgist (p);
\d+ o_test_index_bridging_options
                    Table "index_bridging.o_test_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_index_bridging_options_ix1" btree (i)
    "o_test_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
    "o_test_index_bridging_options_ix3" hash (i)
    "o_test_index_bridging_options_ix4" hash (i) WITH (fillfactor='65')
    "o_test_index_bridging_options_ix5" gist (p)
    "o_test_index_bridging_options_ix6" gin (j)
    "o_test_index_bridging_options_ix7" spgist (p)
Options: index_bridging=true

CREATE INDEX o_test_index_bridging_options_ix8 ON o_test_index_bridging_options USING brin (i);
\d+ o_test_index_bridging_options
                    Table "index_bridging.o_test_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_index_bridging_options_ix1" btree (i)
    "o_test_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
    "o_test_index_bridging_options_ix3" hash (i)
    "o_test_index_bridging_options_ix4" hash (i) WITH (fillfactor='65')
    "o_test_index_bridging_options_ix5" gist (p)
    "o_test_index_bridging_options_ix6" gin (j)
    "o_test_index_bridging_options_ix7" spgist (p)
    "o_test_index_bridging_options_ix8" brin (i)
Options: index_bridging=true

ALTER TABLE o_test_index_bridging_options RESET (index_bridging);
ERROR:  cannot disable 'index_bridging' for a table with bridged indices
\d+ o_test_index_bridging_options
                    Table "index_bridging.o_test_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_index_bridging_options_ix1" btree (i)
    "o_test_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
    "o_test_index_bridging_options_ix3" hash (i)
    "o_test_index_bridging_options_ix4" hash (i) WITH (fillfactor='65')
    "o_test_index_bridging_options_ix5" gist (p)
    "o_test_index_bridging_options_ix6" gin (j)
    "o_test_index_bridging_options_ix7" spgist (p)
    "o_test_index_bridging_options_ix8" brin (i)
Options: index_bridging=true

ALTER TABLE o_test_index_bridging_options SET (index_bridging);
\d+ o_test_index_bridging_options
                    Table "index_bridging.o_test_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_index_bridging_options_ix1" btree (i)
    "o_test_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
    "o_test_index_bridging_options_ix3" hash (i)
    "o_test_index_bridging_options_ix4" hash (i) WITH (fillfactor='65')
    "o_test_index_bridging_options_ix5" gist (p)
    "o_test_index_bridging_options_ix6" gin (j)
    "o_test_index_bridging_options_ix7" spgist (p)
    "o_test_index_bridging_options_ix8" brin (i)
Options: index_bridging=true

ALTER INDEX o_test_index_bridging_options_ix2 RESET (orioledb_index);
ERROR:  Cannot change 'orioledb_index' option for existing indices
\d+ o_test_index_bridging_options
                    Table "index_bridging.o_test_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_index_bridging_options_ix1" btree (i)
    "o_test_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
    "o_test_index_bridging_options_ix3" hash (i)
    "o_test_index_bridging_options_ix4" hash (i) WITH (fillfactor='65')
    "o_test_index_bridging_options_ix5" gist (p)
    "o_test_index_bridging_options_ix6" gin (j)
    "o_test_index_bridging_options_ix7" spgist (p)
    "o_test_index_bridging_options_ix8" brin (i)
Options: index_bridging=true

ALTER INDEX o_test_index_bridging_options_ix1 SET (orioledb_index = off);
ERROR:  Cannot change 'orioledb_index' option for existing indices
\d+ o_test_index_bridging_options
                    Table "index_bridging.o_test_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_index_bridging_options_ix1" btree (i)
    "o_test_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
    "o_test_index_bridging_options_ix3" hash (i)
    "o_test_index_bridging_options_ix4" hash (i) WITH (fillfactor='65')
    "o_test_index_bridging_options_ix5" gist (p)
    "o_test_index_bridging_options_ix6" gin (j)
    "o_test_index_bridging_options_ix7" spgist (p)
    "o_test_index_bridging_options_ix8" brin (i)
Options: index_bridging=true

CREATE TABLE o_test_non_index_bridging_options (
	i int NOT NULL,
	j int4[],
	p point
) USING orioledb;
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 

SELECT orioledb_tbl_indices('o_test_non_index_bridging_options'::regclass, true);
                orioledb_tbl_indices                 
-----------------------------------------------------
 Index ctid_primary                                 +
     Index type: primary, unique, ctid              +
     Leaf tuple size: 4, non-leaf tuple size: 1     +
     Non-leaf tuple fields: ctid                    +
     Leaf tuple fields: ctid, i, j, p               +
 Index toast                                        +
     Index type: secondary                          +
     Leaf tuple size: 4, non-leaf tuple size: 3     +
     Non-leaf tuple fields: ctid, attnum, chunknum  +
     Leaf tuple fields: ctid, attnum, chunknum, data+
 
(1 row)

INSERT INTO o_test_non_index_bridging_options
	SELECT v, ARRAY[v+17,v+33], point(v + 5, v + 5) FROM generate_series(1, 10) v;
SELECT orioledb_tbl_structure('o_test_non_index_bridging_options'::regclass, 'ne');
                            orioledb_tbl_structure                             
-------------------------------------------------------------------------------
 Index ctid_primary contents                                                  +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                          +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty          +
     Leftmost, Rightmost                                                      +
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey = ('(0,5)')+
     Item 0: offset = 264, tuple = ('(0,1)', '1', '{18,34}', '(6,6)')         +
     Item 1: offset = 352, tuple = ('(0,2)', '2', '{19,35}', '(7,7)')         +
     Item 2: offset = 440, tuple = ('(0,3)', '3', '{20,36}', '(8,8)')         +
     Item 3: offset = 528, tuple = ('(0,4)', '4', '{21,37}', '(9,9)')         +
   Chunk 1: offset = 4, location = 616, hikey location = 72                   +
     Item 4: offset = 632, tuple = ('(0,5)', '5', '{22,38}', '(10,10)')       +
     Item 5: offset = 720, tuple = ('(0,6)', '6', '{23,39}', '(11,11)')       +
     Item 6: offset = 808, tuple = ('(0,7)', '7', '{24,40}', '(12,12)')       +
     Item 7: offset = 896, tuple = ('(0,8)', '8', '{25,41}', '(13,13)')       +
     Item 8: offset = 984, tuple = ('(0,9)', '9', '{26,42}', '(14,14)')       +
     Item 9: offset = 1072, tuple = ('(0,10)', '10', '{27,43}', '(15,15)')    +
                                                                              +
 Index toast: not loaded                                                      +
 
(1 row)

SELECT * FROM o_test_non_index_bridging_options;
 i  |    j    |    p    
----+---------+---------
  1 | {18,34} | (6,6)
  2 | {19,35} | (7,7)
  3 | {20,36} | (8,8)
  4 | {21,37} | (9,9)
  5 | {22,38} | (10,10)
  6 | {23,39} | (11,11)
  7 | {24,40} | (12,12)
  8 | {25,41} | (13,13)
  9 | {26,42} | (14,14)
 10 | {27,43} | (15,15)
(10 rows)

ALTER TABLE o_test_non_index_bridging_options RESET (index_bridging);
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 

SELECT orioledb_tbl_indices('o_test_non_index_bridging_options'::regclass, true);
                orioledb_tbl_indices                 
-----------------------------------------------------
 Index ctid_primary                                 +
     Index type: primary, unique, ctid              +
     Leaf tuple size: 4, non-leaf tuple size: 1     +
     Non-leaf tuple fields: ctid                    +
     Leaf tuple fields: ctid, i, j, p               +
 Index toast                                        +
     Index type: secondary                          +
     Leaf tuple size: 4, non-leaf tuple size: 3     +
     Non-leaf tuple fields: ctid, attnum, chunknum  +
     Leaf tuple fields: ctid, attnum, chunknum, data+
 
(1 row)

SELECT orioledb_tbl_structure('o_test_non_index_bridging_options'::regclass, 'ne');
                            orioledb_tbl_structure                             
-------------------------------------------------------------------------------
 Index ctid_primary contents                                                  +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                          +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty          +
     Leftmost, Rightmost                                                      +
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey = ('(0,5)')+
     Item 0: offset = 264, tuple = ('(0,1)', '1', '{18,34}', '(6,6)')         +
     Item 1: offset = 352, tuple = ('(0,2)', '2', '{19,35}', '(7,7)')         +
     Item 2: offset = 440, tuple = ('(0,3)', '3', '{20,36}', '(8,8)')         +
     Item 3: offset = 528, tuple = ('(0,4)', '4', '{21,37}', '(9,9)')         +
   Chunk 1: offset = 4, location = 616, hikey location = 72                   +
     Item 4: offset = 632, tuple = ('(0,5)', '5', '{22,38}', '(10,10)')       +
     Item 5: offset = 720, tuple = ('(0,6)', '6', '{23,39}', '(11,11)')       +
     Item 6: offset = 808, tuple = ('(0,7)', '7', '{24,40}', '(12,12)')       +
     Item 7: offset = 896, tuple = ('(0,8)', '8', '{25,41}', '(13,13)')       +
     Item 8: offset = 984, tuple = ('(0,9)', '9', '{26,42}', '(14,14)')       +
     Item 9: offset = 1072, tuple = ('(0,10)', '10', '{27,43}', '(15,15)')    +
                                                                              +
 Index toast: not loaded                                                      +
 
(1 row)

SELECT * FROM o_test_non_index_bridging_options;
 i  |    j    |    p    
----+---------+---------
  1 | {18,34} | (6,6)
  2 | {19,35} | (7,7)
  3 | {20,36} | (8,8)
  4 | {21,37} | (9,9)
  5 | {22,38} | (10,10)
  6 | {23,39} | (11,11)
  7 | {24,40} | (12,12)
  8 | {25,41} | (13,13)
  9 | {26,42} | (14,14)
 10 | {27,43} | (15,15)
(10 rows)

ALTER TABLE o_test_non_index_bridging_options SET (index_bridging);
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Options: index_bridging=true

SELECT orioledb_tbl_indices('o_test_non_index_bridging_options'::regclass, true);
                   orioledb_tbl_indices                    
-----------------------------------------------------------
 Index ctid_primary                                       +
     Index type: primary, unique, ctid                    +
     Leaf tuple size: 5, non-leaf tuple size: 1           +
     Non-leaf tuple fields: ctid                          +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j, p+
 Index index_bridge                                       +
     Index type: secondary                                +
     Leaf tuple size: 2, non-leaf tuple size: 1           +
     Non-leaf tuple fields: index_bridging_ctid           +
     Leaf tuple fields: index_bridging_ctid, ctid         +
 Index toast                                              +
     Index type: secondary                                +
     Leaf tuple size: 4, non-leaf tuple size: 3           +
     Non-leaf tuple fields: ctid, attnum, chunknum        +
     Leaf tuple fields: ctid, attnum, chunknum, data      +
 
(1 row)

SELECT orioledb_tbl_structure('o_test_non_index_bridging_options'::regclass, 'ne');
                               orioledb_tbl_structure                                
-------------------------------------------------------------------------------------
 Index ctid_primary contents                                                        +
 Page 0: level = 0, maxKeyLen = 6, nVacatedBytes = 0                                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                +
     Leftmost, Rightmost                                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 96, hikey = ('(0,2)')      +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)', '1', '{18,34}', '(6,6)')      +
   Chunk 1: offset = 1, location = 352, hikey location = 104, hikey = ('(0,3)')     +
     Item 1: offset = 360, tuple = ('(0,2)', '(0,2)', '2', '{19,35}', '(7,7)')      +
   Chunk 2: offset = 2, location = 448, hikey location = 112, hikey = ('(0,4)')     +
     Item 2: offset = 456, tuple = ('(0,3)', '(0,3)', '3', '{20,36}', '(8,8)')      +
   Chunk 3: offset = 3, location = 544, hikey location = 120, hikey = ('(0,5)')     +
     Item 3: offset = 552, tuple = ('(0,4)', '(0,4)', '4', '{21,37}', '(9,9)')      +
   Chunk 4: offset = 4, location = 640, hikey location = 128, hikey = ('(0,6)')     +
     Item 4: offset = 648, tuple = ('(0,5)', '(0,5)', '5', '{22,38}', '(10,10)')    +
   Chunk 5: offset = 5, location = 736, hikey location = 136, hikey = ('(0,7)')     +
     Item 5: offset = 744, tuple = ('(0,6)', '(0,6)', '6', '{23,39}', '(11,11)')    +
   Chunk 6: offset = 6, location = 832, hikey location = 144, hikey = ('(0,8)')     +
     Item 6: offset = 840, tuple = ('(0,7)', '(0,7)', '7', '{24,40}', '(12,12)')    +
   Chunk 7: offset = 7, location = 928, hikey location = 152, hikey = ('(0,9)')     +
     Item 7: offset = 936, tuple = ('(0,8)', '(0,8)', '8', '{25,41}', '(13,13)')    +
   Chunk 8: offset = 8, location = 1024, hikey location = 160, hikey = ('(0,10)')   +
     Item 8: offset = 1032, tuple = ('(0,9)', '(0,9)', '9', '{26,42}', '(14,14)')   +
   Chunk 9: offset = 9, location = 1120, hikey location = 168                       +
     Item 9: offset = 1128, tuple = ('(0,10)', '(0,10)', '10', '{27,43}', '(15,15)')+
                                                                                    +
 Index index_bridge: not loaded                                                     +
 Index toast: not loaded                                                            +
 
(1 row)

SELECT * FROM o_test_non_index_bridging_options;
 i  |    j    |    p    
----+---------+---------
  1 | {18,34} | (6,6)
  2 | {19,35} | (7,7)
  3 | {20,36} | (8,8)
  4 | {21,37} | (9,9)
  5 | {22,38} | (10,10)
  6 | {23,39} | (11,11)
  7 | {24,40} | (12,12)
  8 | {25,41} | (13,13)
  9 | {26,42} | (14,14)
 10 | {27,43} | (15,15)
(10 rows)

CREATE INDEX o_test_non_index_bridging_options_ix2 ON o_test_non_index_bridging_options USING btree (i) WITH (orioledb_index = off);
WARNING:  using bridged btree index for orioledb
DETAIL:  This feature is intended for testing purposes and is not recommended for normal usage.
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_non_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
Options: index_bridging=true

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_non_index_bridging_options ORDER BY i;
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Index Scan using o_test_non_index_bridging_options_ix2 on o_test_non_index_bridging_options
(1 row)

SELECT * FROM o_test_non_index_bridging_options ORDER BY i;
 i  |    j    |    p    
----+---------+---------
  1 | {18,34} | (6,6)
  2 | {19,35} | (7,7)
  3 | {20,36} | (8,8)
  4 | {21,37} | (9,9)
  5 | {22,38} | (10,10)
  6 | {23,39} | (11,11)
  7 | {24,40} | (12,12)
  8 | {25,41} | (13,13)
  9 | {26,42} | (14,14)
 10 | {27,43} | (15,15)
(10 rows)

COMMIT;
ALTER TABLE o_test_non_index_bridging_options RESET (index_bridging);
ERROR:  cannot disable 'index_bridging' for a table with bridged indices
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_non_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
Options: index_bridging=true

DROP INDEX o_test_non_index_bridging_options_ix2;
ALTER TABLE o_test_non_index_bridging_options RESET (index_bridging);
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 

SELECT orioledb_tbl_indices('o_test_non_index_bridging_options'::regclass, true);
                orioledb_tbl_indices                 
-----------------------------------------------------
 Index ctid_primary                                 +
     Index type: primary, unique, ctid              +
     Leaf tuple size: 4, non-leaf tuple size: 1     +
     Non-leaf tuple fields: ctid                    +
     Leaf tuple fields: ctid, i, j, p               +
 Index toast                                        +
     Index type: secondary                          +
     Leaf tuple size: 4, non-leaf tuple size: 3     +
     Non-leaf tuple fields: ctid, attnum, chunknum  +
     Leaf tuple fields: ctid, attnum, chunknum, data+
 
(1 row)

SELECT orioledb_tbl_structure('o_test_non_index_bridging_options'::regclass, 'ne');
                              orioledb_tbl_structure                              
----------------------------------------------------------------------------------
 Index ctid_primary contents                                                     +
 Page 0: level = 0, maxKeyLen = 6, nVacatedBytes = 0                             +
 state = free, datoid equal, relnode equal, ix_type = primary, clean             +
     Leftmost, Rightmost                                                         +
   Chunk 0: offset = 0, location = 256, hikey location = 96, hikey = ('(0,2)')   +
     Item 0: offset = 264, tuple = ('(0,1)', '1', '{18,34}', '(6,6)')            +
   Chunk 1: offset = 1, location = 352, hikey location = 104, hikey = ('(0,3)')  +
     Item 1: offset = 360, tuple = ('(0,2)', '2', '{19,35}', '(7,7)')            +
   Chunk 2: offset = 2, location = 448, hikey location = 112, hikey = ('(0,4)')  +
     Item 2: offset = 456, tuple = ('(0,3)', '3', '{20,36}', '(8,8)')            +
   Chunk 3: offset = 3, location = 544, hikey location = 120, hikey = ('(0,5)')  +
     Item 3: offset = 552, tuple = ('(0,4)', '4', '{21,37}', '(9,9)')            +
   Chunk 4: offset = 4, location = 640, hikey location = 128, hikey = ('(0,6)')  +
     Item 4: offset = 648, tuple = ('(0,5)', '5', '{22,38}', '(10,10)')          +
   Chunk 5: offset = 5, location = 736, hikey location = 136, hikey = ('(0,7)')  +
     Item 5: offset = 744, tuple = ('(0,6)', '6', '{23,39}', '(11,11)')          +
   Chunk 6: offset = 6, location = 832, hikey location = 144, hikey = ('(0,8)')  +
     Item 6: offset = 840, tuple = ('(0,7)', '7', '{24,40}', '(12,12)')          +
   Chunk 7: offset = 7, location = 928, hikey location = 152, hikey = ('(0,9)')  +
     Item 7: offset = 936, tuple = ('(0,8)', '8', '{25,41}', '(13,13)')          +
   Chunk 8: offset = 8, location = 1024, hikey location = 160, hikey = ('(0,10)')+
     Item 8: offset = 1032, tuple = ('(0,9)', '9', '{26,42}', '(14,14)')         +
   Chunk 9: offset = 9, location = 1120, hikey location = 168                    +
     Item 9: offset = 1128, tuple = ('(0,10)', '10', '{27,43}', '(15,15)')       +
                                                                                 +
 Index toast: not loaded                                                         +
 
(1 row)

SELECT * FROM o_test_non_index_bridging_options;
 i  |    j    |    p    
----+---------+---------
  1 | {18,34} | (6,6)
  2 | {19,35} | (7,7)
  3 | {20,36} | (8,8)
  4 | {21,37} | (9,9)
  5 | {22,38} | (10,10)
  6 | {23,39} | (11,11)
  7 | {24,40} | (12,12)
  8 | {25,41} | (13,13)
  9 | {26,42} | (14,14)
 10 | {27,43} | (15,15)
(10 rows)

INSERT INTO o_test_non_index_bridging_options
	SELECT v, ARRAY[v+17,v+33], point(v + 5, v + 5) FROM generate_series(11, 15) v;
SELECT orioledb_tbl_structure('o_test_non_index_bridging_options'::regclass, 'ne');
                              orioledb_tbl_structure                              
----------------------------------------------------------------------------------
 Index ctid_primary contents                                                     +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                             +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty             +
     Leftmost, Rightmost                                                         +
   Chunk 0: offset = 0, location = 256, hikey location = 96, hikey = ('(0,2)')   +
     Item 0: offset = 264, tuple = ('(0,1)', '1', '{18,34}', '(6,6)')            +
   Chunk 1: offset = 1, location = 352, hikey location = 104, hikey = ('(0,3)')  +
     Item 1: offset = 360, tuple = ('(0,2)', '2', '{19,35}', '(7,7)')            +
   Chunk 2: offset = 2, location = 448, hikey location = 112, hikey = ('(0,4)')  +
     Item 2: offset = 456, tuple = ('(0,3)', '3', '{20,36}', '(8,8)')            +
   Chunk 3: offset = 3, location = 544, hikey location = 120, hikey = ('(0,5)')  +
     Item 3: offset = 552, tuple = ('(0,4)', '4', '{21,37}', '(9,9)')            +
   Chunk 4: offset = 4, location = 640, hikey location = 128, hikey = ('(0,6)')  +
     Item 4: offset = 648, tuple = ('(0,5)', '5', '{22,38}', '(10,10)')          +
   Chunk 5: offset = 5, location = 736, hikey location = 136, hikey = ('(0,7)')  +
     Item 5: offset = 744, tuple = ('(0,6)', '6', '{23,39}', '(11,11)')          +
   Chunk 6: offset = 6, location = 832, hikey location = 144, hikey = ('(0,8)')  +
     Item 6: offset = 840, tuple = ('(0,7)', '7', '{24,40}', '(12,12)')          +
   Chunk 7: offset = 7, location = 928, hikey location = 152, hikey = ('(0,9)')  +
     Item 7: offset = 936, tuple = ('(0,8)', '8', '{25,41}', '(13,13)')          +
   Chunk 8: offset = 8, location = 1024, hikey location = 160, hikey = ('(0,10)')+
     Item 8: offset = 1032, tuple = ('(0,9)', '9', '{26,42}', '(14,14)')         +
   Chunk 9: offset = 9, location = 1120, hikey location = 168                    +
     Item 9: offset = 1136, tuple = ('(0,10)', '10', '{27,43}', '(15,15)')       +
     Item 10: offset = 1224, tuple = ('(0,11)', '11', '{28,44}', '(16,16)')      +
     Item 11: offset = 1312, tuple = ('(0,12)', '12', '{29,45}', '(17,17)')      +
     Item 12: offset = 1400, tuple = ('(0,13)', '13', '{30,46}', '(18,18)')      +
     Item 13: offset = 1488, tuple = ('(0,14)', '14', '{31,47}', '(19,19)')      +
     Item 14: offset = 1576, tuple = ('(0,15)', '15', '{32,48}', '(20,20)')      +
                                                                                 +
 Index toast: not loaded                                                         +
 
(1 row)

SELECT * FROM o_test_non_index_bridging_options;
 i  |    j    |    p    
----+---------+---------
  1 | {18,34} | (6,6)
  2 | {19,35} | (7,7)
  3 | {20,36} | (8,8)
  4 | {21,37} | (9,9)
  5 | {22,38} | (10,10)
  6 | {23,39} | (11,11)
  7 | {24,40} | (12,12)
  8 | {25,41} | (13,13)
  9 | {26,42} | (14,14)
 10 | {27,43} | (15,15)
 11 | {28,44} | (16,16)
 12 | {29,45} | (17,17)
 13 | {30,46} | (18,18)
 14 | {31,47} | (19,19)
 15 | {32,48} | (20,20)
(15 rows)

CREATE INDEX o_test_non_index_bridging_options_ix1 ON o_test_non_index_bridging_options USING btree (i);
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_non_index_bridging_options_ix1" btree (i)

CREATE INDEX o_test_non_index_bridging_options_ix2 ON o_test_non_index_bridging_options USING btree (i) WITH (orioledb_index = off);
WARNING:  using bridged btree index for orioledb
DETAIL:  This feature is intended for testing purposes and is not recommended for normal usage.
NOTICE:  index bridging is enabled for orioledb table 'o_test_non_index_bridging_options'
DETAIL:  index access method 'btree' is requested with index bridging for OrioleDB table
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_non_index_bridging_options_ix1" btree (i)
    "o_test_non_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
Options: index_bridging=true

ALTER INDEX o_test_non_index_bridging_options_ix2 RESET (orioledb_index);
ERROR:  Cannot change 'orioledb_index' option for existing indices
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_non_index_bridging_options_ix1" btree (i)
    "o_test_non_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
Options: index_bridging=true

ALTER INDEX o_test_non_index_bridging_options_ix1 SET (orioledb_index = off);
ERROR:  Cannot change 'orioledb_index' option for existing indices
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_non_index_bridging_options_ix1" btree (i)
    "o_test_non_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
Options: index_bridging=true

ALTER TABLE o_test_non_index_bridging_options SET (index_bridging);
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_non_index_bridging_options_ix1" btree (i)
    "o_test_non_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
Options: index_bridging=true

SELECT orioledb_tbl_indices('o_test_non_index_bridging_options'::regclass, true);
                   orioledb_tbl_indices                    
-----------------------------------------------------------
 Index ctid_primary                                       +
     Index type: primary, unique, ctid                    +
     Leaf tuple size: 5, non-leaf tuple size: 1           +
     Non-leaf tuple fields: ctid                          +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j, p+
 Index o_test_non_index_bridging_options_ix1              +
     Index type: secondary                                +
     Leaf tuple size: 2, non-leaf tuple size: 2           +
     Non-leaf tuple fields: i, ctid                       +
     Leaf tuple fields: i, ctid                           +
 Index index_bridge                                       +
     Index type: secondary                                +
     Leaf tuple size: 2, non-leaf tuple size: 1           +
     Non-leaf tuple fields: index_bridging_ctid           +
     Leaf tuple fields: index_bridging_ctid, ctid         +
 Index toast                                              +
     Index type: secondary                                +
     Leaf tuple size: 4, non-leaf tuple size: 3           +
     Non-leaf tuple fields: ctid, attnum, chunknum        +
     Leaf tuple fields: ctid, attnum, chunknum, data      +
 
(1 row)

ALTER TABLE o_test_non_index_bridging_options RESET (index_bridging);
ERROR:  cannot disable 'index_bridging' for a table with bridged indices
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_non_index_bridging_options_ix1" btree (i)
    "o_test_non_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
Options: index_bridging=true

SELECT orioledb_tbl_indices('o_test_non_index_bridging_options'::regclass, true);
                   orioledb_tbl_indices                    
-----------------------------------------------------------
 Index ctid_primary                                       +
     Index type: primary, unique, ctid                    +
     Leaf tuple size: 5, non-leaf tuple size: 1           +
     Non-leaf tuple fields: ctid                          +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j, p+
 Index o_test_non_index_bridging_options_ix1              +
     Index type: secondary                                +
     Leaf tuple size: 2, non-leaf tuple size: 2           +
     Non-leaf tuple fields: i, ctid                       +
     Leaf tuple fields: i, ctid                           +
 Index index_bridge                                       +
     Index type: secondary                                +
     Leaf tuple size: 2, non-leaf tuple size: 1           +
     Non-leaf tuple fields: index_bridging_ctid           +
     Leaf tuple fields: index_bridging_ctid, ctid         +
 Index toast                                              +
     Index type: secondary                                +
     Leaf tuple size: 4, non-leaf tuple size: 3           +
     Non-leaf tuple fields: ctid, attnum, chunknum        +
     Leaf tuple fields: ctid, attnum, chunknum, data      +
 
(1 row)

SELECT orioledb_tbl_structure('o_test_non_index_bridging_options'::regclass, 'ne');
                                orioledb_tbl_structure                                
--------------------------------------------------------------------------------------
 Index ctid_primary contents                                                         +
 Page 0: level = 0, maxKeyLen = 6, nVacatedBytes = 0                                 +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                 +
     Leftmost, Rightmost                                                             +
   Chunk 0: offset = 0, location = 256, hikey location = 120, hikey = ('(0,2)')      +
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)', '1', '{18,34}', '(6,6)')       +
   Chunk 1: offset = 1, location = 352, hikey location = 128, hikey = ('(0,3)')      +
     Item 1: offset = 360, tuple = ('(0,2)', '(0,2)', '2', '{19,35}', '(7,7)')       +
   Chunk 2: offset = 2, location = 448, hikey location = 136, hikey = ('(0,4)')      +
     Item 2: offset = 456, tuple = ('(0,3)', '(0,3)', '3', '{20,36}', '(8,8)')       +
   Chunk 3: offset = 3, location = 544, hikey location = 144, hikey = ('(0,5)')      +
     Item 3: offset = 552, tuple = ('(0,4)', '(0,4)', '4', '{21,37}', '(9,9)')       +
   Chunk 4: offset = 4, location = 640, hikey location = 152, hikey = ('(0,6)')      +
     Item 4: offset = 648, tuple = ('(0,5)', '(0,5)', '5', '{22,38}', '(10,10)')     +
   Chunk 5: offset = 5, location = 736, hikey location = 160, hikey = ('(0,7)')      +
     Item 5: offset = 744, tuple = ('(0,6)', '(0,6)', '6', '{23,39}', '(11,11)')     +
   Chunk 6: offset = 6, location = 832, hikey location = 168, hikey = ('(0,8)')      +
     Item 6: offset = 840, tuple = ('(0,7)', '(0,7)', '7', '{24,40}', '(12,12)')     +
   Chunk 7: offset = 7, location = 928, hikey location = 176, hikey = ('(0,9)')      +
     Item 7: offset = 936, tuple = ('(0,8)', '(0,8)', '8', '{25,41}', '(13,13)')     +
   Chunk 8: offset = 8, location = 1024, hikey location = 184, hikey = ('(0,10)')    +
     Item 8: offset = 1032, tuple = ('(0,9)', '(0,9)', '9', '{26,42}', '(14,14)')    +
   Chunk 9: offset = 9, location = 1120, hikey location = 192, hikey = ('(0,11)')    +
     Item 9: offset = 1128, tuple = ('(0,10)', '(0,10)', '10', '{27,43}', '(15,15)') +
   Chunk 10: offset = 10, location = 1216, hikey location = 200, hikey = ('(0,12)')  +
     Item 10: offset = 1224, tuple = ('(0,11)', '(0,11)', '11', '{28,44}', '(16,16)')+
   Chunk 11: offset = 11, location = 1312, hikey location = 208, hikey = ('(0,13)')  +
     Item 11: offset = 1320, tuple = ('(0,12)', '(0,12)', '12', '{29,45}', '(17,17)')+
   Chunk 12: offset = 12, location = 1408, hikey location = 216, hikey = ('(0,14)')  +
     Item 12: offset = 1416, tuple = ('(0,13)', '(0,13)', '13', '{30,46}', '(18,18)')+
   Chunk 13: offset = 13, location = 1504, hikey location = 224, hikey = ('(0,15)')  +
     Item 13: offset = 1512, tuple = ('(0,14)', '(0,14)', '14', '{31,47}', '(19,19)')+
   Chunk 14: offset = 14, location = 1600, hikey location = 232                      +
     Item 14: offset = 1608, tuple = ('(0,15)', '(0,15)', '15', '{32,48}', '(20,20)')+
                                                                                     +
 Index o_test_non_index_bridging_options_ix1: not loaded                             +
 Index index_bridge: not loaded                                                      +
 Index toast: not loaded                                                             +
 
(1 row)

SELECT * FROM o_test_non_index_bridging_options;
 i  |    j    |    p    
----+---------+---------
  1 | {18,34} | (6,6)
  2 | {19,35} | (7,7)
  3 | {20,36} | (8,8)
  4 | {21,37} | (9,9)
  5 | {22,38} | (10,10)
  6 | {23,39} | (11,11)
  7 | {24,40} | (12,12)
  8 | {25,41} | (13,13)
  9 | {26,42} | (14,14)
 10 | {27,43} | (15,15)
 11 | {28,44} | (16,16)
 12 | {29,45} | (17,17)
 13 | {30,46} | (18,18)
 14 | {31,47} | (19,19)
 15 | {32,48} | (20,20)
(15 rows)

ALTER TABLE o_test_non_index_bridging_options ADD PRIMARY KEY (i);
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_non_index_bridging_options_pkey" PRIMARY KEY, btree (i)
    "o_test_non_index_bridging_options_ix1" btree (i)
    "o_test_non_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
Options: index_bridging=true

SELECT orioledb_tbl_indices('o_test_non_index_bridging_options'::regclass, true);
                orioledb_tbl_indices                 
-----------------------------------------------------
 Index o_test_non_index_bridging_options_pkey       +
     Index type: primary, unique                    +
     Leaf tuple size: 4, non-leaf tuple size: 1     +
     Non-leaf tuple fields: i                       +
     Leaf tuple fields: index_bridging_ctid, i, j, p+
 Index o_test_non_index_bridging_options_ix1        +
     Index type: secondary                          +
     Leaf tuple size: 1, non-leaf tuple size: 1     +
     Non-leaf tuple fields: i                       +
     Leaf tuple fields: i                           +
 Index index_bridge                                 +
     Index type: secondary                          +
     Leaf tuple size: 2, non-leaf tuple size: 1     +
     Non-leaf tuple fields: index_bridging_ctid     +
     Leaf tuple fields: index_bridging_ctid, i      +
 Index toast                                        +
     Index type: secondary                          +
     Leaf tuple size: 4, non-leaf tuple size: 3     +
     Non-leaf tuple fields: i, attnum, chunknum     +
     Leaf tuple fields: i, attnum, chunknum, data   +
 
(1 row)

SELECT orioledb_tbl_structure('o_test_non_index_bridging_options'::regclass, 'ne');
                             orioledb_tbl_structure                             
--------------------------------------------------------------------------------
 Index o_test_non_index_bridging_options_pkey contents                         +
 Page 0: level = 0, maxKeyLen = 4, nVacatedBytes = 0                           +
 state = free, datoid equal, relnode equal, ix_type = primary, clean           +
     Leftmost, Rightmost                                                       +
   Chunk 0: offset = 0, location = 256, hikey location = 120, hikey = ('2')    +
     Item 0: offset = 264, tuple = ('(0,1)', '1', '{18,34}', '(6,6)')          +
   Chunk 1: offset = 1, location = 352, hikey location = 128, hikey = ('3')    +
     Item 1: offset = 360, tuple = ('(0,2)', '2', '{19,35}', '(7,7)')          +
   Chunk 2: offset = 2, location = 448, hikey location = 136, hikey = ('4')    +
     Item 2: offset = 456, tuple = ('(0,3)', '3', '{20,36}', '(8,8)')          +
   Chunk 3: offset = 3, location = 544, hikey location = 144, hikey = ('5')    +
     Item 3: offset = 552, tuple = ('(0,4)', '4', '{21,37}', '(9,9)')          +
   Chunk 4: offset = 4, location = 640, hikey location = 152, hikey = ('6')    +
     Item 4: offset = 648, tuple = ('(0,5)', '5', '{22,38}', '(10,10)')        +
   Chunk 5: offset = 5, location = 736, hikey location = 160, hikey = ('7')    +
     Item 5: offset = 744, tuple = ('(0,6)', '6', '{23,39}', '(11,11)')        +
   Chunk 6: offset = 6, location = 832, hikey location = 168, hikey = ('8')    +
     Item 6: offset = 840, tuple = ('(0,7)', '7', '{24,40}', '(12,12)')        +
   Chunk 7: offset = 7, location = 928, hikey location = 176, hikey = ('9')    +
     Item 7: offset = 936, tuple = ('(0,8)', '8', '{25,41}', '(13,13)')        +
   Chunk 8: offset = 8, location = 1024, hikey location = 184, hikey = ('10')  +
     Item 8: offset = 1032, tuple = ('(0,9)', '9', '{26,42}', '(14,14)')       +
   Chunk 9: offset = 9, location = 1120, hikey location = 192, hikey = ('11')  +
     Item 9: offset = 1128, tuple = ('(0,10)', '10', '{27,43}', '(15,15)')     +
   Chunk 10: offset = 10, location = 1216, hikey location = 200, hikey = ('12')+
     Item 10: offset = 1224, tuple = ('(0,11)', '11', '{28,44}', '(16,16)')    +
   Chunk 11: offset = 11, location = 1312, hikey location = 208, hikey = ('13')+
     Item 11: offset = 1320, tuple = ('(0,12)', '12', '{29,45}', '(17,17)')    +
   Chunk 12: offset = 12, location = 1408, hikey location = 216, hikey = ('14')+
     Item 12: offset = 1416, tuple = ('(0,13)', '13', '{30,46}', '(18,18)')    +
   Chunk 13: offset = 13, location = 1504, hikey location = 224, hikey = ('15')+
     Item 13: offset = 1512, tuple = ('(0,14)', '14', '{31,47}', '(19,19)')    +
   Chunk 14: offset = 14, location = 1600, hikey location = 232                +
     Item 14: offset = 1608, tuple = ('(0,15)', '15', '{32,48}', '(20,20)')    +
                                                                               +
 Index o_test_non_index_bridging_options_ix1: not loaded                       +
 Index index_bridge: not loaded                                                +
 Index toast: not loaded                                                       +
 
(1 row)

SELECT * FROM o_test_non_index_bridging_options;
 i  |    j    |    p    
----+---------+---------
  1 | {18,34} | (6,6)
  2 | {19,35} | (7,7)
  3 | {20,36} | (8,8)
  4 | {21,37} | (9,9)
  5 | {22,38} | (10,10)
  6 | {23,39} | (11,11)
  7 | {24,40} | (12,12)
  8 | {25,41} | (13,13)
  9 | {26,42} | (14,14)
 10 | {27,43} | (15,15)
 11 | {28,44} | (16,16)
 12 | {29,45} | (17,17)
 13 | {30,46} | (18,18)
 14 | {31,47} | (19,19)
 15 | {32,48} | (20,20)
(15 rows)

INSERT INTO o_test_non_index_bridging_options
	SELECT v, ARRAY[v+17,v+33], point(v + 5, v + 5) FROM generate_series(16, 20) v;
SELECT orioledb_tbl_structure('o_test_non_index_bridging_options'::regclass, 'ne');
                              orioledb_tbl_structure                               
-----------------------------------------------------------------------------------
 Index o_test_non_index_bridging_options_pkey contents                            +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                              +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty              +
     Leftmost, Rightmost                                                          +
   Chunk 0: offset = 0, location = 256, hikey location = 120, hikey = ('2')       +
     Item 0: offset = 264, tuple = ('(0,1)', '1', '{18,34}', '(6,6)')             +
   Chunk 1: offset = 1, location = 352, hikey location = 128, hikey = ('3')       +
     Item 1: offset = 360, tuple = ('(0,2)', '2', '{19,35}', '(7,7)')             +
   Chunk 2: offset = 2, location = 448, hikey location = 136, hikey = ('4')       +
     Item 2: offset = 456, tuple = ('(0,3)', '3', '{20,36}', '(8,8)')             +
   Chunk 3: offset = 3, location = 544, hikey location = 144, hikey = ('5')       +
     Item 3: offset = 552, tuple = ('(0,4)', '4', '{21,37}', '(9,9)')             +
   Chunk 4: offset = 4, location = 640, hikey location = 152, hikey = ('6')       +
     Item 4: offset = 648, tuple = ('(0,5)', '5', '{22,38}', '(10,10)')           +
   Chunk 5: offset = 5, location = 736, hikey location = 160, hikey = ('7')       +
     Item 5: offset = 744, tuple = ('(0,6)', '6', '{23,39}', '(11,11)')           +
   Chunk 6: offset = 6, location = 832, hikey location = 168, hikey = ('8')       +
     Item 6: offset = 840, tuple = ('(0,7)', '7', '{24,40}', '(12,12)')           +
   Chunk 7: offset = 7, location = 928, hikey location = 176, hikey = ('9')       +
     Item 7: offset = 936, tuple = ('(0,8)', '8', '{25,41}', '(13,13)')           +
   Chunk 8: offset = 8, location = 1024, hikey location = 184, hikey = ('10')     +
     Item 8: offset = 1032, tuple = ('(0,9)', '9', '{26,42}', '(14,14)')          +
   Chunk 9: offset = 9, location = 1120, hikey location = 192, hikey = ('11')     +
     Item 9: offset = 1128, tuple = ('(0,10)', '10', '{27,43}', '(15,15)')        +
   Chunk 10: offset = 10, location = 1216, hikey location = 200, hikey = ('12')   +
     Item 10: offset = 1224, tuple = ('(0,11)', '11', '{28,44}', '(16,16)')       +
   Chunk 11: offset = 11, location = 1312, hikey location = 208, hikey = ('13')   +
     Item 11: offset = 1320, tuple = ('(0,12)', '12', '{29,45}', '(17,17)')       +
   Chunk 12: offset = 12, location = 1408, hikey location = 216, hikey = ('14')   +
     Item 12: offset = 1416, tuple = ('(0,13)', '13', '{30,46}', '(18,18)')       +
   Chunk 13: offset = 13, location = 1504, hikey location = 224, hikey = ('15')   +
     Item 13: offset = 1512, tuple = ('(0,14)', '14', '{31,47}', '(19,19)')       +
   Chunk 14: offset = 14, location = 1600, hikey location = 232                   +
     Item 14: offset = 1616, tuple = ('(0,15)', '15', '{32,48}', '(20,20)')       +
     Item 15: offset = 1704, tuple = ('(0,16)', '16', '{33,49}', '(21,21)')       +
     Item 16: offset = 1792, tuple = ('(0,17)', '17', '{34,50}', '(22,22)')       +
     Item 17: offset = 1880, tuple = ('(0,18)', '18', '{35,51}', '(23,23)')       +
     Item 18: offset = 1968, tuple = ('(0,19)', '19', '{36,52}', '(24,24)')       +
     Item 19: offset = 2056, tuple = ('(0,20)', '20', '{37,53}', '(25,25)')       +
                                                                                  +
 Index o_test_non_index_bridging_options_ix1 contents                             +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                              +
 state = free, datoid equal, relnode equal, ix_type = regular, dirty              +
     Leftmost, Rightmost                                                          +
   Chunk 0: offset = 0, location = 256, hikey location = 120, hikey = ('2')       +
     Item 0: offset = 264, tuple = ('1')                                          +
   Chunk 1: offset = 1, location = 288, hikey location = 128, hikey = ('3')       +
     Item 1: offset = 296, tuple = ('2')                                          +
   Chunk 2: offset = 2, location = 320, hikey location = 136, hikey = ('4')       +
     Item 2: offset = 328, tuple = ('3')                                          +
   Chunk 3: offset = 3, location = 352, hikey location = 144, hikey = ('5')       +
     Item 3: offset = 360, tuple = ('4')                                          +
   Chunk 4: offset = 4, location = 384, hikey location = 152, hikey = ('6')       +
     Item 4: offset = 392, tuple = ('5')                                          +
   Chunk 5: offset = 5, location = 416, hikey location = 160, hikey = ('7')       +
     Item 5: offset = 424, tuple = ('6')                                          +
   Chunk 6: offset = 6, location = 448, hikey location = 168, hikey = ('8')       +
     Item 6: offset = 456, tuple = ('7')                                          +
   Chunk 7: offset = 7, location = 480, hikey location = 176, hikey = ('9')       +
     Item 7: offset = 488, tuple = ('8')                                          +
   Chunk 8: offset = 8, location = 512, hikey location = 184, hikey = ('10')      +
     Item 8: offset = 520, tuple = ('9')                                          +
   Chunk 9: offset = 9, location = 544, hikey location = 192, hikey = ('11')      +
     Item 9: offset = 552, tuple = ('10')                                         +
   Chunk 10: offset = 10, location = 576, hikey location = 200, hikey = ('12')    +
     Item 10: offset = 584, tuple = ('11')                                        +
   Chunk 11: offset = 11, location = 608, hikey location = 208, hikey = ('13')    +
     Item 11: offset = 616, tuple = ('12')                                        +
   Chunk 12: offset = 12, location = 640, hikey location = 216, hikey = ('14')    +
     Item 12: offset = 648, tuple = ('13')                                        +
   Chunk 13: offset = 13, location = 672, hikey location = 224, hikey = ('15')    +
     Item 13: offset = 680, tuple = ('14')                                        +
   Chunk 14: offset = 14, location = 704, hikey location = 232                    +
     Item 14: offset = 720, tuple = ('15')                                        +
     Item 15: offset = 744, tuple = ('16')                                        +
     Item 16: offset = 768, tuple = ('17')                                        +
     Item 17: offset = 792, tuple = ('18')                                        +
     Item 18: offset = 816, tuple = ('19')                                        +
     Item 19: offset = 840, tuple = ('20')                                        +
                                                                                  +
 Index index_bridge contents                                                      +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                              +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty               +
     Leftmost, Rightmost                                                          +
   Chunk 0: offset = 0, location = 256, hikey location = 120, hikey = ('(0,2)')   +
     Item 0: offset = 264, tuple = ('(0,1)', '1')                                 +
   Chunk 1: offset = 1, location = 296, hikey location = 128, hikey = ('(0,3)')   +
     Item 1: offset = 304, tuple = ('(0,2)', '2')                                 +
   Chunk 2: offset = 2, location = 336, hikey location = 136, hikey = ('(0,4)')   +
     Item 2: offset = 344, tuple = ('(0,3)', '3')                                 +
   Chunk 3: offset = 3, location = 376, hikey location = 144, hikey = ('(0,5)')   +
     Item 3: offset = 384, tuple = ('(0,4)', '4')                                 +
   Chunk 4: offset = 4, location = 416, hikey location = 152, hikey = ('(0,6)')   +
     Item 4: offset = 424, tuple = ('(0,5)', '5')                                 +
   Chunk 5: offset = 5, location = 456, hikey location = 160, hikey = ('(0,7)')   +
     Item 5: offset = 464, tuple = ('(0,6)', '6')                                 +
   Chunk 6: offset = 6, location = 496, hikey location = 168, hikey = ('(0,8)')   +
     Item 6: offset = 504, tuple = ('(0,7)', '7')                                 +
   Chunk 7: offset = 7, location = 536, hikey location = 176, hikey = ('(0,9)')   +
     Item 7: offset = 544, tuple = ('(0,8)', '8')                                 +
   Chunk 8: offset = 8, location = 576, hikey location = 184, hikey = ('(0,10)')  +
     Item 8: offset = 584, tuple = ('(0,9)', '9')                                 +
   Chunk 9: offset = 9, location = 616, hikey location = 192, hikey = ('(0,11)')  +
     Item 9: offset = 624, tuple = ('(0,10)', '10')                               +
   Chunk 10: offset = 10, location = 656, hikey location = 200, hikey = ('(0,12)')+
     Item 10: offset = 664, tuple = ('(0,11)', '11')                              +
   Chunk 11: offset = 11, location = 696, hikey location = 208, hikey = ('(0,13)')+
     Item 11: offset = 704, tuple = ('(0,12)', '12')                              +
   Chunk 12: offset = 12, location = 736, hikey location = 216, hikey = ('(0,14)')+
     Item 12: offset = 744, tuple = ('(0,13)', '13')                              +
   Chunk 13: offset = 13, location = 776, hikey location = 224, hikey = ('(0,15)')+
     Item 13: offset = 784, tuple = ('(0,14)', '14')                              +
   Chunk 14: offset = 14, location = 816, hikey location = 232                    +
     Item 14: offset = 832, tuple = ('(0,15)', '15')                              +
     Item 15: offset = 864, tuple = ('(0,16)', '16')                              +
     Item 16: offset = 896, tuple = ('(0,17)', '17')                              +
     Item 17: offset = 928, tuple = ('(0,18)', '18')                              +
     Item 18: offset = 960, tuple = ('(0,19)', '19')                              +
     Item 19: offset = 992, tuple = ('(0,20)', '20')                              +
                                                                                  +
 Index toast: not loaded                                                          +
 
(1 row)

DROP INDEX o_test_non_index_bridging_options_ix1;
BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_non_index_bridging_options ORDER BY i;
                           QUERY PLAN                            
-----------------------------------------------------------------
 Custom Scan (o_scan) on o_test_non_index_bridging_options
   Forward index scan of: o_test_non_index_bridging_options_pkey
(2 rows)

SELECT * FROM o_test_non_index_bridging_options ORDER BY i;
 i  |    j    |    p    
----+---------+---------
  1 | {18,34} | (6,6)
  2 | {19,35} | (7,7)
  3 | {20,36} | (8,8)
  4 | {21,37} | (9,9)
  5 | {22,38} | (10,10)
  6 | {23,39} | (11,11)
  7 | {24,40} | (12,12)
  8 | {25,41} | (13,13)
  9 | {26,42} | (14,14)
 10 | {27,43} | (15,15)
 11 | {28,44} | (16,16)
 12 | {29,45} | (17,17)
 13 | {30,46} | (18,18)
 14 | {31,47} | (19,19)
 15 | {32,48} | (20,20)
 16 | {33,49} | (21,21)
 17 | {34,50} | (22,22)
 18 | {35,51} | (23,23)
 19 | {36,52} | (24,24)
 20 | {37,53} | (25,25)
(20 rows)

COMMIT;
DROP INDEX o_test_non_index_bridging_options_ix2;
ALTER TABLE o_test_non_index_bridging_options RESET (index_bridging);
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_non_index_bridging_options_pkey" PRIMARY KEY, btree (i)

ALTER TABLE o_test_non_index_bridging_options DROP CONSTRAINT o_test_non_index_bridging_options_pkey;
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 

SELECT orioledb_tbl_indices('o_test_non_index_bridging_options'::regclass, true);
                orioledb_tbl_indices                 
-----------------------------------------------------
 Index ctid_primary                                 +
     Index type: primary, unique, ctid              +
     Leaf tuple size: 4, non-leaf tuple size: 1     +
     Non-leaf tuple fields: ctid                    +
     Leaf tuple fields: ctid, i, j, p               +
 Index toast                                        +
     Index type: secondary                          +
     Leaf tuple size: 4, non-leaf tuple size: 3     +
     Non-leaf tuple fields: ctid, attnum, chunknum  +
     Leaf tuple fields: ctid, attnum, chunknum, data+
 
(1 row)

SELECT orioledb_tbl_structure('o_test_non_index_bridging_options'::regclass, 'ne');
                              orioledb_tbl_structure                               
-----------------------------------------------------------------------------------
 Index ctid_primary contents                                                      +
 Page 0: level = 0, maxKeyLen = 6, nVacatedBytes = 0                              +
 state = free, datoid equal, relnode equal, ix_type = primary, clean              +
     Leftmost, Rightmost                                                          +
   Chunk 0: offset = 0, location = 256, hikey location = 96, hikey = ('(0,3)')    +
     Item 0: offset = 264, tuple = ('(0,1)', '1', '{18,34}', '(6,6)')             +
     Item 1: offset = 352, tuple = ('(0,2)', '2', '{19,35}', '(7,7)')             +
   Chunk 1: offset = 2, location = 440, hikey location = 104, hikey = ('(0,5)')   +
     Item 2: offset = 448, tuple = ('(0,3)', '3', '{20,36}', '(8,8)')             +
     Item 3: offset = 536, tuple = ('(0,4)', '4', '{21,37}', '(9,9)')             +
   Chunk 2: offset = 4, location = 624, hikey location = 112, hikey = ('(0,7)')   +
     Item 4: offset = 632, tuple = ('(0,5)', '5', '{22,38}', '(10,10)')           +
     Item 5: offset = 720, tuple = ('(0,6)', '6', '{23,39}', '(11,11)')           +
   Chunk 3: offset = 6, location = 808, hikey location = 120, hikey = ('(0,9)')   +
     Item 6: offset = 816, tuple = ('(0,7)', '7', '{24,40}', '(12,12)')           +
     Item 7: offset = 904, tuple = ('(0,8)', '8', '{25,41}', '(13,13)')           +
   Chunk 4: offset = 8, location = 992, hikey location = 128, hikey = ('(0,11)')  +
     Item 8: offset = 1000, tuple = ('(0,9)', '9', '{26,42}', '(14,14)')          +
     Item 9: offset = 1088, tuple = ('(0,10)', '10', '{27,43}', '(15,15)')        +
   Chunk 5: offset = 10, location = 1176, hikey location = 136, hikey = ('(0,13)')+
     Item 10: offset = 1184, tuple = ('(0,11)', '11', '{28,44}', '(16,16)')       +
     Item 11: offset = 1272, tuple = ('(0,12)', '12', '{29,45}', '(17,17)')       +
   Chunk 6: offset = 12, location = 1360, hikey location = 144, hikey = ('(0,15)')+
     Item 12: offset = 1368, tuple = ('(0,13)', '13', '{30,46}', '(18,18)')       +
     Item 13: offset = 1456, tuple = ('(0,14)', '14', '{31,47}', '(19,19)')       +
   Chunk 7: offset = 14, location = 1544, hikey location = 152, hikey = ('(0,17)')+
     Item 14: offset = 1552, tuple = ('(0,15)', '15', '{32,48}', '(20,20)')       +
     Item 15: offset = 1640, tuple = ('(0,16)', '16', '{33,49}', '(21,21)')       +
   Chunk 8: offset = 16, location = 1728, hikey location = 160, hikey = ('(0,19)')+
     Item 16: offset = 1736, tuple = ('(0,17)', '17', '{34,50}', '(22,22)')       +
     Item 17: offset = 1824, tuple = ('(0,18)', '18', '{35,51}', '(23,23)')       +
   Chunk 9: offset = 18, location = 1912, hikey location = 168                    +
     Item 18: offset = 1920, tuple = ('(0,19)', '19', '{36,52}', '(24,24)')       +
     Item 19: offset = 2008, tuple = ('(0,20)', '20', '{37,53}', '(25,25)')       +
                                                                                  +
 Index toast: not loaded                                                          +
 
(1 row)

SELECT * FROM o_test_non_index_bridging_options;
 i  |    j    |    p    
----+---------+---------
  1 | {18,34} | (6,6)
  2 | {19,35} | (7,7)
  3 | {20,36} | (8,8)
  4 | {21,37} | (9,9)
  5 | {22,38} | (10,10)
  6 | {23,39} | (11,11)
  7 | {24,40} | (12,12)
  8 | {25,41} | (13,13)
  9 | {26,42} | (14,14)
 10 | {27,43} | (15,15)
 11 | {28,44} | (16,16)
 12 | {29,45} | (17,17)
 13 | {30,46} | (18,18)
 14 | {31,47} | (19,19)
 15 | {32,48} | (20,20)
 16 | {33,49} | (21,21)
 17 | {34,50} | (22,22)
 18 | {35,51} | (23,23)
 19 | {36,52} | (24,24)
 20 | {37,53} | (25,25)
(20 rows)

INSERT INTO o_test_non_index_bridging_options
	SELECT v, ARRAY[v+17,v+33], point(v + 5, v + 5) FROM generate_series(21, 25) v;
SELECT orioledb_tbl_structure('o_test_non_index_bridging_options'::regclass, 'ne');
                              orioledb_tbl_structure                               
-----------------------------------------------------------------------------------
 Index ctid_primary contents                                                      +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                              +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty              +
     Leftmost, Rightmost                                                          +
   Chunk 0: offset = 0, location = 256, hikey location = 96, hikey = ('(0,3)')    +
     Item 0: offset = 264, tuple = ('(0,1)', '1', '{18,34}', '(6,6)')             +
     Item 1: offset = 352, tuple = ('(0,2)', '2', '{19,35}', '(7,7)')             +
   Chunk 1: offset = 2, location = 440, hikey location = 104, hikey = ('(0,5)')   +
     Item 2: offset = 448, tuple = ('(0,3)', '3', '{20,36}', '(8,8)')             +
     Item 3: offset = 536, tuple = ('(0,4)', '4', '{21,37}', '(9,9)')             +
   Chunk 2: offset = 4, location = 624, hikey location = 112, hikey = ('(0,7)')   +
     Item 4: offset = 632, tuple = ('(0,5)', '5', '{22,38}', '(10,10)')           +
     Item 5: offset = 720, tuple = ('(0,6)', '6', '{23,39}', '(11,11)')           +
   Chunk 3: offset = 6, location = 808, hikey location = 120, hikey = ('(0,9)')   +
     Item 6: offset = 816, tuple = ('(0,7)', '7', '{24,40}', '(12,12)')           +
     Item 7: offset = 904, tuple = ('(0,8)', '8', '{25,41}', '(13,13)')           +
   Chunk 4: offset = 8, location = 992, hikey location = 128, hikey = ('(0,11)')  +
     Item 8: offset = 1000, tuple = ('(0,9)', '9', '{26,42}', '(14,14)')          +
     Item 9: offset = 1088, tuple = ('(0,10)', '10', '{27,43}', '(15,15)')        +
   Chunk 5: offset = 10, location = 1176, hikey location = 136, hikey = ('(0,13)')+
     Item 10: offset = 1184, tuple = ('(0,11)', '11', '{28,44}', '(16,16)')       +
     Item 11: offset = 1272, tuple = ('(0,12)', '12', '{29,45}', '(17,17)')       +
   Chunk 6: offset = 12, location = 1360, hikey location = 144, hikey = ('(0,15)')+
     Item 12: offset = 1368, tuple = ('(0,13)', '13', '{30,46}', '(18,18)')       +
     Item 13: offset = 1456, tuple = ('(0,14)', '14', '{31,47}', '(19,19)')       +
   Chunk 7: offset = 14, location = 1544, hikey location = 152, hikey = ('(0,17)')+
     Item 14: offset = 1552, tuple = ('(0,15)', '15', '{32,48}', '(20,20)')       +
     Item 15: offset = 1640, tuple = ('(0,16)', '16', '{33,49}', '(21,21)')       +
   Chunk 8: offset = 16, location = 1728, hikey location = 160, hikey = ('(0,19)')+
     Item 16: offset = 1736, tuple = ('(0,17)', '17', '{34,50}', '(22,22)')       +
     Item 17: offset = 1824, tuple = ('(0,18)', '18', '{35,51}', '(23,23)')       +
   Chunk 9: offset = 18, location = 1912, hikey location = 168                    +
     Item 18: offset = 1928, tuple = ('(0,19)', '19', '{36,52}', '(24,24)')       +
     Item 19: offset = 2016, tuple = ('(0,20)', '20', '{37,53}', '(25,25)')       +
     Item 20: offset = 2104, tuple = ('(0,21)', '21', '{38,54}', '(26,26)')       +
     Item 21: offset = 2192, tuple = ('(0,22)', '22', '{39,55}', '(27,27)')       +
     Item 22: offset = 2280, tuple = ('(0,23)', '23', '{40,56}', '(28,28)')       +
     Item 23: offset = 2368, tuple = ('(0,24)', '24', '{41,57}', '(29,29)')       +
     Item 24: offset = 2456, tuple = ('(0,25)', '25', '{42,58}', '(30,30)')       +
                                                                                  +
 Index toast: not loaded                                                          +
 
(1 row)

CREATE INDEX o_test_non_index_bridging_options_ix2 ON o_test_non_index_bridging_options USING btree (i) WITH (orioledb_index = off);
WARNING:  using bridged btree index for orioledb
DETAIL:  This feature is intended for testing purposes and is not recommended for normal usage.
NOTICE:  index bridging is enabled for orioledb table 'o_test_non_index_bridging_options'
DETAIL:  index access method 'btree' is requested with index bridging for OrioleDB table
\d+ o_test_non_index_bridging_options
                  Table "index_bridging.o_test_non_index_bridging_options"
 Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+-----------+-----------+----------+---------+----------+--------------+-------------
 i      | integer   |           | not null |         | plain    |              | 
 j      | integer[] |           |          |         | extended |              | 
 p      | point     |           |          |         | plain    |              | 
Indexes:
    "o_test_non_index_bridging_options_ix2" btree (i) WITH (orioledb_index=off)
Options: index_bridging=true

SELECT orioledb_tbl_indices('o_test_non_index_bridging_options'::regclass, true);
                   orioledb_tbl_indices                    
-----------------------------------------------------------
 Index ctid_primary                                       +
     Index type: primary, unique, ctid                    +
     Leaf tuple size: 5, non-leaf tuple size: 1           +
     Non-leaf tuple fields: ctid                          +
     Leaf tuple fields: ctid, index_bridging_ctid, i, j, p+
 Index index_bridge                                       +
     Index type: secondary                                +
     Leaf tuple size: 2, non-leaf tuple size: 1           +
     Non-leaf tuple fields: index_bridging_ctid           +
     Leaf tuple fields: index_bridging_ctid, ctid         +
 Index toast                                              +
     Index type: secondary                                +
     Leaf tuple size: 4, non-leaf tuple size: 3           +
     Non-leaf tuple fields: ctid, attnum, chunknum        +
     Leaf tuple fields: ctid, attnum, chunknum, data      +
 
(1 row)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_non_index_bridging_options ORDER BY i;
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Index Scan using o_test_non_index_bridging_options_ix2 on o_test_non_index_bridging_options
(1 row)

SELECT * FROM o_test_non_index_bridging_options ORDER BY i;
 i  |    j    |    p    
----+---------+---------
  1 | {18,34} | (6,6)
  2 | {19,35} | (7,7)
  3 | {20,36} | (8,8)
  4 | {21,37} | (9,9)
  5 | {22,38} | (10,10)
  6 | {23,39} | (11,11)
  7 | {24,40} | (12,12)
  8 | {25,41} | (13,13)
  9 | {26,42} | (14,14)
 10 | {27,43} | (15,15)
 11 | {28,44} | (16,16)
 12 | {29,45} | (17,17)
 13 | {30,46} | (18,18)
 14 | {31,47} | (19,19)
 15 | {32,48} | (20,20)
 16 | {33,49} | (21,21)
 17 | {34,50} | (22,22)
 18 | {35,51} | (23,23)
 19 | {36,52} | (24,24)
 20 | {37,53} | (25,25)
 21 | {38,54} | (26,26)
 22 | {39,55} | (27,27)
 23 | {40,56} | (28,28)
 24 | {41,57} | (29,29)
 25 | {42,58} | (30,30)
(25 rows)

COMMIT;
create table o_test_toastable_offset(i int, b int, a text, m int) using orioledb;
alter table o_test_toastable_offset set (index_bridging=on);
insert into o_test_toastable_offset values (4,6,'X',11);
insert into o_test_toastable_offset values (1,3,'Y',12);
delete from o_test_toastable_offset;
CREATE TABLE o_test_bridged_hash_btree_bitmap_scans (
	id integer NOT NULL,
	t text NOT NULL,
	v int4[],
	PRIMARY KEY(id)
) USING orioledb;
SELECT orioledb_tbl_indices('o_test_bridged_hash_btree_bitmap_scans'::regclass, true);
               orioledb_tbl_indices                
---------------------------------------------------
 Index o_test_bridged_hash_btree_bitmap_scans_pkey+
     Index type: primary, unique                  +
     Leaf tuple size: 3, non-leaf tuple size: 1   +
     Non-leaf tuple fields: id                    +
     Leaf tuple fields: id, t, v                  +
 Index toast                                      +
     Index type: secondary                        +
     Leaf tuple size: 4, non-leaf tuple size: 3   +
     Non-leaf tuple fields: id, attnum, chunknum  +
     Leaf tuple fields: id, attnum, chunknum, data+
 
(1 row)

CREATE INDEX o_test_bridged_hash_btree_bitmap_scans_ix1
	ON o_test_bridged_hash_btree_bitmap_scans USING hash (t);
NOTICE:  index bridging is enabled for orioledb table 'o_test_bridged_hash_btree_bitmap_scans'
DETAIL:  index access method 'hash' is supported only via index bridging for OrioleDB table
CREATE INDEX o_test_bridged_hash_btree_bitmap_scans_ix2
	ON o_test_bridged_hash_btree_bitmap_scans USING hash (v);
CREATE INDEX o_test_bridged_hash_btree_bitmap_scans_ix3
	ON o_test_bridged_hash_btree_bitmap_scans USING btree (v) WITH (orioledb_index = off);
WARNING:  using bridged btree index for orioledb
DETAIL:  This feature is intended for testing purposes and is not recommended for normal usage.
SELECT orioledb_tbl_indices('o_test_bridged_hash_btree_bitmap_scans'::regclass, true);
                 orioledb_tbl_indices                 
------------------------------------------------------
 Index o_test_bridged_hash_btree_bitmap_scans_pkey   +
     Index type: primary, unique                     +
     Leaf tuple size: 4, non-leaf tuple size: 1      +
     Non-leaf tuple fields: id                       +
     Leaf tuple fields: index_bridging_ctid, id, t, v+
 Index index_bridge                                  +
     Index type: secondary                           +
     Leaf tuple size: 2, non-leaf tuple size: 1      +
     Non-leaf tuple fields: index_bridging_ctid      +
     Leaf tuple fields: index_bridging_ctid, id      +
 Index toast                                         +
     Index type: secondary                           +
     Leaf tuple size: 4, non-leaf tuple size: 3      +
     Non-leaf tuple fields: id, attnum, chunknum     +
     Leaf tuple fields: id, attnum, chunknum, data   +
 
(1 row)

INSERT INTO o_test_bridged_hash_btree_bitmap_scans VALUES (1, 'D', ARRAY[47,16]);
INSERT INTO o_test_bridged_hash_btree_bitmap_scans VALUES (2, 'A', ARRAY[48,17]);
INSERT INTO o_test_bridged_hash_btree_bitmap_scans VALUES (3, 'C', ARRAY[49,18]);
INSERT INTO o_test_bridged_hash_btree_bitmap_scans VALUES (4, 'F', ARRAY[50,19]);
INSERT INTO o_test_bridged_hash_btree_bitmap_scans VALUES (5, 'B', ARRAY[51,20]);
SELECT orioledb_tbl_structure('o_test_bridged_hash_btree_bitmap_scans'::regclass, 'nue');
                       orioledb_tbl_structure                        
---------------------------------------------------------------------
 Index o_test_bridged_hash_btree_bitmap_scans_pkey contents         +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: offset = 272, tuple = ('(0,1)', '1', 'D', '{47,16}')   +
     Item 1: offset = 344, tuple = ('(0,2)', '2', 'A', '{48,17}')   +
     Item 2: offset = 416, tuple = ('(0,3)', '3', 'C', '{49,18}')   +
     Item 3: offset = 488, tuple = ('(0,4)', '4', 'F', '{50,19}')   +
     Item 4: offset = 560, tuple = ('(0,5)', '5', 'B', '{51,20}')   +
                                                                    +
 Index index_bridge contents                                        +
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty +
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: offset = 272, tuple = ('(0,1)', '1')                   +
     Item 1: offset = 304, tuple = ('(0,2)', '2')                   +
     Item 2: offset = 336, tuple = ('(0,3)', '3')                   +
     Item 3: offset = 368, tuple = ('(0,4)', '4')                   +
     Item 4: offset = 400, tuple = ('(0,5)', '5')                   +
                                                                    +
 Index toast: not loaded                                            +
 
(1 row)

SELECT * FROM hash_index_content('o_test_bridged_hash_btree_bitmap_scans_ix1');
 ctid  
-------
 (0,1)
 (0,2)
 (0,3)
 (0,4)
 (0,5)
(5 rows)

SELECT * FROM hash_index_content('o_test_bridged_hash_btree_bitmap_scans_ix2');
 ctid  
-------
 (0,1)
 (0,2)
 (0,3)
 (0,4)
 (0,5)
(5 rows)

SELECT * FROM btree_index_content('o_test_bridged_hash_btree_bitmap_scans_ix3');
 ctid  | htid  | tids 
-------+-------+------
 (0,1) | (0,1) | 
 (0,2) | (0,2) | 
 (0,3) | (0,3) | 
 (0,4) | (0,4) | 
 (0,5) | (0,5) | 
(5 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_bridged_hash_btree_bitmap_scans
		WHERE v = ARRAY[48, 17] OR v = ARRAY[49, 18];
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Custom Scan (o_scan) on o_test_bridged_hash_btree_bitmap_scans
   Bitmap heap scan
   Recheck Cond: ((v = '{48,17}'::integer[]) OR (v = '{49,18}'::integer[]))
   ->  BitmapOr
         ->  Bitmap Index Scan on o_test_bridged_hash_btree_bitmap_scans_ix2
               Index Cond: (v = '{48,17}'::integer[])
         ->  Bitmap Index Scan on o_test_bridged_hash_btree_bitmap_scans_ix2
               Index Cond: (v = '{49,18}'::integer[])
(8 rows)

SELECT * FROM o_test_bridged_hash_btree_bitmap_scans
	WHERE v = ARRAY[48, 17] OR v = ARRAY[49, 18];
 id | t |    v    
----+---+---------
  2 | A | {48,17}
  3 | C | {49,18}
(2 rows)

EXPLAIN (COSTS OFF)
	SELECT * FROM o_test_bridged_hash_btree_bitmap_scans WHERE t = 'C';
                              QUERY PLAN                               
-----------------------------------------------------------------------
 Custom Scan (o_scan) on o_test_bridged_hash_btree_bitmap_scans
   Bitmap heap scan
   Recheck Cond: (t = 'C'::text)
   ->  Bitmap Index Scan on o_test_bridged_hash_btree_bitmap_scans_ix1
         Index Cond: (t = 'C'::text)
(5 rows)

SELECT * FROM o_test_bridged_hash_btree_bitmap_scans WHERE t = 'C';
 id | t |    v    
----+---+---------
  3 | C | {49,18}
(1 row)

COMMIT;
CREATE TABLE o_test_bridged_index_only_scan (
       id integer NOT NULL,
	   id2 integer,
       t text NOT NULL,
       PRIMARY KEY(id)
) USING orioledb;
SELECT orioledb_tbl_indices('o_test_bridged_index_only_scan'::regclass, true);
               orioledb_tbl_indices                
---------------------------------------------------
 Index o_test_bridged_index_only_scan_pkey        +
     Index type: primary, unique                  +
     Leaf tuple size: 3, non-leaf tuple size: 1   +
     Non-leaf tuple fields: id                    +
     Leaf tuple fields: id, id2, t                +
 Index toast                                      +
     Index type: secondary                        +
     Leaf tuple size: 4, non-leaf tuple size: 3   +
     Non-leaf tuple fields: id, attnum, chunknum  +
     Leaf tuple fields: id, attnum, chunknum, data+
 
(1 row)

CREATE INDEX o_test_bridged_index_only_scan_ix1 ON o_test_bridged_index_only_scan USING btree (t) WITH (orioledb_index = off);
WARNING:  using bridged btree index for orioledb
DETAIL:  This feature is intended for testing purposes and is not recommended for normal usage.
NOTICE:  index bridging is enabled for orioledb table 'o_test_bridged_index_only_scan'
DETAIL:  index access method 'btree' is requested with index bridging for OrioleDB table
CREATE INDEX o_test_bridged_index_only_scan_ix2 ON o_test_bridged_index_only_scan USING btree (id2) WITH (orioledb_index = off);
WARNING:  using bridged btree index for orioledb
DETAIL:  This feature is intended for testing purposes and is not recommended for normal usage.
SELECT orioledb_tbl_indices('o_test_bridged_index_only_scan'::regclass, true);
                  orioledb_tbl_indices                  
--------------------------------------------------------
 Index o_test_bridged_index_only_scan_pkey             +
     Index type: primary, unique                       +
     Leaf tuple size: 4, non-leaf tuple size: 1        +
     Non-leaf tuple fields: id                         +
     Leaf tuple fields: index_bridging_ctid, id, id2, t+
 Index index_bridge                                    +
     Index type: secondary                             +
     Leaf tuple size: 2, non-leaf tuple size: 1        +
     Non-leaf tuple fields: index_bridging_ctid        +
     Leaf tuple fields: index_bridging_ctid, id        +
 Index toast                                           +
     Index type: secondary                             +
     Leaf tuple size: 4, non-leaf tuple size: 3        +
     Non-leaf tuple fields: id, attnum, chunknum       +
     Leaf tuple fields: id, attnum, chunknum, data     +
 
(1 row)

INSERT INTO o_test_bridged_index_only_scan VALUES (1, 56, 'x');
INSERT INTO o_test_bridged_index_only_scan VALUES (2, 27, repeat('x', 2600));
CREATE INDEX o_test_bridged_index_only_scan_ix1 ON o_test_bridged_index_only_scan USING btree (t) WITH (orioledb_index = off);
ERROR:  relation "o_test_bridged_index_only_scan_ix1" already exists
SELECT orioledb_tbl_structure('o_test_bridged_index_only_scan'::regclass, 'nue');
orioledb_tbl_structure

 Index o_test_bridged_index_only_scan_pkey contents
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes
 state = free, datoid equal, relnode equal, ix_type = primary, dirty
     Leftmost, Rightmost
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey
     Item 0: offset = 264, tuple = ('(0,1)', '1', '56', 'x
   Chunk 1: offset = 1, location = 312, hikey location
     Item 1: offset = 320, tuple = ('(0,2)', '2', '27', 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')+

 Index index_bridge contents
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty
     Leftmost, Rightmost
   Chunk 0: offset = 0, location = 256, hikey location
     Item 0: offset = 264, tuple
     Item 1: offset = 296, tuple

 Index toast: not loaded                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           +
 
(1 row)

SELECT * FROM btree_index_content('o_test_bridged_index_only_scan_ix1');
 ctid  | htid  | tids 
-------+-------+------
 (0,1) | (0,1) | 
 (0,2) | (0,2) | 
(2 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF) SELECT * FROM o_test_bridged_index_only_scan ORDER BY t;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Index Scan using o_test_bridged_index_only_scan_ix1 on o_test_bridged_index_only_scan
(1 row)

SELECT * FROM o_test_bridged_index_only_scan ORDER BY t;
 id | id2 |t

  1 |  56 | x
  2 |  27 | xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
(2 rows)

SET LOCAL enable_bitmapscan = off;
EXPLAIN (COSTS OFF)
	SELECT t FROM o_test_bridged_index_only_scan WHERE t = 'x';
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Index Only Scan using o_test_bridged_index_only_scan_ix1 on o_test_bridged_index_only_scan
   Index Cond: (t = 'x'::text)
(2 rows)

SELECT t FROM o_test_bridged_index_only_scan WHERE t = 'x';
 t 
---
 x
(1 row)

COMMIT;
CREATE FUNCTION generate_string(seed integer, length integer) RETURNS text
	AS $$
		SELECT substr(string_agg(
						substr(encode(sha256(seed::text::bytea || '_' || i::text::bytea), 'hex'), 1, 21),
				''), 1, length)
		FROM generate_series(1, (length + 20) / 21) i; $$
LANGUAGE SQL;
CREATE TABLE o_test_toast_with_bridged (
	id integer NOT NULL,
	t text NOT NULL,
	id2 integer
) USING orioledb;
SELECT orioledb_tbl_indices('o_test_toast_with_bridged'::regclass, true);
                orioledb_tbl_indices                 
-----------------------------------------------------
 Index ctid_primary                                 +
     Index type: primary, unique, ctid              +
     Leaf tuple size: 4, non-leaf tuple size: 1     +
     Non-leaf tuple fields: ctid                    +
     Leaf tuple fields: ctid, id, t, id2            +
 Index toast                                        +
     Index type: secondary                          +
     Leaf tuple size: 4, non-leaf tuple size: 3     +
     Non-leaf tuple fields: ctid, attnum, chunknum  +
     Leaf tuple fields: ctid, attnum, chunknum, data+
 
(1 row)

CREATE INDEX o_test_toast_with_bridged_ix1 ON o_test_toast_with_bridged USING btree (id) WITH (orioledb_index = off);
WARNING:  using bridged btree index for orioledb
DETAIL:  This feature is intended for testing purposes and is not recommended for normal usage.
NOTICE:  index bridging is enabled for orioledb table 'o_test_toast_with_bridged'
DETAIL:  index access method 'btree' is requested with index bridging for OrioleDB table
SELECT orioledb_tbl_indices('o_test_toast_with_bridged'::regclass, true);
                     orioledb_tbl_indices                     
--------------------------------------------------------------
 Index ctid_primary                                          +
     Index type: primary, unique, ctid                       +
     Leaf tuple size: 5, non-leaf tuple size: 1              +
     Non-leaf tuple fields: ctid                             +
     Leaf tuple fields: ctid, index_bridging_ctid, id, t, id2+
 Index index_bridge                                          +
     Index type: secondary                                   +
     Leaf tuple size: 2, non-leaf tuple size: 1              +
     Non-leaf tuple fields: index_bridging_ctid              +
     Leaf tuple fields: index_bridging_ctid, ctid            +
 Index toast                                                 +
     Index type: secondary                                   +
     Leaf tuple size: 4, non-leaf tuple size: 3              +
     Non-leaf tuple fields: ctid, attnum, chunknum           +
     Leaf tuple fields: ctid, attnum, chunknum, data         +
 
(1 row)

INSERT INTO o_test_toast_with_bridged VALUES (1, 'x', 10);
INSERT INTO o_test_toast_with_bridged VALUES (2, repeat('x', 2600), 78);
INSERT INTO o_test_toast_with_bridged VALUES (3, generate_string(1, 2690), 66);
INSERT INTO o_test_toast_with_bridged VALUES (4, generate_string(2, 2690), 56);
INSERT INTO o_test_toast_with_bridged VALUES (5, generate_string(3, 2690), 12);
SELECT orioledb_tbl_structure('o_test_toast_with_bridged'::regclass, 'nue');
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           orioledb_tbl_structure

 Index ctid_primary contents
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes
 state = free, datoid equal, relnode equal, ix_type = primary, dirty
     Leftmost, Rightmost
   Chunk 0: offset = 0, location = 256, hikey location = 72, hikey
     Item 0: offset = 264, tuple = ('(0,1)', '(0,1)', '1', 'x', '10')                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       +
   Chunk 1: offset = 1, location = 312, hikey location = 80, hikey
     Item 1: offset = 320, tuple = ('(0,2)', '(0,2)', '2', 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', '78')+
   Chunk 2: offset = 2, location = 2968, hikey location
     Item 2: offset = 2976, tuple = ('(0,3)', '(0,3)', '3', TOASTed
     Item 3: offset = 3032, tuple = ('(0,4)', '(0,4)', '4', TOASTed
     Item 4: offset = 3088, tuple = ('(0,5)', '(0,5)', '5', TOASTed, '12')                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  +

 Index index_bridge contents
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes
 state = free, datoid equal, relnode equal, ix_type = bridge, dirty
     Leftmost, Rightmost
   Chunk 0: offset = 0, location = 256, hikey location
     Item 0: offset = 272, tuple
     Item 1: offset = 304, tuple
     Item 2: offset = 336, tuple
     Item 3: offset = 368, tuple
     Item 4: offset = 400, tuple

 Index toast contents
 Page 0: level = 1, maxKeyLen
 state = free, datoid equal, relnode equal, ix_type = toast, dirty
     Leftmost, Rightmost
   Chunk 0: offset = 0, location = 512, hikey location
     Item 0: offset = 520, downlink
     Item 1: offset = 528, downlink = 2, key = (PK: ('(0,5)'), attnum 4, chunknum
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            +
 Page 1: level = 0, maxKeyLen = 16, nVacatedBytes
 state = free, datoid equal, relnode equal, ix_type = toast, dirty
     Leftmost, Rightlink is invalid
     Hikey: offset = 104, key = (PK: ('(0,5)'), attnum 4, chunknum
   Chunk 0: offset = 0, location = 256, hikey location = 72, hikey = (PK: ('(0,3)'), attnum 4, chunknum
     Item 0: offset = 264, tuple = (PK: ('(0,3)'), attnum 4, chunknum 0, data_length
   Chunk 1: offset = 1, location = 2968, hikey location = 88, hikey = (PK: ('(0,4)'), attnum 4, chunknum
     Item 1: offset = 2976, tuple = (PK: ('(0,3)'), attnum 4, chunknum 1, data_length
     Item 2: offset = 3056, tuple = (PK: ('(0,4)'), attnum 4, chunknum 0, data_length
   Chunk 2: offset = 3, location = 5760, hikey location = 104, hikey = (PK: ('(0,5)'), attnum 4, chunknum 0)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                +
     Item 3: offset = 5768, tuple = (PK: ('(0,4)'), attnum 4, chunknum 1, data_length

 Page 2: level = 0, maxKeyLen = 16, nVacatedBytes
 state = free, datoid equal, relnode equal, ix_type = toast, dirty
     Rightmost
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey = (PK: ('(0,5)'), attnum 4, chunknum 1)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  +
     Item 0: offset = 264, tuple = (PK: ('(0,5)'), attnum 4, chunknum 0, data_length 2657)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  +
   Chunk 1: offset = 1, location = 2968, hikey location
     Item 1: offset = 2976, tuple = (PK: ('(0,5)'), attnum 4, chunknum 1, data_length 37)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   +
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            +
 
(1 row)

SELECT * FROM btree_index_content('o_test_toast_with_bridged_ix1');
 ctid  | htid  | tids 
-------+-------+------
 (0,1) | (0,1) | 
 (0,2) | (0,2) | 
 (0,3) | (0,3) | 
 (0,4) | (0,4) | 
 (0,5) | (0,5) | 
(5 rows)

BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF) SELECT * FROM o_test_toast_with_bridged ORDER BY id;
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Index Scan using o_test_toast_with_bridged_ix1 on o_test_toast_with_bridged
(1 row)

SELECT * FROM o_test_toast_with_bridged ORDER BY id;
 id |t| id2 

  1 | x|  10
  2 | xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                                                                                           |  78
  3 | 551e8b15be547418fbf590c79023f435b2e9e6ceae7dd8da7c62f0a74071d4ea921eeedc8c29ecd667e57d288b89132c2623411305352849a23a56da226d4c9d21ef536a074f046f121cfc381d2397da977137de1e3462d86105158877c4975784175aeec4328db2ae8afb3f0f3bce90661377912e25ef84d0a444560eb25fb147bc381cef72def876c01d64ec146d17b87df386a61a2c9dbf0cb44dee81268195e54ae668b3b178ac059e71473c20cfe0b4c7b1023aea1573dbd6e7984399f1397f00f2715072061179fb3e62006b0dfd58814826761284aa062be32c3fd46c8100d4c9f64004d64beb67b6c6fb3692065f5aee0a956890cc7b1849c69d893b51f43151bdc541a12575c22c894133d5d47a5557de984ab04b0591d756b48403bf27fc48662612a8f22ca22a9861d4503b8b142c1ac496a6296549aa614019592af9620b3b66699af44b7b9deb7f11f96b0619e1568c15f12870cb3ade059e96ea4bb151e1766ebcda420ec04e064dbc48005dd1872b80dab6e7f68e235f190afbe9a47cac5263df029867f7208de89c61611be4c30be9f9d1aaa6ae473cfca9b6fcdf3f1fb7fced7ed0867e17af95cf1c8e047c33031cf492ea43ea4eea83793941dbf123dc937d7f812decd703033cd6ab43ee51dbcaf8ff51cd779ab4de09fd77037458a73b97a40c3eeafe200e0534e910f4b4b93064b566591b9ca9dc9763067bb5c0e35287d563388ebef687f6c34409b31e8161062fb8d14233ba7ba66e11faab72ef3953cc9ce60eaa92f7ba13f7ad64efd0634bf6eca83840b100749b4d9a57a5e475a97092864bc40da3dee9fca5bc1d6ef7c7ed95fe14edaac5203933a9862d0dd1889d01359e8980041d9f081f323e08808606de0d3e7158be1e69e3e638352fa8e796a5e625f30248d948117c6dcd75037475e23fb96dee84346752ea74dcb9de7e99244e2f710f111e2ea824327f4cfebc203a2c2b9355c01d5ec20a0a4c52f9d7de117ff94a1e49fc5216af072c09453ac394d4a8f47dd03906c91dc358bb3320566b242fbc02662d59b36408528033ed00afcb00894f8302d4dc0cb839f76ad1f9cb0d2ba2ed3c87c623839ceee2113c9861862a15c842d351d12be0a41ddcf0e68cd3dc10ccacf8b7dfa11a76fcca96bcc5226f10c96bdaf1cdb88c4ead866290ea2046de4e17ebe43f09a47aef6bf1d444c6f370a4acff9eedbd895a6990d9573c96d220dec156bfdf3da928305509de856d842bd0d3e966c27f87164a1872fa8fe299412ec3d8bc37a2eaaa63bd48d1d2db931140483a09291a98fa3c5ccf4ac2ad4984fb7468a686fa65d77dfb0280ab660fd38c8c734ec1fd475cddaac21d028cade401b7a53aa04ffe813c9f983810a3bf66c9e47981ee07694374f48f7adfe2edd665a1dc04c12cc4180c9fdf45240a4b5b1c28353d1dbae63434b7bf4e816e06473aa159da5ef179ea6f2c0b5ae4488d16e6423092e31b516bb2c042c1407c53da28f81884409c4d1880c2cd9d314232ba34a465934096a821f11e33ac1e692628b6e2ef0cceb8b6064a36ffcbc7d9ae1e18c423292db5066666f9b1fa03e6995d160fbee71584374770a017166a71582d9f372292b797c383cd99b5d336b75a1c5776fe27ec81926b4394214a1a0a529280625bf25c4c7b2e4fbe70dda95cfe9c176ff82a29369c977578f9c29735e64d7457371839171406b4f642066c7cbc9c45f9f8f7055e28d51ebfdfb5a71c689808a426d9f2361bb76b7b871dbce69e2a65b80b761c4e09f18ef82ec60efe1ac70f2f98f8fad8875d07e25f4060f564d17bfc437d405b766a888a05b4a7bf94c5679d76cb73fca979dfd05acc9aa8add0c573fefe39a550aab81d9af360323ee3bf101ce0 |  66
  4 | 420cf95170c6ba2f9564e48fccc7ee00b729591402c6e542833f2d3fb47e24327a0c5dc9f4e06caf214ccbe2701f7c7762728279bdb9fe95a939d34ec792105f46d0ae6fe0d74a3d5db450aef5c767817403a38e0c6a239925d383f68d5afd7b2caedc56690126055d0ae4ce45685c7fde2a2ea748398935b647e4b420a601e501791dabe8377fe5e573c1db3e4fa72b86c7f7c9dfd7e33e42cc40b5ccd4ef5d5fdcb9604af9b71eca08bce0955f4a91b12934d166df31860e6ef21babf8637938aa8cb657aa834dd606038da2c225eea2e29b02eaa3207598f05fbc36b27697b2bec56910c1241f706d3af9908d4559047fdf376d6ef865f28cf8c961b6553fdcca1f38234cc799e34c1ab769dde795875af989b159af0461c5821ea2ea6a26d658564ed5f8b2843a2c4d9ab2dada25bf5670a2c2ecd859492eec355ef08e38dd6964ef67cd4bfd95b18659f950602b7d73fcf72d303eeba5aa85c5a155f573fcfafaf80f086c82bbd216ee544c0524ba81e5ff2269e0e687533d6b5eaa084ed7bb24ed583fd0d2ab4ff50444bbae72e532f76da2cbf034873029035a1493794021c8c8d9266e05cf089f39fa6eacb418dee58ceac058dbebf9a9e5c994832d15d836123c1bf986a9bc68ee8dda32fc11fd9d5cbebd81e16f421bd902ff16da16a93d914da0f7f87add622b3162f06e1c46379abc1bebce05fadfa7904a8f94d25ce8500cdaa65e735928181f93bebab1b16ef56e7ae79591797e08a9a358a1ba61a3e7cd2319fbb3088e9e3ea77f905dfb2584a71c056db79a8b26efeaeca9d6828298c4f3d05cbf5707190734e7f747f3036ddc7daec389765dba95e5dfc268cf34f9da750485784d15a3182c0b2c44a5a2c0dc3f870cc01f4687c2b49227a6edcb37e993d0099131884190f5cbb7b86e4475a1c563a19bfaf289e14d5980b54dacfeaba514a8bf4e200a98ce851032c3b36bddb5259a1b0eedc45585be7cc6c59cba55ce84e9f257f132018ba1dda70ea5381abb8d16cbb8d8156565991d7c68992ec7cf40a368d16960b1741ae4cfee3235768d854e29a95c6fe580d533a77967431cd16ee879462f7ea8e4203b6f461c3947a4edf0c3bb2044a11ab772a4b199a33c364b95dbc2dd3e0e1eeadeea97b832ecfaa4bd9a7eded13a2acef1b4ee35dd99c9ba7602b4abb95d83f83357a18d98cde1a72836e9cd1ff3c5135e497ef9a7bc78a59ce75ea6208489f3a320b285ba03d938b1964f475fa417ceaf7ee92a58c63e2b545f4bc3366dc4ff8cd81189c86d05a3badaa648f5ca51b4b50589fdb69906da1421cc8af3b09364fb4de074e66cfb4f40122f32400fdb016313a1dc9e5663f20f12debb43091a15847a30815e082e75a9eb72d3c5f135a69e844dd02973eae8eddf66fc942dcb6bc9c953a31b5a0e32992a8b615e8934f47fdea6d4cca3f22c5c8ee5c3135bdefe8bc8df01cbf1fd41ab19ac9ed8d81623c7aa07276ac06d4a320a55cfb2826963d97e1b30063e91980d6c9709c1b3943073f10dc23d7f89d23d20f5a4eac4b76a3a4735e112bfbdee252e364e451395484905369660bc69bac1997b5f80e6e5f667a26d75b7fe5ff8307da45a04377fcda666c761a619ced3cdb3e86391b1e80fc40557894f817938ee4c8a91e5737d482b94720007b67a33a5382fc36d45f8020ab72675b685e723c82abdf3f27ea6a2ddcbca295729f45cef583f23b9cf516f8f8f75dae283070d6e87512ee29950480cd427426627135b4e9e20111ac1d720c17a267a36d97ca1d20276f3343c9f881aab83fd6200fb2b0897e7b374fd308687e5304bbf0bdb87d5de1c2bb0e0586ffce78a568462e7e519a5129de95cd6a2966a259d78bb9d181d1ae34241cd271b2d74 |  56
  5 | a9a8d7170b9ee2c655e43ad9a5c5fb1bc135d8cb879d41a1d48dbe9766befe3015ad051bab9daab2d0b92eddabf93b63764cd5899f9f5e9eef1389d27209dd66a207f819b23ff90dc3d15cbad3a3e8994e01761c26ec8abdd1d8449d2c90685ddd434ab20cded902a94dc877db0c695492c97571e19ffd7041c364304ee9c87032564c0aed3bee4d253460c6253e1203ca5107aa4ddd98502fc311688150ca084820e879772fc8a3b32e6e521b3b3d0878f9a2ed2d3f459c37638ff72b4b46196e4cc7be2a7eb9eff8f0d1ac8d3f452e34497bdb2cff4cb1f42efed87c2e1aa1fdf8e61ac10b407103bf4ab1c58a9e15f2445759ef4b0af89796643837e8e9f48205cfc1aec8529ace6d7f1ccefd8802dd24139704e6fe6784c37682817f86d4a2c187abf0c70afd57dcc6813456c9fd8edb177a36e36b83b2852334ce5c04a55da155c6481d454da732f99a6692a78110825fdda799a10e2560bc3fa7e4be22767bbf936999afa8395e10e118b32cb66d045e12944045ad394c45268e16ec39b80a21b7db0c66c8ae78786eaeedc09bd77053d9d94e914f146862e61d9f3f45b5804ec5c94b1728ff80152601c82070c9e8edb48be65e47ca8af63cfb68a687dba57dbdcc7421329c5e7700e6d36f6ebe1a6f076e3189d3bc7198e96714938904e19f44fb0622f9b7b5a98d264166aa06b1b45422893d84a1b49c2c12133634ba302b03dc0665bd326639c7f7d835e2c2917fbf9353e868d6e3a1cf3edb9b9908b52d1d506b5259cfa44baf338a7a8882fc05d67c370fbf3ed55b8d574c0978dbc31bb940f0480c1d1de7efef9dd092a4c73686bb4d2c5840c85aa43daa4121c67b18959d0a2d6a382ffc43582730f1db59e42a07aeac7ba801ef26d4e46f4412045ba724c1b008963db6423e1687ab092312bc116d7d6c872a0ac8f9fd0ee8d9152d50af0f890c74e56d45e4f6360e54feed900b76252bdd43e8e139f954109f1f952333d9627e26adbe5aa7a92f0acf687490d042c0c25b59896fdd728de7cdcf679857bf934ccde276f9a8deec755aba153c3573c6dcfdd6feecfc825791459c5bb65a204504930cd2409e6d66037fad6269d7384ed4db305b0a6241664203ddecdcb09e13e1564de9e41f60723f249bbbe1f24d213cb69a7ab4ea677bdd14693db986d43b82a78c1edf2a09f224c74c4e874125ab0999a109565da6716f9622750a13bc5685db4dcd4a902c351491c279b3af0e538714e3cc373dac7632880eaa7f7b97a7622f991469839bffe7047f98b0db5f5de336d3dfedfcfbcb3a804eb8df0e5d8bee2c14d409ba3d0dfea221006590d0b494e204393e44cb650c2aee1aed0edeafdb2a4a16f136e1ee239891d962296a2c1049ffc64ff5fd3fddfcf04c9b346563b4c1dd2c2594cedff54ba2173e9a500c4e8c5830b8d1aa56bc0cb6b264a5889150bd7d8dcad23f8f66401019440236e812c68c0adc2b9347e4df717bbc7bd3a39ec5e53cef4ccfae1b4d8034a6d48d823a9d8c6ea4e5126e10d3f9909a0301ddf4905d3f8f65bccca810dcf2452cf63b80fbe6878ba2978bcadf5f6ce1223c177bd9df584f2115a933fae6d345d7e550477daeb318845c2cd80d671c117b4cc87e29ebaf918ef875243587c98605620575845cfc0bdc9334ed930ab1e3879771bfdb81f1d9232ddaa78216175296e4a5af4fd67093d5e25aaf42a210c69d34716d5ebe6de1ff6bdcbd6248913b095d862a960c82d34153dd9a885f975291c3336069a1da64ba8e7fe4d3c4fa8f402ad52c0cc4897056023107f0e02c8935d00adebee183b9b6482a2c0ab9651b3ef83754ff166fe89d358c4a10693ba3fe8009117b31d94c8c113fcc34a5a57252120708a1ff364572f6a8ff08 |  12
(5 rows)

COMMIT;
UPDATE o_test_toast_with_bridged SET t = generate_string(5, 2690) WHERE id = 4;
BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF) SELECT * FROM o_test_toast_with_bridged ORDER BY id;
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Index Scan using o_test_toast_with_bridged_ix1 on o_test_toast_with_bridged
(1 row)

SELECT * FROM o_test_toast_with_bridged ORDER BY id;
 id |t| id2 

  1 | x|  10
  2 | xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                                                                                           |  78
  3 | 551e8b15be547418fbf590c79023f435b2e9e6ceae7dd8da7c62f0a74071d4ea921eeedc8c29ecd667e57d288b89132c2623411305352849a23a56da226d4c9d21ef536a074f046f121cfc381d2397da977137de1e3462d86105158877c4975784175aeec4328db2ae8afb3f0f3bce90661377912e25ef84d0a444560eb25fb147bc381cef72def876c01d64ec146d17b87df386a61a2c9dbf0cb44dee81268195e54ae668b3b178ac059e71473c20cfe0b4c7b1023aea1573dbd6e7984399f1397f00f2715072061179fb3e62006b0dfd58814826761284aa062be32c3fd46c8100d4c9f64004d64beb67b6c6fb3692065f5aee0a956890cc7b1849c69d893b51f43151bdc541a12575c22c894133d5d47a5557de984ab04b0591d756b48403bf27fc48662612a8f22ca22a9861d4503b8b142c1ac496a6296549aa614019592af9620b3b66699af44b7b9deb7f11f96b0619e1568c15f12870cb3ade059e96ea4bb151e1766ebcda420ec04e064dbc48005dd1872b80dab6e7f68e235f190afbe9a47cac5263df029867f7208de89c61611be4c30be9f9d1aaa6ae473cfca9b6fcdf3f1fb7fced7ed0867e17af95cf1c8e047c33031cf492ea43ea4eea83793941dbf123dc937d7f812decd703033cd6ab43ee51dbcaf8ff51cd779ab4de09fd77037458a73b97a40c3eeafe200e0534e910f4b4b93064b566591b9ca9dc9763067bb5c0e35287d563388ebef687f6c34409b31e8161062fb8d14233ba7ba66e11faab72ef3953cc9ce60eaa92f7ba13f7ad64efd0634bf6eca83840b100749b4d9a57a5e475a97092864bc40da3dee9fca5bc1d6ef7c7ed95fe14edaac5203933a9862d0dd1889d01359e8980041d9f081f323e08808606de0d3e7158be1e69e3e638352fa8e796a5e625f30248d948117c6dcd75037475e23fb96dee84346752ea74dcb9de7e99244e2f710f111e2ea824327f4cfebc203a2c2b9355c01d5ec20a0a4c52f9d7de117ff94a1e49fc5216af072c09453ac394d4a8f47dd03906c91dc358bb3320566b242fbc02662d59b36408528033ed00afcb00894f8302d4dc0cb839f76ad1f9cb0d2ba2ed3c87c623839ceee2113c9861862a15c842d351d12be0a41ddcf0e68cd3dc10ccacf8b7dfa11a76fcca96bcc5226f10c96bdaf1cdb88c4ead866290ea2046de4e17ebe43f09a47aef6bf1d444c6f370a4acff9eedbd895a6990d9573c96d220dec156bfdf3da928305509de856d842bd0d3e966c27f87164a1872fa8fe299412ec3d8bc37a2eaaa63bd48d1d2db931140483a09291a98fa3c5ccf4ac2ad4984fb7468a686fa65d77dfb0280ab660fd38c8c734ec1fd475cddaac21d028cade401b7a53aa04ffe813c9f983810a3bf66c9e47981ee07694374f48f7adfe2edd665a1dc04c12cc4180c9fdf45240a4b5b1c28353d1dbae63434b7bf4e816e06473aa159da5ef179ea6f2c0b5ae4488d16e6423092e31b516bb2c042c1407c53da28f81884409c4d1880c2cd9d314232ba34a465934096a821f11e33ac1e692628b6e2ef0cceb8b6064a36ffcbc7d9ae1e18c423292db5066666f9b1fa03e6995d160fbee71584374770a017166a71582d9f372292b797c383cd99b5d336b75a1c5776fe27ec81926b4394214a1a0a529280625bf25c4c7b2e4fbe70dda95cfe9c176ff82a29369c977578f9c29735e64d7457371839171406b4f642066c7cbc9c45f9f8f7055e28d51ebfdfb5a71c689808a426d9f2361bb76b7b871dbce69e2a65b80b761c4e09f18ef82ec60efe1ac70f2f98f8fad8875d07e25f4060f564d17bfc437d405b766a888a05b4a7bf94c5679d76cb73fca979dfd05acc9aa8add0c573fefe39a550aab81d9af360323ee3bf101ce0 |  66
  4 | e2af2ac479786b8ca94a7185f2a92edbb31672ea96b21c03eeb4a4fb569c90f279a77410296881ddd54da7bf5ef6960d00c76ccaa803d01846d73bb7d889187a07ce24690400c26de1a5dd16cf491b05e0bce7b5cfbea359d0d79fb8d4c8dce0ec8fdb80448974cbf3a1756c3944d0479c3358e15971561ff0f548b5a45e109bb59f0927e2b3c59b18515fc95e713ad60b677ef9c8e698b458df3764f91f946cab980b40d0de84c93f9436046a336525a76d8ed656277d0355d9891438a4d316bceefa8bb09baadc5becacf1a1703eab465a0dbfc3c2516c5e91faf904a6a228f6e6a2424c357d235a3964318f17ae94981cf9c2d35ed957190305d76d242bf34bb0d256be98a3f3d770594dcb1e8f003b08ddef685ca3958b7865cfdb33d3a09a8dac5ad603ae15925049f21236f9a223cd9ad67b9cbcaa7eee47fe09011dc30d7d312ea4967ad76d5d0e8513a3751e1652d0949fa852c0ef62bcfeadcd9d8dfac4c9f26740177b77f17b02a2dbd42f139b7922e32c019c4a0f0cff9c6a54c24c57cfebc5231433c31828bff5cd6b1f55ffca7de7a212fb701cff40f46dc5f82a67d579d6ee74ccbaf9038b1d8301b79770f37b0897b8747d82e80438b888eea4ff7081731b943a5f6d89c62b5d74d89c54c9070e021d582ee1a73cbd2c1d06acfee51d21f508978e0908fe43a590ed48dfc0bcf15b56c4f6310d6926f84121328c99e26f62e9dbadcb25f3b98a71b4cb73c569b68f1f2e6d5ba0522dde05d2a7e879a1ea5164222b05654be981633fb4ba67dce7975f20c0b5ee06fec6e503c12361c1a6eadb5a55520c4ddb61580e70369654ac78a0cc5c1d7d18212d3383e92041217424be9bfd240f09b9e39d91a26af74f441c5cc7242c6ca80f79099b40e594343297c27d3258ad93c88d680e407db9df682b64efc4ef11ad75f45509752a69a1388759e317a651be0fc4ca39ecad8d3060e3d11246beb942586a51befce58ad3cb161d5ee7b555ed57fd9ea8b289eff11bccb2a8fd0639944cd762ffa1cc5fb6e394f3b7f5b6ec8bc28a02f11c79dce2b5a0fe651df8594219f2b8352118a9492e4374c04c836981b39c3f457b9242f2d5d3802e8e9f9ac5921ffe8af8072385133014af34ffd10ee623cdd0f9ebf895bdba3cfb90931cc5e0c870fe65efeea6f2bcf77f9be5da02097696e840a4833e0b94c7a3fc6572f03c24c6d603f071e7f31cdb6c72d9c722d05998f1947ad1d0ce970d89dd8955de97def5b36b86b0f1f8380ae998a6051549d3ce46687b943ac1f248521d701af26895ae681e7db37cf32385c109d7804b2d7d7f1b07151d8954780af6cb7114c73fd7025d3563a3e43267b79a62a0291d567c92508afc748d586e2d5e170cca557ebad337cd06fb783895f24182b9b4c76389a4cd0143b2118be0212aa607d3330539078d1affbecce62d7a813b70cf18cddf256d6221565a6c885ac6d8d02aabeb853708118d0ab55a74908e10f732b53b98410a096acfee7c5a7d751e9efe561418bc5c0e362333b1de34f032a524aaaf696abdb4c28220414e7c7fbc8fa44a2c62d2f8e78faee4061466847fa348cbb414e734e812ee487f0ab4e9a734999cf2006bb8b4f240067d11093b1c9f9898c3a8501b8ef432a655e9a44848ee4a647d8f6b97f8d7e6b787bd645b65b8385715a9d723d2da33d4ee6c77c25f4fecdd72f6e376add1dc0d531c010915aef51ac842a1616bacfe9fd6c9c401a55d71f85a685f5a52dc86055e8b16b674e96c1576019c3a8c1bd71d3a1e1c70dab612b14d5fd5b1277cc4e4f7ec7eb1fafa1a0b28d1a6c9727886503047f7301c87946fe13a0392e6112f0d2b448f2e15568dfcffc544bd33abd997789164d363f64ba2b0eadb8496 |  56
  5 | a9a8d7170b9ee2c655e43ad9a5c5fb1bc135d8cb879d41a1d48dbe9766befe3015ad051bab9daab2d0b92eddabf93b63764cd5899f9f5e9eef1389d27209dd66a207f819b23ff90dc3d15cbad3a3e8994e01761c26ec8abdd1d8449d2c90685ddd434ab20cded902a94dc877db0c695492c97571e19ffd7041c364304ee9c87032564c0aed3bee4d253460c6253e1203ca5107aa4ddd98502fc311688150ca084820e879772fc8a3b32e6e521b3b3d0878f9a2ed2d3f459c37638ff72b4b46196e4cc7be2a7eb9eff8f0d1ac8d3f452e34497bdb2cff4cb1f42efed87c2e1aa1fdf8e61ac10b407103bf4ab1c58a9e15f2445759ef4b0af89796643837e8e9f48205cfc1aec8529ace6d7f1ccefd8802dd24139704e6fe6784c37682817f86d4a2c187abf0c70afd57dcc6813456c9fd8edb177a36e36b83b2852334ce5c04a55da155c6481d454da732f99a6692a78110825fdda799a10e2560bc3fa7e4be22767bbf936999afa8395e10e118b32cb66d045e12944045ad394c45268e16ec39b80a21b7db0c66c8ae78786eaeedc09bd77053d9d94e914f146862e61d9f3f45b5804ec5c94b1728ff80152601c82070c9e8edb48be65e47ca8af63cfb68a687dba57dbdcc7421329c5e7700e6d36f6ebe1a6f076e3189d3bc7198e96714938904e19f44fb0622f9b7b5a98d264166aa06b1b45422893d84a1b49c2c12133634ba302b03dc0665bd326639c7f7d835e2c2917fbf9353e868d6e3a1cf3edb9b9908b52d1d506b5259cfa44baf338a7a8882fc05d67c370fbf3ed55b8d574c0978dbc31bb940f0480c1d1de7efef9dd092a4c73686bb4d2c5840c85aa43daa4121c67b18959d0a2d6a382ffc43582730f1db59e42a07aeac7ba801ef26d4e46f4412045ba724c1b008963db6423e1687ab092312bc116d7d6c872a0ac8f9fd0ee8d9152d50af0f890c74e56d45e4f6360e54feed900b76252bdd43e8e139f954109f1f952333d9627e26adbe5aa7a92f0acf687490d042c0c25b59896fdd728de7cdcf679857bf934ccde276f9a8deec755aba153c3573c6dcfdd6feecfc825791459c5bb65a204504930cd2409e6d66037fad6269d7384ed4db305b0a6241664203ddecdcb09e13e1564de9e41f60723f249bbbe1f24d213cb69a7ab4ea677bdd14693db986d43b82a78c1edf2a09f224c74c4e874125ab0999a109565da6716f9622750a13bc5685db4dcd4a902c351491c279b3af0e538714e3cc373dac7632880eaa7f7b97a7622f991469839bffe7047f98b0db5f5de336d3dfedfcfbcb3a804eb8df0e5d8bee2c14d409ba3d0dfea221006590d0b494e204393e44cb650c2aee1aed0edeafdb2a4a16f136e1ee239891d962296a2c1049ffc64ff5fd3fddfcf04c9b346563b4c1dd2c2594cedff54ba2173e9a500c4e8c5830b8d1aa56bc0cb6b264a5889150bd7d8dcad23f8f66401019440236e812c68c0adc2b9347e4df717bbc7bd3a39ec5e53cef4ccfae1b4d8034a6d48d823a9d8c6ea4e5126e10d3f9909a0301ddf4905d3f8f65bccca810dcf2452cf63b80fbe6878ba2978bcadf5f6ce1223c177bd9df584f2115a933fae6d345d7e550477daeb318845c2cd80d671c117b4cc87e29ebaf918ef875243587c98605620575845cfc0bdc9334ed930ab1e3879771bfdb81f1d9232ddaa78216175296e4a5af4fd67093d5e25aaf42a210c69d34716d5ebe6de1ff6bdcbd6248913b095d862a960c82d34153dd9a885f975291c3336069a1da64ba8e7fe4d3c4fa8f402ad52c0cc4897056023107f0e02c8935d00adebee183b9b6482a2c0ab9651b3ef83754ff166fe89d358c4a10693ba3fe8009117b31d94c8c113fcc34a5a57252120708a1ff364572f6a8ff08 |  12
(5 rows)

COMMIT;
DELETE FROM o_test_toast_with_bridged WHERE id BETWEEN 2 AND 4;
BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF) SELECT * FROM o_test_toast_with_bridged ORDER BY id;
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Index Scan using o_test_toast_with_bridged_ix1 on o_test_toast_with_bridged
(1 row)

SELECT * FROM o_test_toast_with_bridged ORDER BY id;
 id |t| id2 

  1 | x                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |  10
  5 | a9a8d7170b9ee2c655e43ad9a5c5fb1bc135d8cb879d41a1d48dbe9766befe3015ad051bab9daab2d0b92eddabf93b63764cd5899f9f5e9eef1389d27209dd66a207f819b23ff90dc3d15cbad3a3e8994e01761c26ec8abdd1d8449d2c90685ddd434ab20cded902a94dc877db0c695492c97571e19ffd7041c364304ee9c87032564c0aed3bee4d253460c6253e1203ca5107aa4ddd98502fc311688150ca084820e879772fc8a3b32e6e521b3b3d0878f9a2ed2d3f459c37638ff72b4b46196e4cc7be2a7eb9eff8f0d1ac8d3f452e34497bdb2cff4cb1f42efed87c2e1aa1fdf8e61ac10b407103bf4ab1c58a9e15f2445759ef4b0af89796643837e8e9f48205cfc1aec8529ace6d7f1ccefd8802dd24139704e6fe6784c37682817f86d4a2c187abf0c70afd57dcc6813456c9fd8edb177a36e36b83b2852334ce5c04a55da155c6481d454da732f99a6692a78110825fdda799a10e2560bc3fa7e4be22767bbf936999afa8395e10e118b32cb66d045e12944045ad394c45268e16ec39b80a21b7db0c66c8ae78786eaeedc09bd77053d9d94e914f146862e61d9f3f45b5804ec5c94b1728ff80152601c82070c9e8edb48be65e47ca8af63cfb68a687dba57dbdcc7421329c5e7700e6d36f6ebe1a6f076e3189d3bc7198e96714938904e19f44fb0622f9b7b5a98d264166aa06b1b45422893d84a1b49c2c12133634ba302b03dc0665bd326639c7f7d835e2c2917fbf9353e868d6e3a1cf3edb9b9908b52d1d506b5259cfa44baf338a7a8882fc05d67c370fbf3ed55b8d574c0978dbc31bb940f0480c1d1de7efef9dd092a4c73686bb4d2c5840c85aa43daa4121c67b18959d0a2d6a382ffc43582730f1db59e42a07aeac7ba801ef26d4e46f4412045ba724c1b008963db6423e1687ab092312bc116d7d6c872a0ac8f9fd0ee8d9152d50af0f890c74e56d45e4f6360e54feed900b76252bdd43e8e139f954109f1f952333d9627e26adbe5aa7a92f0acf687490d042c0c25b59896fdd728de7cdcf679857bf934ccde276f9a8deec755aba153c3573c6dcfdd6feecfc825791459c5bb65a204504930cd2409e6d66037fad6269d7384ed4db305b0a6241664203ddecdcb09e13e1564de9e41f60723f249bbbe1f24d213cb69a7ab4ea677bdd14693db986d43b82a78c1edf2a09f224c74c4e874125ab0999a109565da6716f9622750a13bc5685db4dcd4a902c351491c279b3af0e538714e3cc373dac7632880eaa7f7b97a7622f991469839bffe7047f98b0db5f5de336d3dfedfcfbcb3a804eb8df0e5d8bee2c14d409ba3d0dfea221006590d0b494e204393e44cb650c2aee1aed0edeafdb2a4a16f136e1ee239891d962296a2c1049ffc64ff5fd3fddfcf04c9b346563b4c1dd2c2594cedff54ba2173e9a500c4e8c5830b8d1aa56bc0cb6b264a5889150bd7d8dcad23f8f66401019440236e812c68c0adc2b9347e4df717bbc7bd3a39ec5e53cef4ccfae1b4d8034a6d48d823a9d8c6ea4e5126e10d3f9909a0301ddf4905d3f8f65bccca810dcf2452cf63b80fbe6878ba2978bcadf5f6ce1223c177bd9df584f2115a933fae6d345d7e550477daeb318845c2cd80d671c117b4cc87e29ebaf918ef875243587c98605620575845cfc0bdc9334ed930ab1e3879771bfdb81f1d9232ddaa78216175296e4a5af4fd67093d5e25aaf42a210c69d34716d5ebe6de1ff6bdcbd6248913b095d862a960c82d34153dd9a885f975291c3336069a1da64ba8e7fe4d3c4fa8f402ad52c0cc4897056023107f0e02c8935d00adebee183b9b6482a2c0ab9651b3ef83754ff166fe89d358c4a10693ba3fe8009117b31d94c8c113fcc34a5a57252120708a1ff364572f6a8ff08 |  12
(2 rows)

COMMIT;
CREATE TABLE tbl_with_pkey_bridged_toast(i1 int, i2 int, t text, PRIMARY KEY(i1)) USING orioledb;
INSERT INTO tbl_with_pkey_bridged_toast
	(SELECT id, id, generate_string(id, 3000) FROM generate_series(1, 20) id);
CREATE INDEX tbl_i2_brin_idx ON tbl_with_pkey_bridged_toast USING brin (i2);
NOTICE:  index bridging is enabled for orioledb table 'tbl_with_pkey_bridged_toast'
DETAIL:  index access method 'brin' is supported only via index bridging for OrioleDB table
BEGIN;
SET LOCAL enable_seqscan = off;
EXPLAIN (COSTS OFF) SELECT * FROM tbl_with_pkey_bridged_toast WHERE i2 BETWEEN 0 AND 10 ORDER BY i2;
                        QUERY PLAN                         
-----------------------------------------------------------
 Sort
   Sort Key: i2
   ->  Custom Scan (o_scan) on tbl_with_pkey_bridged_toast
         Bitmap heap scan
         Recheck Cond: ((i2 >= 0) AND (i2 <= 10))
         ->  Bitmap Index Scan on tbl_i2_brin_idx
               Index Cond: ((i2 >= 0) AND (i2 <= 10))
(7 rows)

SELECT * FROM tbl_with_pkey_bridged_toast WHERE i2 BETWEEN 0 AND 10 ORDER BY i2;
 i1 | i2 |t

  1 |  1 | 551e8b15be547418fbf590c79023f435b2e9e6ceae7dd8da7c62f0a74071d4ea921eeedc8c29ecd667e57d288b89132c2623411305352849a23a56da226d4c9d21ef536a074f046f121cfc381d2397da977137de1e3462d86105158877c4975784175aeec4328db2ae8afb3f0f3bce90661377912e25ef84d0a444560eb25fb147bc381cef72def876c01d64ec146d17b87df386a61a2c9dbf0cb44dee81268195e54ae668b3b178ac059e71473c20cfe0b4c7b1023aea1573dbd6e7984399f1397f00f2715072061179fb3e62006b0dfd58814826761284aa062be32c3fd46c8100d4c9f64004d64beb67b6c6fb3692065f5aee0a956890cc7b1849c69d893b51f43151bdc541a12575c22c894133d5d47a5557de984ab04b0591d756b48403bf27fc48662612a8f22ca22a9861d4503b8b142c1ac496a6296549aa614019592af9620b3b66699af44b7b9deb7f11f96b0619e1568c15f12870cb3ade059e96ea4bb151e1766ebcda420ec04e064dbc48005dd1872b80dab6e7f68e235f190afbe9a47cac5263df029867f7208de89c61611be4c30be9f9d1aaa6ae473cfca9b6fcdf3f1fb7fced7ed0867e17af95cf1c8e047c33031cf492ea43ea4eea83793941dbf123dc937d7f812decd703033cd6ab43ee51dbcaf8ff51cd779ab4de09fd77037458a73b97a40c3eeafe200e0534e910f4b4b93064b566591b9ca9dc9763067bb5c0e35287d563388ebef687f6c34409b31e8161062fb8d14233ba7ba66e11faab72ef3953cc9ce60eaa92f7ba13f7ad64efd0634bf6eca83840b100749b4d9a57a5e475a97092864bc40da3dee9fca5bc1d6ef7c7ed95fe14edaac5203933a9862d0dd1889d01359e8980041d9f081f323e08808606de0d3e7158be1e69e3e638352fa8e796a5e625f30248d948117c6dcd75037475e23fb96dee84346752ea74dcb9de7e99244e2f710f111e2ea824327f4cfebc203a2c2b9355c01d5ec20a0a4c52f9d7de117ff94a1e49fc5216af072c09453ac394d4a8f47dd03906c91dc358bb3320566b242fbc02662d59b36408528033ed00afcb00894f8302d4dc0cb839f76ad1f9cb0d2ba2ed3c87c623839ceee2113c9861862a15c842d351d12be0a41ddcf0e68cd3dc10ccacf8b7dfa11a76fcca96bcc5226f10c96bdaf1cdb88c4ead866290ea2046de4e17ebe43f09a47aef6bf1d444c6f370a4acff9eedbd895a6990d9573c96d220dec156bfdf3da928305509de856d842bd0d3e966c27f87164a1872fa8fe299412ec3d8bc37a2eaaa63bd48d1d2db931140483a09291a98fa3c5ccf4ac2ad4984fb7468a686fa65d77dfb0280ab660fd38c8c734ec1fd475cddaac21d028cade401b7a53aa04ffe813c9f983810a3bf66c9e47981ee07694374f48f7adfe2edd665a1dc04c12cc4180c9fdf45240a4b5b1c28353d1dbae63434b7bf4e816e06473aa159da5ef179ea6f2c0b5ae4488d16e6423092e31b516bb2c042c1407c53da28f81884409c4d1880c2cd9d314232ba34a465934096a821f11e33ac1e692628b6e2ef0cceb8b6064a36ffcbc7d9ae1e18c423292db5066666f9b1fa03e6995d160fbee71584374770a017166a71582d9f372292b797c383cd99b5d336b75a1c5776fe27ec81926b4394214a1a0a529280625bf25c4c7b2e4fbe70dda95cfe9c176ff82a29369c977578f9c29735e64d7457371839171406b4f642066c7cbc9c45f9f8f7055e28d51ebfdfb5a71c689808a426d9f2361bb76b7b871dbce69e2a65b80b761c4e09f18ef82ec60efe1ac70f2f98f8fad8875d07e25f4060f564d17bfc437d405b766a888a05b4a7bf94c5679d76cb73fca979dfd05acc9aa8add0c573fefe39a550aab81d9af360323ee3bf101ce0cd776c9dffc9561ba83771065eaf291e481a1cf8e93306d95ca08e31d3cd150aa3be145f7dcd352f9c870777d93e524095131d527f32883de3faeafc11ad8e089c9e449eb82c4e55eb96cbe006b6cbf68ad7d73f79b9fb91afe230f01db62a095d569d1e2f619a13d0050a43d495498c0fc63ce33f445147cfb8d325c88147b3b4660f28f0b27439338f0e1ee9091212c126d65a08ae11fec7f434
  2 |  2 | 420cf95170c6ba2f9564e48fccc7ee00b729591402c6e542833f2d3fb47e24327a0c5dc9f4e06caf214ccbe2701f7c7762728279bdb9fe95a939d34ec792105f46d0ae6fe0d74a3d5db450aef5c767817403a38e0c6a239925d383f68d5afd7b2caedc56690126055d0ae4ce45685c7fde2a2ea748398935b647e4b420a601e501791dabe8377fe5e573c1db3e4fa72b86c7f7c9dfd7e33e42cc40b5ccd4ef5d5fdcb9604af9b71eca08bce0955f4a91b12934d166df31860e6ef21babf8637938aa8cb657aa834dd606038da2c225eea2e29b02eaa3207598f05fbc36b27697b2bec56910c1241f706d3af9908d4559047fdf376d6ef865f28cf8c961b6553fdcca1f38234cc799e34c1ab769dde795875af989b159af0461c5821ea2ea6a26d658564ed5f8b2843a2c4d9ab2dada25bf5670a2c2ecd859492eec355ef08e38dd6964ef67cd4bfd95b18659f950602b7d73fcf72d303eeba5aa85c5a155f573fcfafaf80f086c82bbd216ee544c0524ba81e5ff2269e0e687533d6b5eaa084ed7bb24ed583fd0d2ab4ff50444bbae72e532f76da2cbf034873029035a1493794021c8c8d9266e05cf089f39fa6eacb418dee58ceac058dbebf9a9e5c994832d15d836123c1bf986a9bc68ee8dda32fc11fd9d5cbebd81e16f421bd902ff16da16a93d914da0f7f87add622b3162f06e1c46379abc1bebce05fadfa7904a8f94d25ce8500cdaa65e735928181f93bebab1b16ef56e7ae79591797e08a9a358a1ba61a3e7cd2319fbb3088e9e3ea77f905dfb2584a71c056db79a8b26efeaeca9d6828298c4f3d05cbf5707190734e7f747f3036ddc7daec389765dba95e5dfc268cf34f9da750485784d15a3182c0b2c44a5a2c0dc3f870cc01f4687c2b49227a6edcb37e993d0099131884190f5cbb7b86e4475a1c563a19bfaf289e14d5980b54dacfeaba514a8bf4e200a98ce851032c3b36bddb5259a1b0eedc45585be7cc6c59cba55ce84e9f257f132018ba1dda70ea5381abb8d16cbb8d8156565991d7c68992ec7cf40a368d16960b1741ae4cfee3235768d854e29a95c6fe580d533a77967431cd16ee879462f7ea8e4203b6f461c3947a4edf0c3bb2044a11ab772a4b199a33c364b95dbc2dd3e0e1eeadeea97b832ecfaa4bd9a7eded13a2acef1b4ee35dd99c9ba7602b4abb95d83f83357a18d98cde1a72836e9cd1ff3c5135e497ef9a7bc78a59ce75ea6208489f3a320b285ba03d938b1964f475fa417ceaf7ee92a58c63e2b545f4bc3366dc4ff8cd81189c86d05a3badaa648f5ca51b4b50589fdb69906da1421cc8af3b09364fb4de074e66cfb4f40122f32400fdb016313a1dc9e5663f20f12debb43091a15847a30815e082e75a9eb72d3c5f135a69e844dd02973eae8eddf66fc942dcb6bc9c953a31b5a0e32992a8b615e8934f47fdea6d4cca3f22c5c8ee5c3135bdefe8bc8df01cbf1fd41ab19ac9ed8d81623c7aa07276ac06d4a320a55cfb2826963d97e1b30063e91980d6c9709c1b3943073f10dc23d7f89d23d20f5a4eac4b76a3a4735e112bfbdee252e364e451395484905369660bc69bac1997b5f80e6e5f667a26d75b7fe5ff8307da45a04377fcda666c761a619ced3cdb3e86391b1e80fc40557894f817938ee4c8a91e5737d482b94720007b67a33a5382fc36d45f8020ab72675b685e723c82abdf3f27ea6a2ddcbca295729f45cef583f23b9cf516f8f8f75dae283070d6e87512ee29950480cd427426627135b4e9e20111ac1d720c17a267a36d97ca1d20276f3343c9f881aab83fd6200fb2b0897e7b374fd308687e5304bbf0bdb87d5de1c2bb0e0586ffce78a568462e7e519a5129de95cd6a2966a259d78bb9d181d1ae34241cd271b2d744496cc640091dd4ffbef11c4da74dad7b92a3f870cb18725362b0e16aa72e32e2b035944cd68255367346bf1635cab16944c24c20a05f7353b3801bb207dff047c198a928ce29aca8d78ffa02c03fe7b4d651ecc908e1cf967529c8e48a4cefa9330566341bf817282e2a875875d7b9c7553dd0fea50d515c7473457f0a9e9970edeef03feb31398cd3fdaa8c34de4c5f895fd8222f8c37a97e294
  3 |  3 | a9a8d7170b9ee2c655e43ad9a5c5fb1bc135d8cb879d41a1d48dbe9766befe3015ad051bab9daab2d0b92eddabf93b63764cd5899f9f5e9eef1389d27209dd66a207f819b23ff90dc3d15cbad3a3e8994e01761c26ec8abdd1d8449d2c90685ddd434ab20cded902a94dc877db0c695492c97571e19ffd7041c364304ee9c87032564c0aed3bee4d253460c6253e1203ca5107aa4ddd98502fc311688150ca084820e879772fc8a3b32e6e521b3b3d0878f9a2ed2d3f459c37638ff72b4b46196e4cc7be2a7eb9eff8f0d1ac8d3f452e34497bdb2cff4cb1f42efed87c2e1aa1fdf8e61ac10b407103bf4ab1c58a9e15f2445759ef4b0af89796643837e8e9f48205cfc1aec8529ace6d7f1ccefd8802dd24139704e6fe6784c37682817f86d4a2c187abf0c70afd57dcc6813456c9fd8edb177a36e36b83b2852334ce5c04a55da155c6481d454da732f99a6692a78110825fdda799a10e2560bc3fa7e4be22767bbf936999afa8395e10e118b32cb66d045e12944045ad394c45268e16ec39b80a21b7db0c66c8ae78786eaeedc09bd77053d9d94e914f146862e61d9f3f45b5804ec5c94b1728ff80152601c82070c9e8edb48be65e47ca8af63cfb68a687dba57dbdcc7421329c5e7700e6d36f6ebe1a6f076e3189d3bc7198e96714938904e19f44fb0622f9b7b5a98d264166aa06b1b45422893d84a1b49c2c12133634ba302b03dc0665bd326639c7f7d835e2c2917fbf9353e868d6e3a1cf3edb9b9908b52d1d506b5259cfa44baf338a7a8882fc05d67c370fbf3ed55b8d574c0978dbc31bb940f0480c1d1de7efef9dd092a4c73686bb4d2c5840c85aa43daa4121c67b18959d0a2d6a382ffc43582730f1db59e42a07aeac7ba801ef26d4e46f4412045ba724c1b008963db6423e1687ab092312bc116d7d6c872a0ac8f9fd0ee8d9152d50af0f890c74e56d45e4f6360e54feed900b76252bdd43e8e139f954109f1f952333d9627e26adbe5aa7a92f0acf687490d042c0c25b59896fdd728de7cdcf679857bf934ccde276f9a8deec755aba153c3573c6dcfdd6feecfc825791459c5bb65a204504930cd2409e6d66037fad6269d7384ed4db305b0a6241664203ddecdcb09e13e1564de9e41f60723f249bbbe1f24d213cb69a7ab4ea677bdd14693db986d43b82a78c1edf2a09f224c74c4e874125ab0999a109565da6716f9622750a13bc5685db4dcd4a902c351491c279b3af0e538714e3cc373dac7632880eaa7f7b97a7622f991469839bffe7047f98b0db5f5de336d3dfedfcfbcb3a804eb8df0e5d8bee2c14d409ba3d0dfea221006590d0b494e204393e44cb650c2aee1aed0edeafdb2a4a16f136e1ee239891d962296a2c1049ffc64ff5fd3fddfcf04c9b346563b4c1dd2c2594cedff54ba2173e9a500c4e8c5830b8d1aa56bc0cb6b264a5889150bd7d8dcad23f8f66401019440236e812c68c0adc2b9347e4df717bbc7bd3a39ec5e53cef4ccfae1b4d8034a6d48d823a9d8c6ea4e5126e10d3f9909a0301ddf4905d3f8f65bccca810dcf2452cf63b80fbe6878ba2978bcadf5f6ce1223c177bd9df584f2115a933fae6d345d7e550477daeb318845c2cd80d671c117b4cc87e29ebaf918ef875243587c98605620575845cfc0bdc9334ed930ab1e3879771bfdb81f1d9232ddaa78216175296e4a5af4fd67093d5e25aaf42a210c69d34716d5ebe6de1ff6bdcbd6248913b095d862a960c82d34153dd9a885f975291c3336069a1da64ba8e7fe4d3c4fa8f402ad52c0cc4897056023107f0e02c8935d00adebee183b9b6482a2c0ab9651b3ef83754ff166fe89d358c4a10693ba3fe8009117b31d94c8c113fcc34a5a57252120708a1ff364572f6a8ff08f345b595bb64b3b01ef9edbbd409e5a1f8098858b79ba158f9dd1b073ff93e91bf9fe99d1e9482be1d675b00e94d4f5e1b9f34a67b79553b8fa61cd543ee15020986a5f94bbd24eaa522eb0b4a591cd208c7874570abf2bb5ed64c963542cfdeb4e3622b869e20042186f5b6ccd98e9996cc1167d1cfba2bc99787516eccc6e7ba316df071387876a9a386b7615b196af4575920d907e5601bee93
  4 |  4 | 6714eedbf46865ccc25eb476e3a33c8e1b3d86ee00088281b4f2f4a958f04a698d3271b17da036b951c5d8491bcac799fe98d4b45f7f5182fbdee816dfc1be04bf1731d268bcddbe95de0ab16e5f7a5c025ad5815ccc61fd95e393df3707596aa3e591df45e06e93b2ad3755709efe2554d6020019b5e838ae6d0d475c454de092ea1c4e76d769daa066aaef935dddaf8a7ddabc9eb63bb09665d982fde394b0bef1018c59c0bfaaba9a4e89a9b5d0eb17571594abd6925d539a98d0fc8d9b9b353b6b803020a6451aabfd515e13e3edc5e08d8cf114ed68c6330805b6567814cfa81f65f28cbf427cd46bbf1b1eaf95f01ba921db93e0b33ab062b8f6404f4102a7cf4697281614d43db160280f4b8acb2042ac46d3e372683edfdb6837c3623221646540727f5bc83a95dd35bf3ee71faae601022edc4697670999e35e159282a621717eb96ee6e4c8c3b48cfd2be7213b3c92f6a85990b7c801779a79d5133287cc6efb3dba15fec27636792327091e03667eb5414ede1f326db5ca754353bed414af4c0684e21d4d65ab091d0cc035ca554275b53325a9d237e5f69bd1b6b839e3bf1ae793ac9c1e3bb596951784a476afcf5113f91d472b29160c3002ac8136d1ca0870b9095eccc085949061a30ce6de72bb5b0d6ec811e94e1c969447d35727194375e8567b10331354ab87349df5ae5ca27e7fe8bb888d24e0e1694b527246c67c2df6af188966fca7ecab0dcd46d8230d051987e9d7f5d13d4f6d3da28ca923f1d6e3acfe9fc925cbada27dff4dacabc63e9f8716610460c8dd529e27fb9f9cf4bd3e1d102679d8347fe690af191d67beae99f9b174a130c1872be9d727d3bbabfd400861ae2be3aa0630bb426b235e759b9c6a985fa54b432f3a5fe1bbdb99da639d25722a5c7ad0e31913fc583febd18d6e032093721260b9efcd79ba41d062217902d67086aaa16ff6a484d946804265d7d52a2650c3cccceba07036b56bba23d980bdaf04012a19394be1118408dd3acb3c9f8a634d635dbfb2690be4a6615b67573cea41a3350d2ad7de8c7035ba7600e88e0836f3ab62d35b1c78dd8241227cdc6f47bb8654e340a4b6da17584d1d6f9e8f156cb38ca95ccd34c9376f1be962cd5f7d33187505f77e90453136858d1182aefe2e82d2c325103dbd14988c0e9feadede6e9d51b6de60244c5c402922b325fe1cca8e452ec77de7ecf74702dc22b50cd13337d8ef19cbdd3ab2cb813cca77a929e5778096dc8e4ac3666da9585deddaf19ea3ff24cb8f9444430d04244140773f0f7fd5efd39e7c185344988bc3734a616938bf9ace2092234736d803959fb59ab56ef40122624331c95b14eaf8eb3c6637a5c47366d110b1d20ebdc4c735eb9c66bb57d29e21882792a84b1e746d1e218402c89bdd6ca94ffaa8c1a9edeed17b4a6c2d48a1c19e4a7af2fd42be2c9a13a80dc70ecb07e62509be81336129379945608225de551625badf7b1bbcc32183eee53add40abd2d7badd38efee588195928a1763cc39bfefafa2407475f7ca486476796a21e43ed47ef2a4bba7e47f8625f4ca85845bb7410c1dfd76419e37dc466621f3812fc84b87c0b387b68cab2a6d593889b5d988ed472d74f6f3c6caaf7ba102f1fd7da4ca2be0835da0b738a7579b6aae07bbe802bf9ad68a83b8866d5d79422b5c86ef565aef679063e85235148fc46a3351ad67f758ede5a7429e03314fe67b038daf2f9f108c3b7bd7bfa46cce236fbe963b1ea8cd1651ddc066c2d3058522287efe57f1ac7ea6b5408a12e9da4524d551c43a15ce46d76b43760986546e2eb8c4ac1c956b5a2578dadd6313db1f7470998ec4b3f29d906dee53513f075a7033412dcce604df25c6008e538795c1acc4f3ed98e767f891cfbfbed56416898329fa7baa032f8e3a671b0778d8e3ac2ba89365b6e95c8173fef9294f09d1bf53d15694611a82ff8153c55395282e22ea740a07cceec2aa9dc5da8e78199fea82ab9ede3481dcb1c1987a15601fd9399aa1210266b196a71a84b867a3dfce60cfecd105d5817ab7f2717674661f9deb23b1ebba413859421b780c36c5e30b20331ac891cb5c3f0d2eee6cd1490404
  5 |  5 | e2af2ac479786b8ca94a7185f2a92edbb31672ea96b21c03eeb4a4fb569c90f279a77410296881ddd54da7bf5ef6960d00c76ccaa803d01846d73bb7d889187a07ce24690400c26de1a5dd16cf491b05e0bce7b5cfbea359d0d79fb8d4c8dce0ec8fdb80448974cbf3a1756c3944d0479c3358e15971561ff0f548b5a45e109bb59f0927e2b3c59b18515fc95e713ad60b677ef9c8e698b458df3764f91f946cab980b40d0de84c93f9436046a336525a76d8ed656277d0355d9891438a4d316bceefa8bb09baadc5becacf1a1703eab465a0dbfc3c2516c5e91faf904a6a228f6e6a2424c357d235a3964318f17ae94981cf9c2d35ed957190305d76d242bf34bb0d256be98a3f3d770594dcb1e8f003b08ddef685ca3958b7865cfdb33d3a09a8dac5ad603ae15925049f21236f9a223cd9ad67b9cbcaa7eee47fe09011dc30d7d312ea4967ad76d5d0e8513a3751e1652d0949fa852c0ef62bcfeadcd9d8dfac4c9f26740177b77f17b02a2dbd42f139b7922e32c019c4a0f0cff9c6a54c24c57cfebc5231433c31828bff5cd6b1f55ffca7de7a212fb701cff40f46dc5f82a67d579d6ee74ccbaf9038b1d8301b79770f37b0897b8747d82e80438b888eea4ff7081731b943a5f6d89c62b5d74d89c54c9070e021d582ee1a73cbd2c1d06acfee51d21f508978e0908fe43a590ed48dfc0bcf15b56c4f6310d6926f84121328c99e26f62e9dbadcb25f3b98a71b4cb73c569b68f1f2e6d5ba0522dde05d2a7e879a1ea5164222b05654be981633fb4ba67dce7975f20c0b5ee06fec6e503c12361c1a6eadb5a55520c4ddb61580e70369654ac78a0cc5c1d7d18212d3383e92041217424be9bfd240f09b9e39d91a26af74f441c5cc7242c6ca80f79099b40e594343297c27d3258ad93c88d680e407db9df682b64efc4ef11ad75f45509752a69a1388759e317a651be0fc4ca39ecad8d3060e3d11246beb942586a51befce58ad3cb161d5ee7b555ed57fd9ea8b289eff11bccb2a8fd0639944cd762ffa1cc5fb6e394f3b7f5b6ec8bc28a02f11c79dce2b5a0fe651df8594219f2b8352118a9492e4374c04c836981b39c3f457b9242f2d5d3802e8e9f9ac5921ffe8af8072385133014af34ffd10ee623cdd0f9ebf895bdba3cfb90931cc5e0c870fe65efeea6f2bcf77f9be5da02097696e840a4833e0b94c7a3fc6572f03c24c6d603f071e7f31cdb6c72d9c722d05998f1947ad1d0ce970d89dd8955de97def5b36b86b0f1f8380ae998a6051549d3ce46687b943ac1f248521d701af26895ae681e7db37cf32385c109d7804b2d7d7f1b07151d8954780af6cb7114c73fd7025d3563a3e43267b79a62a0291d567c92508afc748d586e2d5e170cca557ebad337cd06fb783895f24182b9b4c76389a4cd0143b2118be0212aa607d3330539078d1affbecce62d7a813b70cf18cddf256d6221565a6c885ac6d8d02aabeb853708118d0ab55a74908e10f732b53b98410a096acfee7c5a7d751e9efe561418bc5c0e362333b1de34f032a524aaaf696abdb4c28220414e7c7fbc8fa44a2c62d2f8e78faee4061466847fa348cbb414e734e812ee487f0ab4e9a734999cf2006bb8b4f240067d11093b1c9f9898c3a8501b8ef432a655e9a44848ee4a647d8f6b97f8d7e6b787bd645b65b8385715a9d723d2da33d4ee6c77c25f4fecdd72f6e376add1dc0d531c010915aef51ac842a1616bacfe9fd6c9c401a55d71f85a685f5a52dc86055e8b16b674e96c1576019c3a8c1bd71d3a1e1c70dab612b14d5fd5b1277cc4e4f7ec7eb1fafa1a0b28d1a6c9727886503047f7301c87946fe13a0392e6112f0d2b448f2e15568dfcffc544bd33abd997789164d363f64ba2b0eadb8496f763b92b4edbde79d1ac038df97209e9baed424aeebb8401f160e1234081c46b3948afba815afab9253ec9a9ab55d49b7939b66f2262591d8c620781911bb7fcb59d2ec7f0e4a17abe64149f0ddbba8d472921e09d48b462a5ed5852132a00d32c41cb1f4536bdd428ed4bf8badae13aa528ff00545ac9f44172fd3033173b679ee98ae96af6223443caae1b18360c11734e0b0297a33fcde27b6a
  6 |  6 | 6aad36d4dc1e05dcb54a3d50163016e147601777016389623d716422454afe2ff385d33ca981f48f0f74c5a6557bd08d9dfb6adadf6c441340710ca79c7f793941d20a75ef59cf378ecbf0d7fe53114d9ae2ca1e769a842048fd963a2b9e85ce499536115e60741d25f8b553ebfa83c8c55fc4a1e1f75e1075fce563001723c1b08e6d5404f429c3a8ad924ee98c97173b07264dc1a0c9fee7c47187793fc5afdd24115a86907f16bb70083a566b6bd7fb46dd024b1535c69b61cfd39b71df268e596d5c740f004e2b26dbf3b70659d719e091566cafa5f164ddc447d9db6858f08b4c8f6bea68cbc747c32ecc30b6d2f17c5c6f15227904d4b76d249072677f70861eb638500c941b623171b99e4be5f16817cc55f36dc30e3112829621a43e9365ddab2b00dbbb62fad25567121095d3618b9af81934c4873123711553812c19812421ce671d6414564a232c63a1718c18bcaf13c1f6c8d22863c4981fa5cd45c86869668aaba5cbc837343f5e4489096a05920f0c5313400ea86cea5b3dc6ae463a834d819165c214eb66e07291e8ffba130ce018a09a5d26ed88c39dec9e4acec58cf50808f2cfe15697912d6617e7e1b4bfdf81894ac7cfaf61cb2611fa61fc8be3f057b62bd084905cc64abfb7e6c2de06a422ddb9be37470a07d72fadab9c8dd74e92da87d95f1caff6029340dd04ec036aa3e06f6ef746329ab7958951e5a09b17439ae372898bf9d90b044fab3826354fa67a648954fc5b837f8143b7c7f76aa1a06301c7f65162759f51145199a6d6d40431beac5625b823370e3067070bb76eae8d8807013e9260eecaf013cef610521170db583bb1f69933ca5b2637e254fc7e3e7bbcb9171683c889ba1cc99f8239c350b0c738eda72ad33e2a56896aed9999dc4557bfb2ab0a6b7336d9a1ab67ac3b986a58259b8860687335d6cc3ce874790c5ac3952393c27e190db5491a4ebe2a662962ef7101805c613c46f56b392b48807c3f09fe1d30d42b85bbd91d13dd4e10e5f9eea4cb3a106245148a95dd58f5adbb8a2f45a638ac791a08fd718d0a983dff0fcd2f672bf584fa69f942e9bf325ba8bfaa0fe0a73f4c40e7beb1fd6e3a1bf445edfe1140b9bbb52a95c7001ffd54afd6d22bdeb9a776f636f2d13e9d6fc9df8a4e0fc05ae42a83350664483c352a97a5e82d5c15c99903b5433315ee40c249afad48ad1f292648747f20cef9acfbf152446a7a3ba7a8f9167a88276130029c66192f8c430bb6ba6e65173f2b234028d9c4e6f08c5eedf164f4db0a71e6790cbfed805d5131ca3382fda25cff92151a296c968160b82818ecec142fb70c24f0baad45ba265c0a2ed3c83e1a532b2e7841a6ec4f24ad331c1a42fd7ecf376f6efe53dd3e277c56cfc69005be14a251955ae53b569258b5bd4b830c4cf20417711c8a2581c7589dbe724458da5c70c43e756a5a9149344941d646bb564a5f3dd3c0ef562384b0f84d0a7d3451f4cdb797629a7ae72ecec9bfe4b56d260c9605de1a52f16ab9b5347dc74887c797757d746c364e2dad16de2d1acd77ba95f1a22251d058b5dc8004da2f207ca9b69e4f0b861150d2b92ca9dea3c2cd7b8b526f51ade4790809a7c6358cc0c7cd57bfbf8bc1fa5ef2c597ce459288923f72331a75f1f2020d3d4a753aa96f07d2c430a8b7e1809e6f37be5afdccf7e4ea7bbeee8019d879421f41fd7c9c3afa2c9c7f0aa483f68759b2791c5a861ebe6cc8d1945cd1b8c654a3699271ec17d361318c7de10bb8b0541fecd496c079cd7a379eca5584bd6184610cc46316964eec388e522643c2d5467cb5bdda09409fca5f0d58dfd621229ac376c751b0c3600f46e45e3aed6547a8926d2e8a1cb90bb8ad61a54a26deb283e453d0c6c18b474b402cf8c1a52999c792cc8d6463bd2a0655bbf04a3a714dd94012ff50b341e9481f31576f95b1b0711fd906bfb05cdde72f21ac0341b6eb37fe4fb856753ea2b84f16e46f66275f2bbe0d4e6db7eae99ce4267fa75ac7b6dafad35549d9d72e5abafa2a4bbb345bc2d18548b95000d0d5c9a04e2b40d7c127348b7665ae61f1b7471745b7a23446f4913887702b82f8d982e66e89bb917f59
  7 |  7 | d416da5401da2833be05b581953f8bed117a4e33d217a7dedaafa56fca4343e67b165a9d0ae730aea62e83267113220731588ac53d5b4c84c688dab1759412ce4b16064cd44b864949e03ecccde27b4c50bb277986de27f5603936ab85e959e2ca3d8445b1d2bca02091540ff00b11c2f8312c582f0f492bab19f7b0d922272e6c6f38bbd9b9eaf8026acb3d8c903b9f385f670f2b343b194c767abc382da6997064bc632f59546f1624d87f3b341dd6b5a6a5b684385e4dc657a2f83884fd028c07f569edc2711e5718647b1817327f06ff4ac9735ea15478c780061fc6617f609bce672fab730ad5b9b2db6fcc068d98fd9a3b76801e03e86310c5494ecaa31e3c1f46ebe17d3c48e3611c6df7b942d41affd543da9176323656445238d014c2238df28bc2957ba4c1fdd9aa0f1435a1ae2ef35e1c158df568cdfee7672407f31a66053165506245643d4322f50357f66cc438c314c4ffa5e37d5c909d2aacc369c5f79693253af57d9f8ac91aa23575870d3a1381bda68d84a4a890dff51faa00763ccbe7618cd2fe253729dce4106d59a5a468d436add4787165d594a05b38329ffc5129b2ab7821dabd24253f8fc40e0b35648b6fb84bb3e4f56bc23b97d09752d746e94c2d833068f359be5f8391bcaf96ce70986b2f961a3309476a5163328c1eab802bb11b3d040093e60eb363eba0f068a00761b6ecbfefe6d48efb186bcec0e0e577f22c045f24a4225aa9763558efc3550e40307f1ba5e935d151260b82ee75254968537c48a3e548ad8277459810e4358a37d2b80660a268c99110b3b406104e7c67a35e4afd7f2e3efe1191ae84eed3115035a462bfa9f8fe94c0b4ec8646723f8b24d44ad69be29d259ce4c75b9801da7df3b14dc1f118eb29f102ebf6027ecefdacebc84037dd7cad0c7c4ab21623b2dc10bdd7e1b86d9cc52ddfcefce9e07f6aeaa727ac5dfd10004bb351b7e21a397756ceb15fdf0f23d35f07c94e6c01b87db0de9bfbca6626418b9040c6a15f2b15d025bd39b0bc95d92de444455a6b5d3399f49c66b7ce96d0cf8f5a9459473474850d1ce50ee5c66756afa9d0472857ea1f780d355b2f8df8efc0d3238057ecfba48246b35d284867edbc7b1cc9d28b97af403e815c59504a7f48971a744034a71693db4a9c41515eacb406732f04dcebdc186759c03b741b33dab78a18d38aa2ddbdf02b81d8cfaac9b2a743606ac576a4ca50674d2ca245b41e2ad2cc567b4d3b9178b321fc8652c47a077f896c9e8adfb8fbe2ca8f7c4feaa1acfe87c906d50adea4c8e81861722d389ef6ca54774fd11b668c307dd7ac504676fccaed13128cc576e00f360e2f04dab76145def412b328ceba3057d1f1b408f42b3dfc71c1570ef4e566554aa18357bb32637579626e4929c65b82c2c72a8c7c8e8df4c0c7b5f8f0bb54eb20a6bedca48c65496c97ad35729f1ee65e6618c2968247049a0ce0e2a5ef4f8b69401d43b4fb989b9dc33cb3320473abbe4924615b2560673dd9caba5e18f53bda6e8306447925a77406533de4d030fa118f100ae726d4b411ed0226368c0b8940c07ffcad94fc7d24348797e324104c66d5ac24a8505b37cf77090757a007cd304f19227cf76b6a2245ed0f2d62dbada5b2042acd5b7be11bd99d1c62e3ba15f193ad5b2e963b7b7e5e8d80a308a2fbb48d01a964b9fb6f8d4621226d3500943932654867f65689b1d048eef2b7c174d8b0336c28ee6a4953fd65bd140e91d45eb3fa52115ea6a1548e21a9bf7ca80eca3705ce1d3837ee149c2332e96cbb9e6749d42fdfb8ef14a5e877ea8f297e5dd8ee1e671bfaa0cf5178e330b816b011c39eece9bed0e69da57be18ad46dd4310e0ae12caf4c3fd088e73a66902d727f9c3484444313f8da2c50fc24717ec71c98d36c2066c508056d508f89d190428609a43696410eec46de55a8fdb25af00a685272a9ae7701bbfd8a4d379a62a0b5741a7226e71b6758db8512093badd9265462c733d9b6e59d32a98fdb9864405b45a0a5c7c194cf687b6cb14e8ef479a61a56f8677ddddacad33424ed3a0cc9bc8b30171624fbdec15eafeb3233a9f8917746c1b816b1f11b2c43c7b8dee7
  8 |  8 | 23e43cb8a35df2d12620ae4c246c9004bd04143363121af4df40ca3aa3673171dc19b8cf5c329c75bc4da1df62377a1cb27be21ff61dfca9e12b0e304d10db8d362949c8af465aa9991f8793bb9ecaabc9743b68f49af09dad246b80446cb197908eef65cca878cca2d24dd664222a73ef415583ef5fb9c7eb2a80acd3800c823bcf0a037d558dee3540149ed080290718afba740281f77c92d947a8cedf1d4ece7b3d9fa06e54248070e31b7142e58b8b04e1fb102abb86ccc529df8a5ca0054895cad7afd5352bf72f73d5ad8398fbfb96a2d3b8e550439cf470a0c66f2cc432786b396a0cc6ade1fc6cdcdc0f750f0712a59c29f154f432abe77400a46c62d52c526a1ed281023ed229c4f89c2c3f932004e6209d65da55f78840c8a08589a3a1cf80e1335fe7e4d3e3adfb3e11c781ee4a7718f6c2ebf496cff2019208900d0d022915357a8d4141926f57a5cd729b9af8796ca0fcbd74aa2dd752fc39bef43675e96ce7dba70fe8e0387e96333ecd5f8e17c3b48a76f8b098c1546b452c52430518e88dc78c1d28d2ae6b0ceef1f35945f771120467abd081f63b4ac2477282f6924a86ab3cfb11d2da31ae224f6711ab3cdb352cf7cc7eba98e1080c050745ab04ed09a4ceb12736bb36ba1aad2b9fb8ddaf8da5b4a45a596831fe0815b00691cdb3cb4a41cedc1164a877bfb407c391255d8590d67411960047b544f77629c6bfdeb21b1daee8f409949f47c07984dac403191e7da8df4164ca7b37720e96e697618fdaf51105bdc71d4800054ed5f234fae990ef7ebe9dd3e06808676a927bfc137beaf88a57017e28670d5c91798a88f134d094f38fc72da1e258b2cc669a8279e773ed4ec108c2a92ed8c77318329eed694d5e333e0436cf76d201482097a13fe8c8f19879e444bb00fdfea0cf744fbc8816e6a9e4ef97853c795e56f236def11d1b038259d67755c1e36810b6f3e08c49c381849fc6e1bd2a227247a5e2e67b75d57b2d2b57c22ce4df39c0a20abe6886c4bdcf71617c8cd42f6ccea3e04f86ff33e9655efa6942ab6aa78086ea6d220b17832df1e59c69e2e9a87ebb52791ca17775b7ea628f8490f920f312482d416f0bd2928cf906efd203e48a8d10922bca08a94f056da68b7689bd403f0e5fa6d4ace3ce5dec9a08e58795b8e4a8a8f89922b7993dc137485c6bf1db8b46a3177e731e9b7c02996543cbd52d201d58a883d48fdc6cb9159635d9ab3044e45cdc0ce72bac912ee66fd4dac269ba03113294d2e179e8a2ba84b4b8a9e6e676e85c78d81789feda294815c9f1510cc100ac396414378f2234158d673771b0f79469faddfe1aaca5f45b7abd1cf11297ddc9e49d784b0794afbecf73aa73a735da4381b879bb68b5c8ed483d049a34dfb81a27a54ff4a40ec7519ecb86b0efc52ff766b555999fe9b7b7f2ea8b8e07848bbcd6740e1883248cc755a1426f8601112d849af3aec216e0fce2a003542cd2969cf5c84eaa877b8d09249005f98f165cbcefb5ac1b0bca46ac56c71052d7b11f38c8d291d9cf167a59ba7ac038b9ad4fdb271647def823526fb61c50f28c5124a8d0f509df8eb9ee1dfd8c7319d8109c4412ddb1a21353270f0d56e5fb628168d23ac60bc4f2d4cbc3acd3ee770d4ab49eddb6fceee27bba777c2cbf08c239df005d75858752ca6fe5aadf3b525df701c95a4159d02c6bacc1fe2d7862763b18263625d3de520275e07f4af807bc03a7e40aa937471ccc90f13a3d9e717f1dd667b2823be6261acfd575f969e62764a181c27e4274dd4d9b27847e313f366125ba9baeb5a9bef9c37a5ba09528ea782f8724398faf0a630afebd25427649ccd47e19968b57830de9941a6b0f9e5ed803d3eea4e21d9257f5b630ebff2da13771cecc9634fab670e6f198a104cb025201074c58d4fab8d458768f9891646227f42fa09778cd8f6b60cfb609dfaf4a6887810776c20292464a08f1b59bf6791eccb01c739bef0d22ea8ff3708e586573f63c805b9174b31f9144dd91a576fc0a444c48ffb447ea2356c4658176c84bfe4aea1f39ef6b846ab01b1287f07e18491be1b30b2990d46eb024945eccaa31fb60812bce3b1bb962e0
  9 |  9 | b43a40d36bf0a3798770dc05b0aac4d635fef3693e0450b88cd025918b631e9df916a0dbf2bae82a529f8111ccd1d12c7a8860ef5c4a36af6d57e52768b20107136eb2215b32878887f5c29df34b1e0972e46ddff05a23a8bf20daafd7ca65fcd55fce2ab2609fd77998bfaf2e45ae85313222e5eb677c2637f991de5652259773ab7d86c1fd46acc4b1d4f0c8e47c30d3bc675df4e864f9d44097298742a067faeabcac8aaf2c317b42acf599d03a4d9f4f09f19317b993bfb8673645353f9970327aaf35a788b52a8f03a771dd4618daa3b084fedea0bbe057c82c3536ac2c0d8a67d2f5078e7a2e7d4c29bbdbaa21f8f158e8a4509b5ca805dd307428995346efe2abec8d4bd808925cfe21317c1a0a4795733633eb8a8b464c3d3e88844237c4b0a2df2648611e0ce3119b66e0cc37da51c7cf53fd64e1bafe15a0f827734705ea0da00d607b3691cac4235c065fabe2594e3c455bd3f3b81b009aa03b79f3949d8bc0d4de4a6a8e64759842bf3e30e351c06444c8f7c190b1a67b22f38cbe37b4161be95076cf6b6b282e3e2b665409100df4a258d4ab0c9fde8fc6190d598a99fdc4c385a9b8ef971e20851a5baa081dc0ec5dc3ebc11a8eb30b952dbf075186e54f64ca8a0401c4a5fda149cc114307b5fce3fda6beb98a16dbee8775fc78fcdfaeb63be4b8b1af3a1bf03ff5a173762f5c16b8bb68cd4a253ae65cb03db28a3c08652bf8c4b5992e2943885882d507b1a6f173e63ec7b883c719063dcd45f39bcec5fbc5453ca178a82fe1aa0b6a2841324e05c204f1242c655b6aab95b84e1c1553e948bf107e8bbb70bd54c6e652241a0680c61a6e81f98c5f0559540b1916a0d6c249f2ac35a33fb499787ac0e66ed79e420d54fefbc311d117f3315c17e6f50e2b361bedd5787fc525688fa2884859af706afc531e34ee35501387e052f3aa986d57b7184e1739be07732bececb4e2cbeb3c7415092fb5e2b89b1b2630b530b2f452a7466b0ae8b8f9d2a7f5945a282805b9ade65b741b25b89175f3a0da0262695424d11a7464d691f5a78e47faa9583c8048eb4fdb35754e4482aa653c56cfc611f3c55bd5521072ea2ae6b63d981b470f0a2d652c77142e9116c9f4ec72f72f07419f076304dda2f2e7e428c920b242a6f930e596831817d9697fddc92e63bbbc1ff36d8a1a4adbb9e6b637501f3ed0917314fc1326eec9f191070838790182450425fbbbe61e5aa673caa47a351897c81efb3cc0e587c78ccb74bfe220e60b2b0dd9abc9ba999d593fd17871102f8c9d217dd9942c16be9ddf9020aed233a180cb60c5f2d568082f6b14ade79cb8b3e8abf493dcba6e355ceb4ad3095bd4676dbd6e0fc305d3e26fec9b1ded6494452d3b4722eb7489ea006f0157bc883c5139d0238ef741fb7056ed581b591ca36a325f840800c9f3a8c3590d6b72ddc892d3b055a4e9887aea32862533166e4452a7600e7d6bd6e7c06ee6cc77cc7156b7437082e4d53100ec377eca5064d47fc646f7ff2aeb693dd37af11a8b72059ee5d397c6391357c960225624e9194b47cae110f493aa4a1d8c6e005315bbe118ca098f8068b3890acb1ba2df1d2025716eaccf517ea34e0f960c683691793938046d55f70a9c187ae5698463abd09719c7214d8679ed6472a72db052801d4ae6fb98ad0b20eae93098f15b154dc298c90c85df97423970d3e57f086b760158267be81be183d06e1966ae4c6416955d52d57e1877434e87c2ccd54712ea2991d182b5546377a073a94a2d4af8fd88ecc7ecd29ed88ff8d1046361ba5e860d74817835f759d02225fc3a61777689ceaa0b3e461953d159f8271ec8c9a836be6855009fd173852a135c1fb5eb9ea093dfeb89230554b74b04f8affddca6cef936c9a0cf0bfc092ad4d687bc1a637b66c60ad7d658d7b8b3f3479d0a52717160a5dd0152529f47f413d8c489d4330406947bfae8db73a98102599cb8b76e4fcb5b8a5e1ab5d9ddb2f9fa2598031ef4094093a75754c7ebf2736c630e7e35036ad88ead0809cc62b2d05aa6bbd2455535354d66b3f6e64aad5f93e8cb97fe4ceafb95f5860fef758941a844d2904c5b052127c297f0bb846e
 10 | 10 | f933fdd5a341a39478726fce5a245eba858f110ba6b2e9055e85334f97617b4652db7871b409801e40cbc6b4238504ccef81c011ce46214176cf788042f6aa3ce1924409a52ff1bdce964b8d84012d26be696059e8c6fe10fed54c01a89d05dbd4935f54b3feeaa1654c726432382a681c9d10bf20c78689f233d70b51c3bec01104e60aff8e545f68179b4ff70d8191f7ad8acd5feea21ca25af1aac04e6870375cd5e2b6312249da31d10325ad5df85207e4bb59a94b0003570c6253ab5d2e2a45af22d5b2ad4eb397aa4830b471d47e70e5ffca34e854baea875088ea7d3221fefb93e6d43084eed216ad67e6e5d2a765153da96032b23829a222cd67a2471d65dfc73423dbffd3759d7684b4be6c6e661c88212383cedd441822788dbf11605d5991ffd8a567168df5066fe70a4b4c1f8d87ee877d80dc565db2c7883d449869c84b7ce7ac932596d8b480e86f3a876d9f9f80a75e1f4033739cd662cc10ae10a9b64631a7bd9a3652f6899b585c805bf12c105393df6f193c5421e508172d296b924ede79297c3ad78f9e24d9dbccc5645278b4a961602c79745992c81bd62b5b0f7436cee369579f242688196d73e71311b14f9c2272b78cdfc1b56ab612ddef876109bf0e6c8a0ef99d7d88293159856ebefbec00da10ae8f48d1932fb9c3fb83749d00ee47e46b2bd34b98cbfcca10b0a5da2f3f7402930c22bad084848f9537eaf361e26ff55f317d9e82efcc20b4ad1875764c9113a3631f64448130354b77f667cf09239d986b0d1351e5ef8885f574beca051f78b432e959d48947c10104e035b7330737c064d822e55ab1ce5fbcb9e19786cbc1c6546beaf4e9e9be8af96fa3869f45f3e4504f4380cf11c241063b8f039f21f3248df11338f4f09c26caaf5aeb3cb48f25e473afd59cf1f68d0cc886b294acc2d4c0c78df59c51d9b1192415a6d6ba101f40facd76215dbe7f2c5373565ee2384d4bafbf2850efa3e442c0da24fefadafe972c59986aaf734a785b4d951b6d95d9fc3fa7c78d37d108de63501a5a141996815977e7ce08724eb765bafd0f56610c2f6ee06957a419334d12d6bcc8b9d5b99d88f1d0a4565cb75cbee15e26ec892787359aec5b7f17af38845e41f8a029230d4c1e016314ea252cea21744c147c47070a1031347236f1fa1767f24edd18963c075afc134f37b9462921973642ed9da051339b0519c07b22727fc8843ff6e713a988319ea3c9691c25f6cfc3449c4da00ca8881ebabdfa2d635f645865291cf8b3bd7b87018f89f8ce7f5a742cd1fc00f58513c85a64398b380d51653d9266d2113854aad3fc1fcd4f7edf3ed64c28a4e133a375c239c3b893b432c16cfece7f9b61aadb7479d5efe43426c13b5f14b81c1050028f0637928c52eccb3230c4d775c70d265250deac412c53f2372fec23e9a6f88280926300b9db7ba93718d70a69b57004e314f2977550dfe51c673650e11267187ae17c742c2910d268417ea547d7477ceba85b2d8311019831d05215518c7f13aeb531261f120d4041cce584e2bd056d22580099234961b3a4e69cecf51107140a7f4b80626fee6bdb5ff6a3ad2639aed6d39bfa2a344a6d441ecdf5f0365b1b7c5323300fa5edb347019a5c604d1aad743df1768f5b5c4e17b5502bef23887b7471231c5ee76b717c2c66fc6a47e66a5dfee75999fb501b139880e34e242bb5acbba6bbd4a36cf5ec4d7ec17adec3fd6d2be69aaa91402148d4006cdeb9548817e6a0665a8219aaeb8205e21abbba92573f9169e68a42c6df1243c91e62c9e28b5415a65c466c019f84ad19aaf06fdf510a40d29fbb0a0b1c225c47b38870bd1c717a34c5904184158fc32b243c651dadd3b0aeac8b9e067e1bb50a441921b6b4f5a1bdbb5f6d5ac6801c09a56e24b59574278273c69d9882824d1732c355a9d6113756cbb1b38af1b988379c66aa8e09db7f365045ff125674f3fe17f0eb7ce163d042f8a51373580d0e04c74ea76a8e9622cb8d4e4c0b1c36075217f2851dd93b74b9d70d29591bccb29123d18966a3b4ed9aa4d253f42f98a31d4a9f702a89bea8beb8256d56ebd761be5449497b320b8e52576574a5db7ec6a6
(10 rows)

COMMIT;
DROP EXTENSION pageinspect;
DROP EXTENSION orioledb CASCADE;
NOTICE:  drop cascades to 11 other objects
DETAIL:  drop cascades to table o_test_ix_ams
drop cascades to table o_test_bridging_with_regular_no_pkey
drop cascades to table o_test_bridging_with_regular_pkey
drop cascades to table o_test_bitmap_scans
drop cascades to table o_test_index_bridging_options
drop cascades to table o_test_non_index_bridging_options
drop cascades to table o_test_toastable_offset
drop cascades to table o_test_bridged_hash_btree_bitmap_scans
drop cascades to table o_test_bridged_index_only_scan
drop cascades to table o_test_toast_with_bridged
drop cascades to table tbl_with_pkey_bridged_toast
DROP SCHEMA index_bridging CASCADE;
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to function btree_index_content(name)
drop cascades to function hash_index_content(name)
drop cascades to function gist_index_content(name)
drop cascades to function generate_string(integer,integer)
RESET search_path;
